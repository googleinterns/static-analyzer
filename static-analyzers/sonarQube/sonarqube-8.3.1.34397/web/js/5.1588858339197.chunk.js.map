{"version":3,"sources":["webpack:///./src/main/js/apps/permissions/styles.css?a730","webpack:///./src/main/js/apps/permissions/shared/components/SearchForm.tsx","webpack:///./src/main/js/apps/permissions/shared/components/PermissionCell.tsx","webpack:///./src/main/js/apps/permissions/shared/components/GroupHolder.tsx","webpack:///./src/main/js/apps/permissions/shared/components/PermissionHeader.tsx","webpack:///./src/main/js/apps/permissions/shared/components/UserHolder.tsx","webpack:///./src/main/js/apps/permissions/shared/components/HoldersList.tsx","webpack:///./src/main/js/apps/permissions/styles.css","webpack:///./src/main/js/api/permissions.ts","webpack:///./src/main/js/apps/permissions/utils.ts"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","SearchForm","props","filterOptions","value","label","className","name","onCheck","onFilter","filter","minLength","onChange","onSearch","placeholder","query","render","loading","permission","permissionItem","selectedPermission","permissions","map","key","checked","includes","disabled","id","selected","mounted","state","stopLoading","setState","handleCheck","_checked","undefined","onToggle","group","then","componentDidMount","this","componentWillUnmount","style","whiteSpace","description","category","handlePermissionClick","event","preventDefault","currentTarget","blur","onSelectPermission","getTooltipOverlay","InstanceMessage","message","showPublicProjectsWarning","Alert","variant","overlay","href","onClick","user","permissionCells","login","Avatar","hash","avatar","size","email","initialPermissionsCount","handleGroupToggle","length","onToggleGroup","handleUserToggle","onToggleUser","getItemInitialPermissionsCount","item","isPermissionUser","componentDidUpdate","prevProps","renderEmpty","columns","colSpan","renderItem","items","users","groups","itemWithPermissions","itemWithoutPermissions","children","___CSS_LOADER_API_IMPORT___","push","grantPermissionToUser","data","catch","revokePermissionFromUser","grantPermissionToGroup","revokePermissionFromGroup","getPermissionTemplates","organization","url","createPermissionTemplate","updatePermissionTemplate","deletePermissionTemplate","setDefaultPermissionTemplate","templateId","qualifier","applyTemplateToProject","bulkApplyTemplate","grantTemplatePermissionToUser","revokeTemplatePermissionFromUser","grantTemplatePermissionToGroup","revokeTemplatePermissionFromGroup","addProjectCreatorToTemplate","removeProjectCreatorFromTemplate","getPermissionsUsersForComponent","ps","getPermissionsGroupsForComponent","getGlobalPermissionsUsers","getGlobalPermissionsGroups","getPermissionTemplateUsers","q","Object","assign","r","getPermissionTemplateGroups","changeProjectVisibility","project","visibility","changeProjectDefaultVisibility","projectVisibility","PERMISSIONS_ORDER_FOR_PROJECT_TEMPLATE","PERMISSIONS_ORDER_GLOBAL","PERMISSIONS_ORDER_GLOBAL_GOV","PERMISSIONS_ORDER_FOR_VIEW","PERMISSIONS_ORDER_BY_QUALIFIER","TRK","VW","SVW","APP","DEV","convertToPermissionDefinition","l10nPrefix","getMessage","messageKey","cloudMessageKey","convertToPermissionDefinitions","isPermissionDefinitionGroup","Boolean"],"mappings":"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","file":"js/5.1588858339197.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioToggle from 'sonar-ui-common/components/controls/RadioToggle';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  filter: string;\n  onFilter: (value: string) => void;\n  onSearch: (value: string) => void;\n  query: string;\n}\n\nexport default function SearchForm(props: Props) {\n  const filterOptions = [\n    { value: 'all', label: translate('all') },\n    { value: 'users', label: translate('users.page') },\n    { value: 'groups', label: translate('user_groups.page') }\n  ];\n\n  return (\n    <div className=\"display-flex-row\">\n      <RadioToggle\n        name=\"users-or-groups\"\n        onCheck={props.onFilter}\n        options={filterOptions}\n        value={props.filter}\n      />\n\n      <div className=\"flex-1 spacer-left\">\n        <SearchBox\n          minLength={3}\n          onChange={props.onSearch}\n          placeholder={translate('search.search_for_users_or_groups')}\n          value={props.query}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { isPermissionDefinitionGroup } from '../../utils';\n\ninterface Props {\n  loading: string[];\n  onCheck: (checked: boolean, permission?: string) => void;\n  permission: T.PermissionDefinition | T.PermissionDefinitionGroup;\n  permissionItem: T.PermissionGroup | T.PermissionUser;\n  selectedPermission?: string;\n}\n\nexport default class PermissionCell extends React.PureComponent<Props> {\n  render() {\n    const { loading, onCheck, permission, permissionItem, selectedPermission } = this.props;\n    if (isPermissionDefinitionGroup(permission)) {\n      return (\n        <td className=\"text-middle\">\n          {permission.permissions.map(permission => (\n            <div key={permission.key}>\n              <Checkbox\n                checked={permissionItem.permissions.includes(permission.key)}\n                disabled={loading.includes(permission.key)}\n                id={permission.key}\n                onCheck={onCheck}>\n                <span className=\"little-spacer-left\">{permission.name}</span>\n              </Checkbox>\n            </div>\n          ))}\n        </td>\n      );\n    } else {\n      return (\n        <td\n          className={classNames('permission-column text-center text-middle', {\n            selected: permission.key === selectedPermission\n          })}>\n          <Checkbox\n            checked={permissionItem.permissions.includes(permission.key)}\n            disabled={loading.includes(permission.key)}\n            id={permission.key}\n            onCheck={onCheck}\n          />\n        </td>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { without } from 'lodash';\nimport * as React from 'react';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { isPermissionDefinitionGroup } from '../../utils';\nimport PermissionCell from './PermissionCell';\n\ninterface Props {\n  group: T.PermissionGroup;\n  onToggle: (group: T.PermissionGroup, permission: string) => Promise<void>;\n  permissions: T.PermissionDefinitions;\n  selectedPermission?: string;\n}\n\ninterface State {\n  loading: string[];\n}\n\nexport default class GroupHolder extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = (permission: string) => {\n    if (this.mounted) {\n      this.setState(state => ({ loading: without(state.loading, permission) }));\n    }\n  };\n\n  handleCheck = (_checked: boolean, permission?: string) => {\n    if (permission !== undefined) {\n      this.setState(state => ({ loading: [...state.loading, permission] }));\n      this.props.onToggle(this.props.group, permission).then(\n        () => this.stopLoading(permission),\n        () => this.stopLoading(permission)\n      );\n    }\n  };\n\n  render() {\n    const { group } = this.props;\n\n    return (\n      <tr>\n        <td className=\"nowrap text-middle\">\n          <div className=\"display-inline-block text-middle big-spacer-right\">\n            <GroupIcon />\n          </div>\n          <div className=\"display-inline-block text-middle\">\n            <div>\n              <strong>{group.name}</strong>\n            </div>\n            <div className=\"little-spacer-top\" style={{ whiteSpace: 'normal' }}>\n              {group.description}\n            </div>\n          </div>\n        </td>\n        {this.props.permissions.map(permission => (\n          <PermissionCell\n            key={isPermissionDefinitionGroup(permission) ? permission.category : permission.key}\n            loading={this.state.loading}\n            onCheck={this.handleCheck}\n            permission={permission}\n            permissionItem={group}\n            selectedPermission={this.props.selectedPermission}\n          />\n        ))}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport { isPermissionDefinitionGroup } from '../../utils';\n\ninterface Props {\n  onSelectPermission?: (permission: string) => void;\n  permission: T.PermissionDefinition | T.PermissionDefinitionGroup;\n  selectedPermission?: string;\n  showPublicProjectsWarning?: boolean;\n}\n\nexport default class PermissionHeader extends React.PureComponent<Props> {\n  handlePermissionClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    const { permission } = this.props;\n    if (this.props.onSelectPermission && !isPermissionDefinitionGroup(permission)) {\n      this.props.onSelectPermission(permission.key);\n    }\n  };\n\n  getTooltipOverlay = () => {\n    const { permission } = this.props;\n\n    if (isPermissionDefinitionGroup(permission)) {\n      return permission.permissions.map(permission => (\n        <React.Fragment key={permission.key}>\n          <b className=\"little-spacer-right\">{permission.name}:</b>\n          <InstanceMessage key={permission.key} message={permission.description} />\n          <br />\n        </React.Fragment>\n      ));\n    } else {\n      if (this.props.showPublicProjectsWarning && ['user', 'codeviewer'].includes(permission.key)) {\n        return (\n          <div>\n            <InstanceMessage message={permission.description} />\n            <Alert className=\"spacer-top\" variant=\"warning\">\n              {translate('projects_role.public_projects_warning')}\n            </Alert>\n          </div>\n        );\n      }\n      return <InstanceMessage message={permission.description} />;\n    }\n  };\n\n  render() {\n    const { onSelectPermission, permission } = this.props;\n    let name;\n    if (isPermissionDefinitionGroup(permission)) {\n      name = translate('global_permissions', permission.category);\n    } else {\n      name = onSelectPermission ? (\n        <Tooltip\n          overlay={translateWithParameters(\n            'global_permissions.filter_by_x_permission',\n            permission.name\n          )}>\n          <a href=\"#\" onClick={this.handlePermissionClick}>\n            {permission.name}\n          </a>\n        </Tooltip>\n      ) : (\n        permission.name\n      );\n    }\n    return (\n      <th\n        className={classNames('permission-column text-center text-middle', {\n          selected:\n            !isPermissionDefinitionGroup(permission) &&\n            permission.key === this.props.selectedPermission\n        })}>\n        <div className=\"permission-column-inner\">\n          {name}\n          <HelpTooltip className=\"spacer-left\" overlay={this.getTooltipOverlay()} />\n        </div>\n      </th>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { without } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../../components/ui/Avatar';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { isPermissionDefinitionGroup } from '../../utils';\nimport PermissionCell from './PermissionCell';\n\ninterface Props {\n  onToggle: (user: T.PermissionUser, permission: string) => Promise<void>;\n  permissions: T.PermissionDefinitions;\n  selectedPermission?: string;\n  user: T.PermissionUser;\n}\n\ninterface State {\n  loading: string[];\n}\n\nexport default class UserHolder extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = (permission: string) => {\n    if (this.mounted) {\n      this.setState(state => ({ loading: without(state.loading, permission) }));\n    }\n  };\n\n  handleCheck = (_checked: boolean, permission?: string) => {\n    if (permission !== undefined) {\n      this.setState(state => ({ loading: [...state.loading, permission] }));\n      this.props.onToggle(this.props.user, permission).then(\n        () => this.stopLoading(permission),\n        () => this.stopLoading(permission)\n      );\n    }\n  };\n\n  render() {\n    const { user } = this.props;\n    const permissionCells = this.props.permissions.map(permission => (\n      <PermissionCell\n        key={isPermissionDefinitionGroup(permission) ? permission.category : permission.key}\n        loading={this.state.loading}\n        onCheck={this.handleCheck}\n        permission={permission}\n        permissionItem={user}\n        selectedPermission={this.props.selectedPermission}\n      />\n    ));\n\n    if (user.login === '<creator>') {\n      return (\n        <tr>\n          <td className=\"nowrap text-middle\">\n            <div className=\"display-inline-block text-middle\">\n              <div>\n                <strong>{user.name}</strong>\n              </div>\n              <div className=\"little-spacer-top\" style={{ whiteSpace: 'normal' }}>\n                {translate(\n                  isSonarCloud()\n                    ? 'permission_templates.project_creators.explanation.sonarcloud'\n                    : 'permission_templates.project_creators.explanation'\n                )}\n              </div>\n            </div>\n          </td>\n          {permissionCells}\n        </tr>\n      );\n    }\n\n    return (\n      <tr>\n        <td className=\"nowrap text-middle\">\n          <Avatar\n            className=\"text-middle big-spacer-right\"\n            hash={user.avatar}\n            name={user.name}\n            size={36}\n          />\n          <div className=\"display-inline-block text-middle\">\n            {isSonarCloud() ? (\n              <>\n                <div>\n                  <strong>{user.name}</strong>\n                </div>\n                <div className=\"note little-spacer-top\">{user.login}</div>\n              </>\n            ) : (\n              <>\n                <div>\n                  <strong>{user.name}</strong>\n                  <span className=\"note spacer-left\">{user.login}</span>\n                </div>\n                <div className=\"little-spacer-top\">{user.email}</div>\n              </>\n            )}\n          </div>\n        </td>\n        {permissionCells}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPermissionDefinitionGroup } from '../../utils';\nimport GroupHolder from './GroupHolder';\nimport PermissionHeader from './PermissionHeader';\nimport UserHolder from './UserHolder';\n\ninterface Props {\n  filter?: string;\n  groups: T.PermissionGroup[];\n  loading?: boolean;\n  onSelectPermission?: (permission: string) => void;\n  onToggleGroup: (group: T.PermissionGroup, permission: string) => Promise<void>;\n  onToggleUser: (user: T.PermissionUser, permission: string) => Promise<void>;\n  permissions: T.PermissionDefinitions;\n  query?: string;\n  selectedPermission?: string;\n  showPublicProjectsWarning?: boolean;\n  users: T.PermissionUser[];\n}\n\ninterface State {\n  initialPermissionsCount: T.Dict<number>;\n}\nexport default class HoldersList extends React.PureComponent<Props, State> {\n  state: State = { initialPermissionsCount: {} };\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.filter !== prevProps.filter || this.props.query !== prevProps.query) {\n      this.setState({ initialPermissionsCount: {} });\n    }\n  }\n\n  isPermissionUser(item: T.PermissionGroup | T.PermissionUser): item is T.PermissionUser {\n    return (item as T.PermissionUser).login !== undefined;\n  }\n\n  handleGroupToggle = (group: T.PermissionGroup, permission: string) => {\n    const key = group.id || group.name;\n    if (this.state.initialPermissionsCount[key] === undefined) {\n      this.setState(state => ({\n        initialPermissionsCount: {\n          ...state.initialPermissionsCount,\n          [key]: group.permissions.length\n        }\n      }));\n    }\n    return this.props.onToggleGroup(group, permission);\n  };\n\n  handleUserToggle = (user: T.PermissionUser, permission: string) => {\n    if (this.state.initialPermissionsCount[user.login] === undefined) {\n      this.setState(state => ({\n        initialPermissionsCount: {\n          ...state.initialPermissionsCount,\n          [user.login]: user.permissions.length\n        }\n      }));\n    }\n    return this.props.onToggleUser(user, permission);\n  };\n\n  getItemInitialPermissionsCount = (item: T.PermissionGroup | T.PermissionUser) => {\n    const key = this.isPermissionUser(item) ? item.login : item.id || item.name;\n    return this.state.initialPermissionsCount[key] !== undefined\n      ? this.state.initialPermissionsCount[key]\n      : item.permissions.length;\n  };\n\n  renderEmpty() {\n    const columns = this.props.permissions.length + 1;\n    return (\n      <tr>\n        <td colSpan={columns}>{translate('no_results_search')}</td>\n      </tr>\n    );\n  }\n\n  renderItem(item: T.PermissionUser | T.PermissionGroup, permissions: T.PermissionDefinitions) {\n    return this.isPermissionUser(item) ? (\n      <UserHolder\n        key={`user-${item.login}`}\n        onToggle={this.handleUserToggle}\n        permissions={permissions}\n        selectedPermission={this.props.selectedPermission}\n        user={item}\n      />\n    ) : (\n      <GroupHolder\n        group={item}\n        key={`group-${item.id || item.name}`}\n        onToggle={this.handleGroupToggle}\n        permissions={permissions}\n        selectedPermission={this.props.selectedPermission}\n      />\n    );\n  }\n\n  render() {\n    const { permissions } = this.props;\n    const items = sortBy([...this.props.users, ...this.props.groups], item => {\n      if (this.isPermissionUser(item) && item.login === '<creator>') {\n        return 0;\n      }\n      return item.name;\n    });\n    const [itemWithPermissions, itemWithoutPermissions] = partition(items, item =>\n      this.getItemInitialPermissionsCount(item)\n    );\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <table className=\"data zebra permissions-table\">\n          <thead>\n            <tr>\n              <td className=\"nowrap bordered-bottom\">{this.props.children}</td>\n              {permissions.map(permission => (\n                <PermissionHeader\n                  key={\n                    isPermissionDefinitionGroup(permission) ? permission.category : permission.key\n                  }\n                  onSelectPermission={this.props.onSelectPermission}\n                  permission={permission}\n                  selectedPermission={this.props.selectedPermission}\n                  showPublicProjectsWarning={this.props.showPublicProjectsWarning}\n                />\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {items.length === 0 && !this.props.loading && this.renderEmpty()}\n            {itemWithPermissions.map(item => this.renderItem(item, permissions))}\n            {itemWithPermissions.length > 0 && itemWithoutPermissions.length > 0 && (\n              <>\n                <tr>\n                  <td className=\"divider\" colSpan={20} />\n                </tr>\n                <tr />\n                {/* Keep correct zebra colors in the table */}\n              </>\n            )}\n            {itemWithoutPermissions.map(item => this.renderItem(item, permissions))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".permissions-table .permission-column.selected{background-color:#d9edf7}.permissions-table .permission-column-inner{width:100px}.permissions-table .divider{background:#fff;padding:16px 0}.permissions-table .divider:after{display:block;content:\\\"\\\";background:#e6e6e6;height:1px;width:100%}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BaseSearchProjectsParameters } from './components';\n\nconst PAGE_SIZE = 100;\n\nexport function grantPermissionToUser(data: {\n  projectKey?: string;\n  login: string;\n  permission: string;\n  organization?: string;\n}) {\n  return post('/api/permissions/add_user', data).catch(throwGlobalError);\n}\n\nexport function revokePermissionFromUser(data: {\n  projectKey?: string;\n  login: string;\n  permission: string;\n  organization?: string;\n}) {\n  return post('/api/permissions/remove_user', data).catch(throwGlobalError);\n}\n\nexport function grantPermissionToGroup(data: {\n  projectKey?: string;\n  groupName: string;\n  permission: string;\n  organization?: string;\n}) {\n  return post('/api/permissions/add_group', data).catch(throwGlobalError);\n}\n\nexport function revokePermissionFromGroup(data: {\n  projectKey?: string;\n  groupName: string;\n  permission: string;\n  organization?: string;\n}) {\n  return post('/api/permissions/remove_group', data).catch(throwGlobalError);\n}\n\ninterface GetPermissionTemplatesResponse {\n  permissionTemplates: T.PermissionTemplate[];\n  defaultTemplates: Array<{ templateId: string; qualifier: string }>;\n  permissions: Array<{ key: string; name: string; description: string }>;\n}\n\nexport function getPermissionTemplates(\n  organization?: string\n): Promise<GetPermissionTemplatesResponse> {\n  const url = '/api/permissions/search_templates';\n  return organization ? getJSON(url, { organization }) : getJSON(url);\n}\n\nexport function createPermissionTemplate(data: RequestData) {\n  return postJSON('/api/permissions/create_template', data);\n}\n\nexport function updatePermissionTemplate(data: RequestData): Promise<void> {\n  return post('/api/permissions/update_template', data);\n}\n\nexport function deletePermissionTemplate(data: RequestData) {\n  return post('/api/permissions/delete_template', data).catch(throwGlobalError);\n}\n\n/**\n * Set default permission template for a given qualifier\n */\nexport function setDefaultPermissionTemplate(templateId: string, qualifier: string): Promise<void> {\n  return post('/api/permissions/set_default_template', { templateId, qualifier });\n}\n\nexport function applyTemplateToProject(data: RequestData) {\n  return post('/api/permissions/apply_template', data).catch(throwGlobalError);\n}\n\nexport function bulkApplyTemplate(data: BaseSearchProjectsParameters): Promise<void> {\n  return post('/api/permissions/bulk_apply_template', data);\n}\n\nexport function grantTemplatePermissionToUser(data: {\n  templateId: string;\n  login: string;\n  permission: string;\n  organization?: string;\n}): Promise<void> {\n  return post('/api/permissions/add_user_to_template', data);\n}\n\nexport function revokeTemplatePermissionFromUser(data: {\n  templateId: string;\n  login: string;\n  permission: string;\n  organization?: string;\n}): Promise<void> {\n  return post('/api/permissions/remove_user_from_template', data);\n}\n\nexport function grantTemplatePermissionToGroup(data: RequestData): Promise<void> {\n  return post('/api/permissions/add_group_to_template', data);\n}\n\nexport function revokeTemplatePermissionFromGroup(data: RequestData): Promise<void> {\n  return post('/api/permissions/remove_group_from_template', data);\n}\n\nexport function addProjectCreatorToTemplate(templateId: string, permission: string): Promise<void> {\n  return post('/api/permissions/add_project_creator_to_template', { templateId, permission });\n}\n\nexport function removeProjectCreatorFromTemplate(\n  templateId: string,\n  permission: string\n): Promise<void> {\n  return post('/api/permissions/remove_project_creator_from_template', { templateId, permission });\n}\n\nexport function getPermissionsUsersForComponent(data: {\n  projectKey: string;\n  q?: string;\n  permission?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{ paging: T.Paging; users: T.PermissionUser[] }> {\n  if (!data.ps) {\n    data.ps = PAGE_SIZE;\n  }\n  return getJSON('/api/permissions/users', data).catch(throwGlobalError);\n}\n\nexport function getPermissionsGroupsForComponent(data: {\n  projectKey: string;\n  q?: string;\n  permission?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{ paging: T.Paging; groups: T.PermissionGroup[] }> {\n  if (!data.ps) {\n    data.ps = PAGE_SIZE;\n  }\n  return getJSON('/api/permissions/groups', data).catch(throwGlobalError);\n}\n\nexport function getGlobalPermissionsUsers(data: {\n  q?: string;\n  permission?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{ paging: T.Paging; users: T.PermissionUser[] }> {\n  if (!data.ps) {\n    data.ps = PAGE_SIZE;\n  }\n  return getJSON('/api/permissions/users', data);\n}\n\nexport function getGlobalPermissionsGroups(data: {\n  q?: string;\n  permission?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{ paging: T.Paging; groups: T.PermissionGroup[] }> {\n  if (!data.ps) {\n    data.ps = PAGE_SIZE;\n  }\n  return getJSON('/api/permissions/groups', data);\n}\n\nexport function getPermissionTemplateUsers(\n  templateId: string,\n  query?: string,\n  permission?: string,\n  organization?: string\n): Promise<any> {\n  const data: RequestData = { templateId, ps: PAGE_SIZE };\n  if (query) {\n    data.q = query;\n  }\n  if (permission) {\n    data.permission = permission;\n  }\n  if (organization) {\n    Object.assign(data, { organization });\n  }\n  return getJSON('/api/permissions/template_users', data).then(r => r.users);\n}\n\nexport function getPermissionTemplateGroups(\n  templateId: string,\n  query?: string,\n  permission?: string,\n  organization?: string\n): Promise<any> {\n  const data: RequestData = { templateId, ps: PAGE_SIZE };\n  if (query) {\n    data.q = query;\n  }\n  if (permission) {\n    data.permission = permission;\n  }\n  if (organization) {\n    Object.assign(data, { organization });\n  }\n  return getJSON('/api/permissions/template_groups', data).then(r => r.groups);\n}\n\nexport function changeProjectVisibility(\n  project: string,\n  visibility: T.Visibility\n): Promise<void | Response> {\n  return post('/api/projects/update_visibility', { project, visibility }).catch(throwGlobalError);\n}\n\nexport function changeProjectDefaultVisibility(\n  organization: string,\n  projectVisibility: T.Visibility\n): Promise<void | Response> {\n  return post('/api/projects/update_default_visibility', { organization, projectVisibility }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { isSonarCloud } from '../../helpers/system';\n\nexport const PERMISSIONS_ORDER_FOR_PROJECT_TEMPLATE = [\n  'user',\n  'codeviewer',\n  'issueadmin',\n  'securityhotspotadmin',\n  'admin',\n  'scan'\n];\n\nexport const PERMISSIONS_ORDER_GLOBAL = [\n  'admin',\n  { category: 'administer', permissions: ['gateadmin', 'profileadmin'] },\n  'scan',\n  { category: 'creator', permissions: ['provisioning'] }\n];\n\nexport const PERMISSIONS_ORDER_GLOBAL_GOV = [\n  'admin',\n  { category: 'administer', permissions: ['gateadmin', 'profileadmin'] },\n  'scan',\n  { category: 'creator', permissions: ['provisioning', 'applicationcreator', 'portfoliocreator'] }\n];\n\nexport const PERMISSIONS_ORDER_FOR_VIEW = ['user', 'admin'];\n\nexport const PERMISSIONS_ORDER_FOR_DEV = ['user', 'admin'];\n\nexport const PERMISSIONS_ORDER_BY_QUALIFIER: T.Dict<string[]> = {\n  TRK: PERMISSIONS_ORDER_FOR_PROJECT_TEMPLATE,\n  VW: PERMISSIONS_ORDER_FOR_VIEW,\n  SVW: PERMISSIONS_ORDER_FOR_VIEW,\n  APP: PERMISSIONS_ORDER_FOR_VIEW,\n  DEV: PERMISSIONS_ORDER_FOR_DEV\n};\n\nfunction convertToPermissionDefinition(permission: string, l10nPrefix: string) {\n  const getMessage = (messageKey: string) => {\n    const cloudMessageKey = `${messageKey}.sonarcloud`;\n    return isSonarCloud() && hasMessage(cloudMessageKey)\n      ? translate(cloudMessageKey)\n      : translate(messageKey);\n  };\n\n  const name = getMessage(`${l10nPrefix}.${permission}`);\n  const description = getMessage(`${l10nPrefix}.${permission}.desc`);\n\n  return {\n    key: permission,\n    name,\n    description\n  };\n}\n\nexport function convertToPermissionDefinitions(\n  permissions: Array<string | { category: string; permissions: string[] }>,\n  l10nPrefix: string\n): Array<T.PermissionDefinition | T.PermissionDefinitionGroup> {\n  return permissions.map(permission => {\n    if (typeof permission === 'object') {\n      return {\n        category: permission.category,\n        permissions: permission.permissions.map(permission =>\n          convertToPermissionDefinition(permission, l10nPrefix)\n        )\n      };\n    }\n    return convertToPermissionDefinition(permission, l10nPrefix);\n  });\n}\n\nexport function isPermissionDefinitionGroup(\n  permission?: T.PermissionDefinition | T.PermissionDefinitionGroup\n): permission is T.PermissionDefinitionGroup {\n  return Boolean(permission && (permission as T.PermissionDefinitionGroup).category);\n}\n"],"sourceRoot":""}