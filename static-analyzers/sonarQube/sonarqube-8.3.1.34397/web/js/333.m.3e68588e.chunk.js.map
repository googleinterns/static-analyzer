{"version":3,"sources":["webpack:///./src/main/js/apps/background-tasks/background-tasks.css?a006","webpack:///./src/main/js/apps/background-tasks/background-tasks.css","webpack:///./src/main/js/apps/background-tasks/utils.ts","webpack:///./src/main/js/apps/background-tasks/components/Footer.tsx","webpack:///./src/main/js/apps/background-tasks/components/NoWorkersSupportPopup.tsx","webpack:///./src/main/js/apps/background-tasks/components/WorkersForm.tsx","webpack:///./src/main/js/apps/background-tasks/components/Workers.tsx","webpack:///./src/main/js/apps/background-tasks/components/Header.tsx","webpack:///./src/main/js/apps/background-tasks/components/CurrentsFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/DateFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatusFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/TypesFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Search.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingCount.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatStillFailing.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stats.tsx","webpack:///./src/main/js/apps/background-tasks/components/ScannerContext.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stacktrace.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskActions.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskType.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskComponent.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDate.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDay.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskExecutionTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskId.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskStatus.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskSubmitter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Task.tsx","webpack:///./src/main/js/apps/background-tasks/components/Tasks.tsx","webpack:///./src/main/js/apps/background-tasks/components/BackgroundTasksApp.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/controls/DateInput.tsx","webpack:///./src/main/js/components/controls/DayPicker.css?d7e1","webpack:///./src/main/js/components/controls/DayPicker.css","webpack:///./src/main/js/components/controls/styles.css?5633","webpack:///./src/main/js/components/controls/styles.css","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/components/controls/DateRangeInput.tsx","webpack:///./src/main/js/components/shared/Organization.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","format","int","suffix","Footer","tasks","length","className","NoWorkersSupportPopup","href","rel","target","props","super","mounted","handleClose","this","onClose","handleWorkerCountChange","option","setState","newWorkerCount","value","handleSubmit","event","preventDefault","submitting","state","then","workerCount","label","String","contentLabel","onRequestClose","onSubmit","clearable","onChange","searchable","Alert","variant","disabled","onClick","canSetWorkerCount","formOpen","loading","noSupportPopup","loadWorkers","closeForm","handleChangeClick","handleHelpClick","stopPropagation","toggleNoSupportPopup","show","undefined","overlay","fill","Header","component","to","pathname","handleChange","newValue","ONLY_CURRENTS","ALL","checked","onCheck","handleDateRangeChange","from","minSubmittedAt","maxExecutedAt","dateRange","ALL_EXCEPT_PENDING","PENDING","IN_PROGRESS","SUCCESS","FAILED","CANCELED","types","map","t","allOptions","handleStatusChange","status","onFilterUpdate","handleTypeChange","taskType","handleCurrentsChange","currents","handleDateChange","date","handleQueryChange","query","handleReset","placeholder","renderSearchBox","onReload","isSystemAdmin","canAdmin","onCancelAllPending","pendingCount","cancelButtonText","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","color","red","StatPendingTime","pendingTime","StatStillFailing","failingCount","onShowFailing","Stats","handleCloseClick","loadScannerContext","task","id","scannerContext","size","componentName","type","loadStacktrace","stacktrace","errorStacktrace","errorMessage","AnalysisWarningsModal","lazyLoadComponent","cancelTaskOpen","scannerContextOpen","stacktraceOpen","warningsOpen","handleFilterClick","onFilterTask","handleCancelTask","onCancelTask","handleCancelClick","handleShowScannerContextClick","closeCancelTask","closeScannerContext","handleShowStacktraceClick","closeStacktrace","handleShowWarningsClick","closeWarnings","canFilter","canCancel","canShowStacktrace","canShowWarnings","warningCount","hasScannerContext","ActionsDropdown","destructive","header","taskId","TaskType","TaskComponent","componentKey","branch","pullRequest","componentQualifier","qualifier","organization","Organization","organizationKey","getTaskComponentUrl","title","style","marginLeft","marginRight","pullRequestTitle","TaskDate","baseDate","parsedDate","parsedBaseDate","diff","long","TaskDay","submittedAt","prevSubmittedAt","shouldDisplay","TaskExecutionTime","ms","ONE_SECOND","seconds","Math","floor","ONE_MINUTE","minutes","hours","formatDuration","TaskId","TaskStatus","inner","TaskSubmitter","submitter","Task","previousTask","submitterLogin","startedAt","executedAt","executionTimeMs","Tasks","index","key","stopLoading","loadTasks","parameters","filters","join","onlyCurrents","q","mapFiltersToParameters","location","componentId","Promise","all","organizations","filter","o","fetchOrganizations","failing","pending","handleFilterUpdate","nextState","nextQuery","Object","keys","forEach","router","nextTask","newTask","handleFilterTask","handleShowFailing","handleCancelAllPending","loadTasksDebounced","prevProps","Suggestions","suggestions","defer","mapDispatchToProps","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","DayPicker","DateInput","focus","input","openCalendar","handleResetClick","closeCalendar","currentMonth","Date","lastHovered","open","handleDayClick","day","modifiers","handleDayMouseEnter","handleCurrentMonthChange","handleCurrentYearChange","handlePreviousMonthClick","handleNextMonthClick","highlightFrom","highlightTo","minDate","after","maxDate","months","years","getFullYear","selectedDays","lastHoveredOrValue","highlighted","weekdaysLong","weekdaysShort","onClickOutside","InputWrapper","inputClassName","innerRef","node","name","onFocus","readOnly","iconProps","month","getMonth","year","captionElement","NullComponent","disabledDays","before","firstDayOfWeek","navbarElement","onDayClick","onDayMouseEnter","intl","other","formattedValue","formatDate","ref","getAnalysisStatus","data","catch","getActivity","getStatus","assign","getTask","additionalFields","r","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","taskTypes","getWorkers","setWorkerCount","count","DateRangeInput","handleFromChange","setTimeout","toDateInput","handleToChange","element","link","shouldBeDisplayed","linkClassName","ownProps"],"mappings":"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","file":"js/333.m.3e68588e.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".bt-search-form{display:flex;align-items:flex-end}.bt-search-form>li+li{margin-left:16px}.bt-search-form-label{margin-bottom:4px}.bt-search-form-field{padding:4px 0}.bt-search-form-large{flex:1}.bt-workers-warning-icon{margin-top:5px}.emphasised-measure{font-size:24px;font-weight:300}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { ALL_TYPES, CURRENTS, STATUSES } from './constants';\n\nexport interface Query {\n  currents: string;\n  maxExecutedAt?: Date;\n  minSubmittedAt?: Date;\n  query: string;\n  status: string;\n  taskType: string;\n}\n\nexport function updateTask(tasks: T.Task[], newTask: T.Task) {\n  return tasks.map(task => (task.id === newTask.id ? newTask : task));\n}\n\nexport function mapFiltersToParameters(filters: Partial<Query> = {}) {\n  const parameters: any = {};\n\n  if (filters.status === STATUSES.ALL) {\n    parameters.status = [\n      STATUSES.PENDING,\n      STATUSES.IN_PROGRESS,\n      STATUSES.SUCCESS,\n      STATUSES.FAILED,\n      STATUSES.CANCELED\n    ].join();\n  } else if (filters.status === STATUSES.ALL_EXCEPT_PENDING) {\n    parameters.status = [\n      STATUSES.IN_PROGRESS,\n      STATUSES.SUCCESS,\n      STATUSES.FAILED,\n      STATUSES.CANCELED\n    ].join();\n  } else {\n    parameters.status = filters.status;\n  }\n\n  if (filters.taskType !== ALL_TYPES) {\n    parameters.type = filters.taskType;\n  }\n\n  if (filters.currents !== CURRENTS.ALL) {\n    parameters.onlyCurrents = true;\n  }\n\n  if (filters.minSubmittedAt) {\n    parameters.minSubmittedAt = toShortNotSoISOString(filters.minSubmittedAt);\n  }\n\n  if (filters.maxExecutedAt) {\n    parameters.maxExecutedAt = toShortNotSoISOString(filters.maxExecutedAt);\n  }\n\n  if (filters.query) {\n    parameters.q = filters.query;\n  }\n\n  return parameters;\n}\n\nconst ONE_SECOND = 1000;\nconst ONE_MINUTE = 60 * ONE_SECOND;\nconst ONE_HOUR = 60 * ONE_MINUTE;\n\nfunction format(int: number, suffix: string) {\n  return `${int}${suffix}`;\n}\n\nexport function formatDuration(value: number | undefined) {\n  if (!value) {\n    return '';\n  }\n  if (value < ONE_SECOND) {\n    return format(value, 'ms');\n  } else if (value < ONE_SECOND * 10) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    const ms = value - seconds * ONE_SECOND;\n    return seconds + '.' + format(ms, 's');\n  } else if (value < ONE_MINUTE) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    return format(seconds, 's');\n  } else if (value < ONE_MINUTE * 10) {\n    const minutes = Math.floor(value / ONE_MINUTE);\n    const seconds = Math.floor((value - minutes * ONE_MINUTE) / ONE_SECOND);\n    return format(minutes, 'min') + ' ' + format(seconds, 's');\n  }\n  const hours = Math.floor(value / ONE_HOUR);\n  const minutes = Math.floor((value - hours * ONE_HOUR) / ONE_MINUTE);\n  return format(hours, 'h') + ' ' + format(minutes, 'min');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nconst LIMIT = 1000;\n\ninterface Props {\n  tasks: T.Task[];\n}\n\nexport default function Footer({ tasks }: Props) {\n  if (tasks.length < LIMIT) {\n    return null;\n  }\n\n  return (\n    <footer className=\"spacer-top note text-center\">\n      {translateWithParameters('max_results_reached', LIMIT)}\n    </footer>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function NoWorkersSupportPopup() {\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        <strong>{translate('background_tasks.add_more_workers')}</strong>\n      </p>\n      <p className=\"big-spacer-bottom markdown\">\n        {translate('background_tasks.add_more_workers.text')}\n      </p>\n      <p>\n        <a\n          href=\"https://redirect.sonarsource.com/editions/enterprise.html\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('learn_more')}\n        </a>\n      </p>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setWorkerCount } from '../../../api/ce';\n\nconst MAX_WORKERS = 10;\n\ninterface Props {\n  onClose: (newWorkerCount?: number) => void;\n  workerCount: number;\n}\n\ninterface State {\n  newWorkerCount: number;\n  submitting: boolean;\n}\n\nexport default class WorkersForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newWorkerCount: props.workerCount,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  handleWorkerCountChange = (option: { value: number }) =>\n    this.setState({ newWorkerCount: option.value });\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    const { newWorkerCount } = this.state;\n    setWorkerCount(newWorkerCount).then(\n      () => {\n        if (this.mounted) {\n          this.props.onClose(newWorkerCount);\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ submitting: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const options = [];\n    for (let i = 1; i <= MAX_WORKERS; i++) {\n      options.push({ label: String(i), value: i });\n    }\n\n    return (\n      <Modal\n        contentLabel={translate('background_tasks.change_number_of_workers')}\n        onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{translate('background_tasks.change_number_of_workers')}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <Select\n              className=\"input-tiny spacer-top\"\n              clearable={false}\n              onChange={this.handleWorkerCountChange}\n              options={options}\n              searchable={false}\n              value={this.state.newWorkerCount}\n            />\n            <Alert className=\"big-spacer-top\" variant=\"info\">\n              {translate('background_tasks.change_number_of_workers.hint')}\n            </Alert>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              {this.state.submitting && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={this.state.submitting}>{translate('save')}</SubmitButton>\n              <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertWarnIcon from 'sonar-ui-common/components/icons/AlertWarnIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getWorkers } from '../../../api/ce';\nimport NoWorkersSupportPopup from './NoWorkersSupportPopup';\nimport WorkersForm from './WorkersForm';\n\ninterface State {\n  canSetWorkerCount: boolean;\n  formOpen: boolean;\n  loading: boolean;\n  noSupportPopup: boolean;\n  workerCount: number;\n}\n\nexport default class Workers extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    canSetWorkerCount: false,\n    formOpen: false,\n    loading: true,\n    noSupportPopup: false,\n    workerCount: 1\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadWorkers();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadWorkers = () => {\n    this.setState({ loading: true });\n    getWorkers().then(\n      ({ canSetWorkerCount, value }) => {\n        if (this.mounted) {\n          this.setState({\n            canSetWorkerCount,\n            loading: false,\n            workerCount: value\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  closeForm = (newWorkerCount?: number) =>\n    newWorkerCount\n      ? this.setState({ formOpen: false, workerCount: newWorkerCount })\n      : this.setState({ formOpen: false });\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  handleHelpClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggleNoSupportPopup();\n  };\n\n  toggleNoSupportPopup = (show?: boolean) => {\n    if (show !== undefined) {\n      this.setState({ noSupportPopup: show });\n    } else {\n      this.setState(state => ({ noSupportPopup: !state.noSupportPopup }));\n    }\n  };\n\n  render() {\n    const { canSetWorkerCount, formOpen, loading, workerCount } = this.state;\n\n    return (\n      <div className=\"display-flex-center\">\n        {!loading && workerCount > 1 && (\n          <Tooltip overlay={translate('background_tasks.number_of_workers.warning')}>\n            <span className=\"display-inline-flex-center little-spacer-right\">\n              <AlertWarnIcon fill=\"#d3d3d3\" />\n            </span>\n          </Tooltip>\n        )}\n\n        <span className=\"text-middle\">\n          {translate('background_tasks.number_of_workers')}\n\n          {loading ? (\n            <i className=\"spinner little-spacer-left\" />\n          ) : (\n            <strong className=\"little-spacer-left\">{workerCount}</strong>\n          )}\n        </span>\n\n        {!loading && canSetWorkerCount && (\n          <Tooltip overlay={translate('background_tasks.change_number_of_workers')}>\n            <EditButton\n              className=\"js-edit button-small spacer-left\"\n              onClick={this.handleChangeClick}\n            />\n          </Tooltip>\n        )}\n\n        {!loading && !canSetWorkerCount && (\n          <HelpTooltip className=\"spacer-left\" overlay={<NoWorkersSupportPopup />} />\n        )}\n\n        {formOpen && <WorkersForm onClose={this.closeForm} workerCount={this.state.workerCount} />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Workers from './Workers';\n\ninterface Props {\n  component?: any;\n}\n\nexport default function Header(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('background_tasks.page')}</h1>\n      {!props.component && (\n        <div className=\"page-actions\">\n          <Workers />\n        </div>\n      )}\n      <p className=\"page-description\">\n        {translate('background_tasks.page.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/analysis/background-tasks/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { CURRENTS } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value: string) => void;\n}\n\nexport default class CurrentsFilter extends React.PureComponent<Props> {\n  handleChange = (value: boolean) => {\n    const newValue = value ? CURRENTS.ONLY_CURRENTS : CURRENTS.ALL;\n    this.props.onChange(newValue);\n  };\n\n  render() {\n    const checked = this.props.value === CURRENTS.ONLY_CURRENTS;\n    return (\n      <div className=\"bt-search-form-field\">\n        <Checkbox checked={checked} onCheck={this.handleChange}>\n          <span className=\"little-spacer-left\">{translate('yes')}</span>\n        </Checkbox>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DageRangeInput from '../../../components/controls/DateRangeInput';\n\ninterface Props {\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  onChange: (x: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => void;\n}\n\nexport default class DateFilter extends React.PureComponent<Props> {\n  handleDateRangeChange = ({ from, to }: { from?: Date; to?: Date }) => {\n    this.props.onChange({ minSubmittedAt: from, maxExecutedAt: to });\n  };\n\n  render() {\n    const dateRange = { from: this.props.minSubmittedAt, to: this.props.maxExecutedAt };\n    return (\n      <div className=\"nowrap\">\n        <DageRangeInput onChange={this.handleDateRangeChange} value={dateRange} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value?: string) => void;\n}\n\nexport default class StatusFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      { value: STATUSES.ALL, label: translate('background_task.status.ALL') },\n      {\n        value: STATUSES.ALL_EXCEPT_PENDING,\n        label: translate('background_task.status.ALL_EXCEPT_PENDING')\n      },\n      { value: STATUSES.PENDING, label: translate('background_task.status.PENDING') },\n      { value: STATUSES.IN_PROGRESS, label: translate('background_task.status.IN_PROGRESS') },\n      { value: STATUSES.SUCCESS, label: translate('background_task.status.SUCCESS') },\n      { value: STATUSES.FAILED, label: translate('background_task.status.FAILED') },\n      { value: STATUSES.CANCELED, label: translate('background_task.status.CANCELED') }\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={options}\n        searchable={false}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALL_TYPES } from '../constants';\n\ninterface Props {\n  value: string;\n  onChange: Function;\n  types: string[];\n}\n\nexport default class TypesFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value, types } = this.props;\n    const options = types.map(t => {\n      return {\n        value: t,\n        label: translate('background_task.type', t)\n      };\n    });\n\n    const allOptions = [\n      { value: ALL_TYPES, label: translate('background_task.type.ALL') },\n      ...options\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={allOptions}\n        searchable={false}\n        value={value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DEFAULT_FILTERS } from '../constants';\nimport { Query } from '../utils';\nimport CurrentsFilter from './CurrentsFilter';\nimport DateFilter from './DateFilter';\nimport StatusFilter from './StatusFilter';\nimport TypesFilter from './TypesFilter';\n\ninterface Props {\n  component?: unknown;\n  currents: string;\n  loading: boolean;\n  onFilterUpdate: (changes: Partial<Query>) => void;\n  onReload: () => void;\n  query: string;\n  status: string;\n  taskType: string;\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  types: string[];\n}\n\nexport default class Search extends React.PureComponent<Props> {\n  handleStatusChange = (status: string) => {\n    this.props.onFilterUpdate({ status });\n  };\n\n  handleTypeChange = (taskType: string) => {\n    this.props.onFilterUpdate({ taskType });\n  };\n\n  handleCurrentsChange = (currents: string) => {\n    this.props.onFilterUpdate({ currents });\n  };\n\n  handleDateChange = (date: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => {\n    this.props.onFilterUpdate(date);\n  };\n\n  handleQueryChange = (query: string) => {\n    this.props.onFilterUpdate({ query });\n  };\n\n  handleReset = () => {\n    this.props.onFilterUpdate(DEFAULT_FILTERS);\n  };\n\n  renderSearchBox() {\n    const { component, query } = this.props;\n\n    if (component) {\n      // do not render search form on the project-level page\n      return null;\n    }\n\n    return (\n      <li className=\"bt-search-form-large\">\n        <SearchBox\n          onChange={this.handleQueryChange}\n          placeholder={translate('background_tasks.search_by_task_or_component')}\n          value={query}\n        />\n      </li>\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      component,\n      types,\n      status,\n      taskType,\n      currents,\n      minSubmittedAt,\n      maxExecutedAt\n    } = this.props;\n\n    return (\n      <section className=\"big-spacer-top big-spacer-bottom\">\n        <ul className=\"bt-search-form\">\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('status')}</h6>\n            <StatusFilter onChange={this.handleStatusChange} value={status} />\n          </li>\n          {types.length > 1 && (\n            <li>\n              <h6 className=\"bt-search-form-label\">{translate('type')}</h6>\n              <TypesFilter onChange={this.handleTypeChange} types={types} value={taskType} />\n            </li>\n          )}\n          {!component && (\n            <li>\n              <h6 className=\"bt-search-form-label\">\n                {translate('background_tasks.currents_filter.ONLY_CURRENTS')}\n              </h6>\n              <CurrentsFilter onChange={this.handleCurrentsChange} value={currents} />\n            </li>\n          )}\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('date')}</h6>\n            <DateFilter\n              maxExecutedAt={maxExecutedAt}\n              minSubmittedAt={minSubmittedAt}\n              onChange={this.handleDateChange}\n            />\n          </li>\n\n          {this.renderSearchBox()}\n\n          <li className=\"nowrap\">\n            <Button className=\"js-reload\" disabled={loading} onClick={this.props.onReload}>\n              {translate('reload')}\n            </Button>{' '}\n            <Button disabled={loading} onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          </li>\n        </ul>\n      </section>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getAppState, Store } from '../../../store/rootReducer';\n\nexport interface Props {\n  isSystemAdmin?: boolean;\n  onCancelAllPending: () => void;\n  pendingCount?: number;\n}\n\nexport function StatPendingCount({ isSystemAdmin, onCancelAllPending, pendingCount }: Props) {\n  if (pendingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span>\n      <span className=\"emphasised-measure\">{pendingCount}</span>\n      <span className=\"little-spacer-left display-inline-flex-center\">\n        {translate('background_tasks.pending')}\n        {isSystemAdmin && pendingCount > 0 && (\n          <ConfirmButton\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_all_tasks.submit')}\n            isDestructive={true}\n            modalBody={translate('background_tasks.cancel_all_tasks.text')}\n            modalHeader={translate('background_tasks.cancel_all_tasks')}\n            onConfirm={onCancelAllPending}>\n            {({ onClick }) => (\n              <Tooltip overlay={translate('background_tasks.cancel_all_tasks')}>\n                <ClearButton className=\"little-spacer-left\" color={colors.red} onClick={onClick} />\n              </Tooltip>\n            )}\n          </ConfirmButton>\n        )}\n      </span>\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  isSystemAdmin: getAppState(state).canAdmin\n});\n\nexport default connect(mapStateToProps)(StatPendingCount);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\n\n// Do not display the pending time for values smaller than this threshold (in ms)\nconst MIN_PENDING_TIME_THRESHOLD = 1000;\n\nexport interface Props {\n  className?: string;\n  component?: Pick<T.Component, 'key'>;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function StatPendingTime({ className, pendingCount, pendingTime }: Props) {\n  if (!pendingTime || !pendingCount || pendingTime < MIN_PENDING_TIME_THRESHOLD) {\n    return null;\n  }\n  return (\n    <span className={className}>\n      <span className=\"emphasised-measure\">{formatMeasure(pendingTime, 'MILLISEC')}</span>\n      <span className=\"little-spacer-left\">{translate('background_tasks.pending_time')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.pending_time.description')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  failingCount?: number;\n  onShowFailing: () => void;\n}\n\nexport default function StatStillFailing({ className, failingCount, onShowFailing }: Props) {\n  if (failingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span className={className}>\n      {failingCount > 0 ? (\n        <ButtonLink className=\"emphasised-measure text-baseline\" onClick={onShowFailing}>\n          {failingCount}\n        </ButtonLink>\n      ) : (\n        <span className=\"emphasised-measure\">{failingCount}</span>\n      )}\n      <span className=\"little-spacer-left\">{translate('background_tasks.failures')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.failing_count')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport StatPendingCount from './StatPendingCount';\nimport StatPendingTime from './StatPendingTime';\nimport StatStillFailing from './StatStillFailing';\n\nexport interface Props {\n  component?: Pick<T.Component, 'key'>;\n  failingCount?: number;\n  onCancelAllPending: () => void;\n  onShowFailing: () => void;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function Stats({ component, pendingCount, pendingTime, ...props }: Props) {\n  return (\n    <section className=\"big-spacer-top big-spacer-bottom\">\n      <StatPendingCount onCancelAllPending={props.onCancelAllPending} pendingCount={pendingCount} />\n      {!component && (\n        <StatPendingTime\n          className=\"huge-spacer-left\"\n          pendingCount={pendingCount}\n          pendingTime={pendingTime}\n        />\n      )}\n      {!component && (\n        <StatStillFailing\n          className=\"huge-spacer-left\"\n          failingCount={props.failingCount}\n          onShowFailing={props.onShowFailing}\n        />\n      )}\n    </section>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<T.Task, 'componentName' | 'id' | 'type'>;\n}\n\ninterface State {\n  scannerContext?: string;\n}\n\nexport default class ScannerContext extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadScannerContext();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadScannerContext() {\n    getTask(this.props.task.id, ['scannerContext']).then(task => {\n      if (this.mounted) {\n        this.setState({ scannerContext: task.scannerContext });\n      }\n    });\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { scannerContext } = this.state;\n\n    return (\n      <Modal contentLabel=\"scanner context\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.scanner_context')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {scannerContext != null ? (\n            <pre className=\"js-task-scanner-context\">{scannerContext}</pre>\n          ) : (\n            <i className=\"spinner\" />\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<T.Task, 'componentName' | 'errorMessage' | 'id' | 'type'>;\n}\n\ninterface State {\n  loading: boolean;\n  stacktrace?: string;\n}\n\nexport default class Stacktrace extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadStacktrace();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadStacktrace() {\n    getTask(this.props.task.id, ['stacktrace']).then(\n      task => {\n        if (this.mounted) {\n          this.setState({ loading: false, stacktrace: task.errorStacktrace });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { loading, stacktrace } = this.state;\n\n    return (\n      <Modal contentLabel=\"stacktrace\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.error_stacktrace')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {loading ? (\n            <i className=\"spinner\" />\n          ) : stacktrace ? (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_stacktrace')}</h4>\n              <pre className=\"js-task-stacktrace\">{stacktrace}</pre>\n            </div>\n          ) : (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_message')}</h4>\n              <pre className=\"js-task-error-message\">{task.errorMessage}</pre>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\nimport ScannerContext from './ScannerContext';\nimport Stacktrace from './Stacktrace';\n\nconst AnalysisWarningsModal = lazyLoadComponent(\n  () => import('../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n  task: T.Task;\n}\n\ninterface State {\n  cancelTaskOpen: boolean;\n  scannerContextOpen: boolean;\n  stacktraceOpen: boolean;\n  warningsOpen: boolean;\n}\n\nexport default class TaskActions extends React.PureComponent<Props, State> {\n  state: State = {\n    cancelTaskOpen: false,\n    scannerContextOpen: false,\n    stacktraceOpen: false,\n    warningsOpen: false\n  };\n\n  handleFilterClick = () => {\n    this.props.onFilterTask(this.props.task);\n  };\n\n  handleCancelTask = () => {\n    return this.props.onCancelTask(this.props.task);\n  };\n\n  handleCancelClick = () => {\n    this.setState({ cancelTaskOpen: true });\n  };\n\n  handleShowScannerContextClick = () => {\n    this.setState({ scannerContextOpen: true });\n  };\n\n  closeCancelTask = () => {\n    this.setState({ cancelTaskOpen: false });\n  };\n\n  closeScannerContext = () => {\n    this.setState({ scannerContextOpen: false });\n  };\n\n  handleShowStacktraceClick = () => {\n    this.setState({ stacktraceOpen: true });\n  };\n\n  closeStacktrace = () => {\n    this.setState({ stacktraceOpen: false });\n  };\n\n  handleShowWarningsClick = () => {\n    this.setState({ warningsOpen: true });\n  };\n\n  closeWarnings = () => {\n    this.setState({ warningsOpen: false });\n  };\n\n  render() {\n    const { component, task } = this.props;\n\n    const canFilter = component === undefined;\n    const canCancel = task.status === STATUSES.PENDING;\n    const canShowStacktrace = task.errorMessage !== undefined;\n    const canShowWarnings = task.warningCount !== undefined && task.warningCount > 0;\n    const hasActions =\n      canFilter || canCancel || task.hasScannerContext || canShowStacktrace || canShowWarnings;\n\n    if (!hasActions) {\n      return <td>&nbsp;</td>;\n    }\n\n    return (\n      <td className=\"thin nowrap\">\n        <ActionsDropdown className=\"js-task-action\">\n          {canFilter && task.componentName && (\n            <ActionsDropdownItem className=\"js-task-filter\" onClick={this.handleFilterClick}>\n              {translateWithParameters(\n                'background_tasks.filter_by_component_x',\n                task.componentName\n              )}\n            </ActionsDropdownItem>\n          )}\n          {canCancel && (\n            <ActionsDropdownItem\n              className=\"js-task-cancel\"\n              destructive={true}\n              onClick={this.handleCancelClick}>\n              {translate('background_tasks.cancel_task')}\n            </ActionsDropdownItem>\n          )}\n          {task.hasScannerContext && (\n            <ActionsDropdownItem\n              className=\"js-task-show-scanner-context\"\n              onClick={this.handleShowScannerContextClick}>\n              {translate('background_tasks.show_scanner_context')}\n            </ActionsDropdownItem>\n          )}\n          {canShowStacktrace && (\n            <ActionsDropdownItem\n              className=\"js-task-show-stacktrace\"\n              onClick={this.handleShowStacktraceClick}>\n              {translate('background_tasks.show_stacktrace')}\n            </ActionsDropdownItem>\n          )}\n          {canShowWarnings && (\n            <ActionsDropdownItem\n              className=\"js-task-show-warnings\"\n              onClick={this.handleShowWarningsClick}>\n              {translate('background_tasks.show_warnings')}\n            </ActionsDropdownItem>\n          )}\n        </ActionsDropdown>\n\n        {this.state.cancelTaskOpen && (\n          <ConfirmModal\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_task')}\n            header={translate('background_tasks.cancel_task')}\n            isDestructive={true}\n            onClose={this.closeCancelTask}\n            onConfirm={this.handleCancelTask}>\n            {translate('background_tasks.cancel_task.text')}\n          </ConfirmModal>\n        )}\n\n        {this.state.scannerContextOpen && (\n          <ScannerContext onClose={this.closeScannerContext} task={task} />\n        )}\n\n        {this.state.stacktraceOpen && <Stacktrace onClose={this.closeStacktrace} task={task} />}\n\n        {this.state.warningsOpen && (\n          <AnalysisWarningsModal onClose={this.closeWarnings} taskId={task.id} />\n        )}\n      </td>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  type: string;\n}\n\nexport default function TaskType({ type }: Props) {\n  return (\n    <span className=\"display-inline-block note\">\n      {'['}\n      {translate('background_task.type', type)}\n      {']'}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport Organization from '../../../components/shared/Organization';\nimport { getBranchUrl, getProjectUrl, getPullRequestUrl } from '../../../helpers/urls';\nimport TaskType from './TaskType';\n\ninterface Props {\n  task: T.Task;\n}\n\nexport default function TaskComponent({ task }: Props) {\n  if (!task.componentKey) {\n    return (\n      <td>\n        <span className=\"note\">{task.id}</span>\n        <TaskType type={task.type} />\n      </td>\n    );\n  }\n\n  return (\n    <td>\n      {task.branch !== undefined && <BranchIcon className=\"little-spacer-right\" />}\n      {task.pullRequest !== undefined && <PullRequestIcon className=\"little-spacer-right\" />}\n\n      {!task.branch && !task.pullRequest && task.componentQualifier && (\n        <span className=\"little-spacer-right\">\n          <QualifierIcon qualifier={task.componentQualifier} />\n        </span>\n      )}\n\n      {task.organization && <Organization organizationKey={task.organization} />}\n\n      {task.componentName && (\n        <Link className=\"spacer-right\" to={getTaskComponentUrl(task.componentKey, task)}>\n          {task.componentName}\n\n          {task.branch && (\n            <span className=\"text-limited text-text-top\" title={task.branch}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.branch}\n            </span>\n          )}\n\n          {task.pullRequest && (\n            <span className=\"text-limited text-text-top\" title={task.pullRequestTitle}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.pullRequest}\n            </span>\n          )}\n        </Link>\n      )}\n\n      <TaskType type={task.type} />\n    </td>\n  );\n}\n\nfunction getTaskComponentUrl(componentKey: string, task: T.Task) {\n  if (task.branch) {\n    return getBranchUrl(componentKey, task.branch);\n  } else if (task.pullRequest) {\n    return getPullRequestUrl(componentKey, task.pullRequest);\n  }\n  return getProjectUrl(componentKey);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as differenceInDays from 'date-fns/difference_in_days';\nimport * as React from 'react';\nimport TimeFormatter from 'sonar-ui-common/components/intl/TimeFormatter';\nimport { isValidDate, parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  date?: string;\n  baseDate?: string;\n}\n\nexport default function TaskDate({ date, baseDate }: Props) {\n  const parsedDate = date && parseDate(date);\n  const parsedBaseDate = baseDate && parseDate(baseDate);\n  const diff =\n    parsedDate && parsedBaseDate && isValidDate(parsedDate) && isValidDate(parsedBaseDate)\n      ? differenceInDays(parsedDate, parsedBaseDate)\n      : 0;\n\n  return (\n    <td className=\"thin nowrap text-right\">\n      {diff > 0 && <span className=\"text-warning little-spacer-right\">{`(+${diff}d)`}</span>}\n\n      {parsedDate && isValidDate(parsedDate) ? <TimeFormatter date={parsedDate} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as isSameDay from 'date-fns/is_same_day';\nimport * as React from 'react';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  submittedAt: string;\n  prevSubmittedAt?: string;\n}\n\nexport default function TaskDay({ submittedAt, prevSubmittedAt }: Props) {\n  const shouldDisplay =\n    !prevSubmittedAt || !isSameDay(parseDate(submittedAt), parseDate(prevSubmittedAt));\n\n  return (\n    <td className=\"thin nowrap text-right small\">\n      {shouldDisplay ? <DateFormatter date={submittedAt} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { formatDuration } from '../utils';\n\ninterface Props {\n  ms?: number;\n}\n\nexport default function TaskExecutionTime({ ms }: Props) {\n  return <td className=\"thin nowrap text-right\">{ms && formatDuration(ms)}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  id: string;\n}\n\nexport default function TaskId({ id }: Props) {\n  return (\n    <td className=\"thin nowrap\">\n      <div className=\"note\">{id}</div>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PendingIcon from 'sonar-ui-common/components/icons/PendingIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  status: string;\n}\n\nexport default function TaskStatus({ status }: Props) {\n  let inner;\n\n  switch (status) {\n    case STATUSES.PENDING:\n      inner = <PendingIcon />;\n      break;\n    case STATUSES.IN_PROGRESS:\n      inner = <i className=\"spinner\" />;\n      break;\n    case STATUSES.SUCCESS:\n      inner = (\n        <span className=\"badge badge-success\">{translate('background_task.status.SUCCESS')}</span>\n      );\n      break;\n    case STATUSES.FAILED:\n      inner = (\n        <span className=\"badge badge-error\">{translate('background_task.status.FAILED')}</span>\n      );\n      break;\n    case STATUSES.CANCELED:\n      inner = <span className=\"badge\">{translate('background_task.status.CANCELED')}</span>;\n      break;\n    default:\n      inner = '';\n  }\n\n  return <td className=\"thin spacer-right\">{inner}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  submitter?: string;\n}\n\nexport default function TaskSubmitter({ submitter }: Props) {\n  return (\n    <td className=\"thin note\">\n      <span className=\"text-limited-small text-bottom\">{submitter || translate('anonymous')}</span>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport TaskActions from './TaskActions';\nimport TaskComponent from './TaskComponent';\nimport TaskDate from './TaskDate';\nimport TaskDay from './TaskDay';\nimport TaskExecutionTime from './TaskExecutionTime';\nimport TaskId from './TaskId';\nimport TaskStatus from './TaskStatus';\nimport TaskSubmitter from './TaskSubmitter';\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n  task: T.Task;\n  previousTask?: T.Task;\n}\n\nexport default function Task(props: Props) {\n  const { task, component, onCancelTask, onFilterTask, previousTask } = props;\n\n  return (\n    <tr>\n      <TaskStatus status={task.status} />\n      <TaskComponent task={task} />\n      <TaskId id={task.id} />\n      <TaskSubmitter submitter={task.submitterLogin} />\n      <TaskDay\n        prevSubmittedAt={previousTask && previousTask.submittedAt}\n        submittedAt={task.submittedAt}\n      />\n      <TaskDate date={task.submittedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.startedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.executedAt} />\n      <TaskExecutionTime ms={task.executionTimeMs} />\n      <TaskActions\n        component={component}\n        onCancelTask={onCancelTask}\n        onFilterTask={onFilterTask}\n        task={task}\n      />\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Task from './Task';\n\ninterface Props {\n  tasks: T.Task[];\n  component?: unknown;\n  loading: boolean;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n}\n\nexport default function Tasks({ tasks, component, loading, onCancelTask, onFilterTask }: Props) {\n  const className = classNames('data zebra zebra-hover background-tasks', {\n    'new-loading': loading\n  });\n\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className={className}>\n        <thead>\n          <tr>\n            <th>{translate('background_tasks.table.status')}</th>\n            <th>{translate('background_tasks.table.task')}</th>\n            <th>{translate('background_tasks.table.id')}</th>\n            <th>{translate('background_tasks.table.submitter')}</th>\n            <th>&nbsp;</th>\n            <th className=\"text-right\">{translate('background_tasks.table.submitted')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.started')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.finished')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.duration')}</th>\n            <th>&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task, index, tasks) => (\n            <Task\n              component={component}\n              key={task.id}\n              onCancelTask={onCancelTask}\n              onFilterTask={onFilterTask}\n              previousTask={index > 0 ? tasks[index - 1] : undefined}\n              task={task}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, uniq } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseAsDate } from 'sonar-ui-common/helpers/query';\nimport {\n  cancelAllTasks,\n  cancelTask as cancelTaskAPI,\n  getActivity,\n  getStatus,\n  getTypes\n} from '../../../api/ce';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { Location, Router } from '../../../components/hoc/withRouter';\nimport { fetchOrganizations } from '../../../store/rootActions';\nimport '../background-tasks.css';\nimport { CURRENTS, DEBOUNCE_DELAY, DEFAULT_FILTERS, STATUSES } from '../constants';\nimport { mapFiltersToParameters, Query, updateTask } from '../utils';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Search from './Search';\nimport Stats from './Stats';\nimport Tasks from './Tasks';\n\ninterface Props {\n  component?: Pick<T.Component, 'key'> & { id: string }; // id should be removed when api/ce/activity accept a component key instead of an id\n  fetchOrganizations: (keys: string[]) => void;\n  location: Location;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  failingCount: number;\n  loading: boolean;\n  pendingCount: number;\n  pendingTime?: number;\n  tasks: T.Task[];\n  types?: string[];\n}\n\nexport class BackgroundTasksApp extends React.PureComponent<Props, State> {\n  loadTasksDebounced: () => void;\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { failingCount: 0, loading: true, pendingCount: 0, tasks: [] };\n    this.loadTasksDebounced = debounce(this.loadTasks, DEBOUNCE_DELAY);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    getTypes().then(\n      types => {\n        this.setState({ types });\n        this.loadTasks();\n      },\n      () => {}\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.component !== this.props.component ||\n      prevProps.location !== this.props.location\n    ) {\n      this.loadTasksDebounced();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadTasks = () => {\n    this.setState({ loading: true });\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt =\n      this.props.location.query.minSubmittedAt || DEFAULT_FILTERS.minSubmittedAt;\n    const maxExecutedAt = this.props.location.query.maxExecutedAt || DEFAULT_FILTERS.maxExecutedAt;\n    const query = this.props.location.query.query || DEFAULT_FILTERS.query;\n\n    const filters = { status, taskType, currents, minSubmittedAt, maxExecutedAt, query };\n    const parameters = mapFiltersToParameters(filters);\n\n    if (this.props.component) {\n      parameters.componentId = this.props.component.id;\n    }\n\n    Promise.all([getActivity(parameters), getStatus(parameters.componentId)]).then(\n      ([{ tasks }, status]) => {\n        if (this.mounted) {\n          const organizations = uniq(tasks.map(task => task.organization).filter(o => o));\n          this.props.fetchOrganizations(organizations);\n\n          this.setState({\n            failingCount: status.failing,\n            loading: false,\n            pendingCount: status.pending,\n            pendingTime: status.pendingTime,\n            tasks\n          });\n        }\n      },\n      this.stopLoading\n    );\n  };\n\n  handleFilterUpdate = (nextState: Partial<Query>) => {\n    const nextQuery = { ...this.props.location.query, ...nextState };\n\n    // remove defaults\n    Object.keys(DEFAULT_FILTERS).forEach((key: keyof typeof DEFAULT_FILTERS) => {\n      if (nextQuery[key] === DEFAULT_FILTERS[key]) {\n        delete nextQuery[key];\n      }\n    });\n\n    if (nextQuery.minSubmittedAt) {\n      nextQuery.minSubmittedAt = toShortNotSoISOString(nextQuery.minSubmittedAt);\n    }\n\n    if (nextQuery.maxExecutedAt) {\n      nextQuery.maxExecutedAt = toShortNotSoISOString(nextQuery.maxExecutedAt);\n    }\n\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: nextQuery\n    });\n  };\n\n  handleCancelTask = (task: T.Task) => {\n    this.setState({ loading: true });\n\n    return cancelTaskAPI(task.id).then(nextTask => {\n      if (this.mounted) {\n        this.setState(state => ({\n          tasks: updateTask(state.tasks, nextTask),\n          loading: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleFilterTask = (task: T.Task) => {\n    this.handleFilterUpdate({ query: task.componentKey });\n  };\n\n  handleShowFailing = () => {\n    this.handleFilterUpdate({\n      ...DEFAULT_FILTERS,\n      status: STATUSES.FAILED,\n      currents: CURRENTS.ONLY_CURRENTS\n    });\n  };\n\n  handleCancelAllPending = () => {\n    this.setState({ loading: true });\n\n    cancelAllTasks().then(() => {\n      if (this.mounted) {\n        this.loadTasks();\n      }\n    }, this.stopLoading);\n  };\n\n  render() {\n    const { component } = this.props;\n    const { loading, types, tasks } = this.state;\n\n    if (!types) {\n      return (\n        <div className=\"page page-limited\">\n          <i className=\"spinner\" />\n        </div>\n      );\n    }\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt = parseAsDate(this.props.location.query.minSubmittedAt);\n    const maxExecutedAt = parseAsDate(this.props.location.query.maxExecutedAt);\n    const query = this.props.location.query.query || '';\n\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"background_tasks\" />\n        <Helmet defer={false} title={translate('background_tasks.page')} />\n        <Header component={component} />\n\n        <Stats\n          component={component}\n          failingCount={this.state.failingCount}\n          onCancelAllPending={this.handleCancelAllPending}\n          onShowFailing={this.handleShowFailing}\n          pendingCount={this.state.pendingCount}\n          pendingTime={this.state.pendingTime}\n        />\n\n        <Search\n          component={component}\n          currents={currents}\n          loading={loading}\n          maxExecutedAt={maxExecutedAt}\n          minSubmittedAt={minSubmittedAt}\n          onFilterUpdate={this.handleFilterUpdate}\n          onReload={this.loadTasksDebounced}\n          query={query}\n          status={status}\n          taskType={taskType}\n          types={types}\n        />\n\n        <Tasks\n          component={component}\n          loading={loading}\n          onCancelTask={this.handleCancelTask}\n          onFilterTask={this.handleFilterTask}\n          tasks={tasks}\n        />\n\n        <Footer tasks={tasks} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganizations };\n\nexport default connect(null, mapDispatchToProps)(BackgroundTasksApp);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as addMonths from 'date-fns/add_months';\nimport * as setMonth from 'date-fns/set_month';\nimport * as setYear from 'date-fns/set_year';\nimport * as subMonths from 'date-fns/sub_months';\nimport { range } from 'lodash';\nimport * as React from 'react';\nimport { DayModifiers, Modifier, Modifiers } from 'react-day-picker';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { ButtonIcon, ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport CalendarIcon from 'sonar-ui-common/components/icons/CalendarIcon';\nimport ChevronLeftIcon from 'sonar-ui-common/components/icons/ChevronLeftIcon';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport {\n  getShortMonthName,\n  getShortWeekDayName,\n  getWeekDayName\n} from 'sonar-ui-common/helpers/l10n';\nimport './DayPicker.css';\nimport './styles.css';\n\nconst DayPicker = lazyLoadComponent(() => import('react-day-picker'), 'DayPicker');\n\ninterface Props {\n  className?: string;\n  currentMonth?: Date;\n  highlightFrom?: Date;\n  highlightTo?: Date;\n  inputClassName?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  name?: string;\n  onChange: (date: Date | undefined) => void;\n  placeholder: string;\n  value?: Date;\n}\n\ninterface State {\n  currentMonth: Date;\n  open: boolean;\n  lastHovered?: Date;\n}\n\ntype Week = [string, string, string, string, string, string, string];\n\nexport default class DateInput extends React.PureComponent<Props, State> {\n  input?: HTMLInputElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { currentMonth: props.value || props.currentMonth || new Date(), open: false };\n  }\n\n  focus = () => {\n    if (this.input) {\n      this.input.focus();\n    }\n    this.openCalendar();\n  };\n\n  handleResetClick = () => {\n    this.closeCalendar();\n    this.props.onChange(undefined);\n  };\n\n  openCalendar = () => {\n    this.setState({\n      currentMonth: this.props.value || this.props.currentMonth || new Date(),\n      lastHovered: undefined,\n      open: true\n    });\n  };\n\n  closeCalendar = () => {\n    this.setState({ open: false });\n  };\n\n  handleDayClick = (day: Date, modifiers: DayModifiers) => {\n    if (!modifiers.disabled) {\n      this.closeCalendar();\n      this.props.onChange(day);\n    }\n  };\n\n  handleDayMouseEnter = (day: Date, modifiers: DayModifiers) => {\n    this.setState({ lastHovered: modifiers.disabled ? undefined : day });\n  };\n\n  handleCurrentMonthChange = ({ value }: { value: number }) => {\n    this.setState((state: State) => ({ currentMonth: setMonth(state.currentMonth, value) }));\n  };\n\n  handleCurrentYearChange = ({ value }: { value: number }) => {\n    this.setState(state => ({ currentMonth: setYear(state.currentMonth, value) }));\n  };\n\n  handlePreviousMonthClick = () => {\n    this.setState(state => ({ currentMonth: subMonths(state.currentMonth, 1) }));\n  };\n\n  handleNextMonthClick = () => {\n    this.setState(state => ({ currentMonth: addMonths(state.currentMonth, 1) }));\n  };\n\n  render() {\n    const { highlightFrom, highlightTo, minDate, value } = this.props;\n    const { lastHovered } = this.state;\n\n    const after = this.props.maxDate || new Date();\n\n    const months = range(12);\n    const years = range(new Date().getFullYear() - 10, new Date().getFullYear() + 1);\n\n    const selectedDays: Modifier[] = value ? [value] : [];\n    let modifiers: Partial<Modifiers> | undefined;\n    const lastHoveredOrValue = lastHovered || value;\n\n    if (highlightFrom && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: highlightFrom, to: lastHoveredOrValue } };\n      selectedDays.push(highlightFrom);\n    }\n    if (highlightTo && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: lastHoveredOrValue, to: highlightTo } };\n      selectedDays.push(highlightTo);\n    }\n\n    const weekdaysLong = range(7).map(getWeekDayName) as Week;\n    const weekdaysShort = range(7).map(getShortWeekDayName) as Week;\n\n    return (\n      <OutsideClickHandler onClickOutside={this.closeCalendar}>\n        <span className={classNames('date-input-control', this.props.className)}>\n          <InputWrapper\n            className={classNames('date-input-control-input', this.props.inputClassName, {\n              'is-filled': this.props.value !== undefined\n            })}\n            innerRef={node => (this.input = node)}\n            name={this.props.name}\n            onFocus={this.openCalendar}\n            placeholder={this.props.placeholder}\n            readOnly={true}\n            type=\"text\"\n            value={value}\n          />\n          <CalendarIcon className=\"date-input-control-icon\" fill=\"\" />\n          {this.props.value !== undefined && (\n            <ClearButton\n              className=\"button-tiny date-input-control-reset\"\n              iconProps={{ size: 12 }}\n              onClick={this.handleResetClick}\n            />\n          )}\n          {this.state.open && (\n            <div className=\"date-input-calendar\">\n              <nav className=\"date-input-calendar-nav\">\n                <ButtonIcon className=\"button-small\" onClick={this.handlePreviousMonthClick}>\n                  <ChevronLeftIcon />\n                </ButtonIcon>\n                <div className=\"date-input-calender-month\">\n                  <Select\n                    className=\"date-input-calender-month-select\"\n                    onChange={this.handleCurrentMonthChange}\n                    options={months.map(month => ({\n                      label: getShortMonthName(month),\n                      value: month\n                    }))}\n                    value={this.state.currentMonth.getMonth()}\n                  />\n                  <Select\n                    className=\"date-input-calender-month-select spacer-left\"\n                    onChange={this.handleCurrentYearChange}\n                    options={years.map(year => ({ label: String(year), value: year }))}\n                    value={this.state.currentMonth.getFullYear()}\n                  />\n                </div>\n                <ButtonIcon className=\"button-small\" onClick={this.handleNextMonthClick}>\n                  <ChevronRightIcon />\n                </ButtonIcon>\n              </nav>\n              <DayPicker\n                captionElement={<NullComponent />}\n                disabledDays={{ after, before: minDate }}\n                firstDayOfWeek={1}\n                modifiers={modifiers}\n                month={this.state.currentMonth}\n                navbarElement={<NullComponent />}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n                selectedDays={selectedDays}\n                weekdaysLong={weekdaysLong}\n                weekdaysShort={weekdaysShort}\n              />\n            </div>\n          )}\n        </span>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nfunction NullComponent() {\n  return null;\n}\n\ntype InputWrapperProps = T.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value'> &\n  InjectedIntlProps & {\n    innerRef: React.Ref<HTMLInputElement>;\n    value: Date | undefined;\n  };\n\nconst InputWrapper = injectIntl(({ innerRef, intl, value, ...other }: InputWrapperProps) => {\n  const formattedValue =\n    value && intl.formatDate(value, { year: 'numeric', month: 'short', day: 'numeric' });\n  return <input {...other} ref={innerRef} value={formattedValue || ''} />;\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".DayPicker{display:inline-block}.DayPicker-wrapper{position:relative;-webkit-user-select:none;-ms-user-select:none;user-select:none;padding-bottom:8px;flex-direction:row}.DayPicker-Months{display:flex;flex-wrap:wrap;justify-content:center}.DayPicker-Month{display:table;border-collapse:collapse;border-spacing:0;-webkit-user-select:none;-ms-user-select:none;user-select:none;margin:8px 8px 0}.DayPicker-Weekdays{display:table-header-group}.DayPicker-WeekdaysRow{display:table-row}.DayPicker-Weekday{display:table-cell;padding:8px;font-size:12px;text-align:center;color:#999}.DayPicker-Weekday abbr[title]{border-bottom:none;text-decoration:none}.DayPicker-Body{display:table-row-group}.DayPicker-Week{display:table-row}.DayPicker-Day{display:table-cell;line-height:15px;padding:8px;text-align:center;cursor:pointer;vertical-align:top;outline:none}.DayPicker--interactionDisabled .DayPicker-Day{cursor:default}.DayPicker-Footer{padding-top:8px}.DayPicker-Day--today{font-weight:700}.DayPicker-Day--outside{cursor:default;color:#8b9898}.DayPicker-Day--disabled{color:#cdcdcd;cursor:not-allowed}.DayPicker-Day--sunday{background-color:#f7f8f8}.DayPicker-Day--sunday:not(.DayPicker-Day--today){color:#dce0e0}.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:#4b9fd5;color:#fff}.DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--highlighted):not(.DayPicker-Day--outside):hover{background-color:#f3f3f3}.DayPicker-Day--highlighted:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside){background-color:#cae3f2}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".date-input-control{position:relative;display:inline-block;cursor:pointer}.date-input-control-input{width:130px;padding-left:24px!important;cursor:pointer}.date-input-control-input.is-filled{padding-right:16px!important}.date-input-control-icon{position:absolute;top:4px;left:4px}.date-input-control-icon path{fill:#cdcdcd;transition:fill .3s ease}.date-input-control-input:focus+.date-input-control-icon path{fill:#4b9fd5}.date-input-control-reset{position:absolute;top:4px;right:4px;border:none}.date-input-calendar{position:absolute;z-index:7500;top:100%;left:0;border:1px solid #e6e6e6;background-color:#fff;box-shadow:0 6px 12px rgba(0,0,0,.175)}.date-input-calendar-nav{display:flex;justify-content:space-between;align-items:center;padding-top:8px;padding-left:8px;padding-right:8px}.date-input-calender-month-select{width:70px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(\n    () => getTask(id),\n    () => getTask(id)\n  );\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateInput from './DateInput';\n\ntype DateRange = { from?: Date; to?: Date };\n\ninterface Props {\n  className?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  onChange: (date: DateRange) => void;\n  value?: DateRange;\n}\n\nexport default class DateRangeInput extends React.PureComponent<Props> {\n  toDateInput?: DateInput | null;\n\n  get from() {\n    return this.props.value && this.props.value.from;\n  }\n\n  get to() {\n    return this.props.value && this.props.value.to;\n  }\n\n  handleFromChange = (from: Date | undefined) => {\n    this.props.onChange({ from, to: this.to });\n\n    // use `setTimeout` to work around the immediate closing of the `toDateInput`\n    setTimeout(() => {\n      if (from && !this.to && this.toDateInput) {\n        this.toDateInput.focus();\n      }\n    }, 0);\n  };\n\n  handleToChange = (to: Date | undefined) => {\n    this.props.onChange({ from: this.from, to });\n  };\n\n  render() {\n    return (\n      <div className={classNames('display-inline-flex-center', this.props.className)}>\n        <DateInput\n          currentMonth={this.to}\n          data-test=\"from\"\n          highlightTo={this.to}\n          maxDate={this.to}\n          onChange={this.handleFromChange}\n          placeholder={translate('start_date')}\n          value={this.from}\n        />\n        <span className=\"note little-spacer-left little-spacer-right\">{translate('to_')}</span>\n        <DateInput\n          currentMonth={this.from}\n          data-test=\"to\"\n          highlightFrom={this.from}\n          minDate={this.from}\n          onChange={this.handleToChange}\n          placeholder={translate('end_date')}\n          ref={element => (this.toDateInput = element)}\n          value={this.to}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { areThereCustomOrganizations, getOrganizationByKey, Store } from '../../store/rootReducer';\nimport OrganizationLink from '../ui/OrganizationLink';\n\ninterface OwnProps {\n  organizationKey: string;\n}\n\ninterface Props {\n  link?: boolean;\n  linkClassName?: string;\n  organization: { key: string; name: string } | null;\n  shouldBeDisplayed?: boolean;\n}\n\nfunction Organization(props: Props) {\n  const { link = true, organization, shouldBeDisplayed } = props;\n\n  if (!shouldBeDisplayed || !organization) {\n    return null;\n  }\n\n  return (\n    <span>\n      {link ? (\n        <OrganizationLink className={props.linkClassName} organization={organization}>\n          {organization.name}\n        </OrganizationLink>\n      ) : (\n        organization.name\n      )}\n      <span className=\"slash-separator\" />\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps) => ({\n  organization: getOrganizationByKey(state, ownProps.organizationKey),\n  shouldBeDisplayed: areThereCustomOrganizations(state)\n});\n\nexport default connect(mapStateToProps)(Organization);\n\nexport const UnconnectedOrganization = Organization;\n"],"sourceRoot":""}