{"version":3,"sources":["webpack:///../sonar-docs/src/tooltips/quality-gates/quality-gate-projects.md","webpack:///./src/main/js/apps/projectQualityGate/Form.tsx","webpack:///./src/main/js/apps/projectQualityGate/Header.tsx","webpack:///./src/main/js/apps/projectQualityGate/App.tsx","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.js","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.css?2512","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.css","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.ts"],"names":["mounted","state","loading","stopLoading","setState","handleChange","option","gate","isSet","value","isUnset","isChanged","id","Number","props","onChange","then","renderGateName","isDefault","label","componentDidMount","this","componentWillUnmount","renderSelect","options","allGates","map","String","name","clearable","disabled","optionRenderer","style","width","valueRenderer","render","className","Header","DocTooltip","doc","handleChangeGate","oldId","newId","Promise","resolve","component","requestData","gateId","organization","projectKey","key","addGlobalSuccessMessage","newGate","find","onComponentChange","qualityGate","undefined","checkPermissions","fetchQualityGates","handleRequiredAuthorization","configuration","showQualityGates","all","project","qualityGateList","qualitygates","Suggestions","suggestions","defer","title","A11ySkipTarget","anchor","Object","defineProperty","exports","classNames","React","HelpIcon_1","theme_1","Tooltip_1","default","_a","tagName","createElement","mouseLeaveDelay","onShow","overlay","placement","children","ThemeConsumer","theme","fill","colors","gray71","size","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","componentDidUpdate","prevProps","api","content","__esModule","module","i","exported","locals","___CSS_LOADER_API_IMPORT___","push","DocMarkdownBlock","childProps","overlayProps","isTooltip","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","getFrontMatterPosition","lines","firstLine","lastLine","length","trim","parseFrontMatter","data","tokens","split","x","cutConditionalContent","tag","beginning","ending","newContent","start","indexOf","end","substring","console","error","Error","getFrontMatter","position","slice","separateFrontMatter","frontmatter","join","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","replace","RegExp","message","dispatch","store","history","returnTo","window","location","pathname","search","hash","query","return_to"],"mappings":"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","file":"js/344.1588858339197.chunk.js","sourcesContent":["export default \"The Default gate is applied to all projects not explicitly assigned to a gate. Quality Profile and Gate administrators can assign projects to a gate from the Quality Profile page. Project administrators can also choose a non-default gate.\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  allGates: T.QualityGate[];\n  gate?: T.QualityGate;\n  onChange: (oldGate?: number, newGate?: number) => Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\ninterface Option {\n  isDefault?: boolean;\n  label: string;\n  value: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleChange = (option: { value: string }) => {\n    const { gate } = this.props;\n\n    const isSet = gate == null && option.value != null;\n    const isUnset = gate != null && option.value == null;\n    const isChanged = gate != null && gate.id !== Number(option.value);\n    const hasChanged = isSet || isUnset || isChanged;\n\n    if (hasChanged) {\n      this.setState({ loading: true });\n      this.props\n        .onChange(gate && gate.id, Number(option.value))\n        .then(this.stopLoading, this.stopLoading);\n    }\n  };\n\n  renderGateName = (option: { isDefault?: boolean; label: string }) => {\n    if (option.isDefault) {\n      return (\n        <span>\n          <strong>{translate('default')}</strong>\n          {': '}\n          {option.label}\n        </span>\n      );\n    }\n\n    return <span>{option.label}</span>;\n  };\n\n  renderSelect() {\n    const { gate, allGates } = this.props;\n\n    const options: Option[] = allGates.map(gate => ({\n      value: String(gate.id),\n      label: gate.name,\n      isDefault: gate.isDefault\n    }));\n\n    return (\n      <Select\n        clearable={false}\n        disabled={this.state.loading}\n        onChange={this.handleChange}\n        optionRenderer={this.renderGateName}\n        options={options}\n        style={{ width: 300 }}\n        value={gate && String(gate.id)}\n        valueRenderer={this.renderGateName}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSelect()}\n        {this.state.loading && <i className=\"spinner spacer-left\" />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../components/docs/DocTooltip';\n\nexport default function Header() {\n  return (\n    <header className=\"page-header\">\n      <div className=\"page-title display-flex-center\">\n        <h1>{translate('project_quality_gate.page')}</h1>\n        <DocTooltip\n          className=\"spacer-left\"\n          doc={import(\n            /* webpackMode: \"eager\" */ 'Docs/tooltips/quality-gates/quality-gate-projects.md'\n          )}\n        />\n      </div>\n      <div className=\"page-description\">{translate('project_quality_gate.page.description')}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  associateGateWithProject,\n  dissociateGateWithProject,\n  fetchQualityGates,\n  getGateForProject\n} from '../../api/quality-gates';\nimport A11ySkipTarget from '../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport addGlobalSuccessMessage from '../../app/utils/addGlobalSuccessMessage';\nimport handleRequiredAuthorization from '../../app/utils/handleRequiredAuthorization';\nimport Form from './Form';\nimport Header from './Header';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\ninterface State {\n  allGates?: T.QualityGate[];\n  gate?: T.QualityGate;\n  loading: boolean;\n}\n\nexport default class App extends React.PureComponent<Props> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.checkPermissions()) {\n      this.fetchQualityGates();\n    } else {\n      handleRequiredAuthorization();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkPermissions() {\n    const { configuration } = this.props.component;\n    const hasPermission = configuration && configuration.showQualityGates;\n    return !!hasPermission;\n  }\n\n  fetchQualityGates() {\n    const { component } = this.props;\n    this.setState({ loading: true });\n    Promise.all([\n      fetchQualityGates({ organization: component.organization }),\n      getGateForProject({ organization: component.organization, project: component.key })\n    ]).then(\n      ([qualityGateList, gate]) => {\n        if (this.mounted) {\n          this.setState({\n            allGates: qualityGateList?.qualitygates,\n            gate,\n            loading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeGate = (oldId?: number, newId?: number) => {\n    const { allGates } = this.state;\n    if ((!oldId && !newId) || !allGates) {\n      return Promise.resolve();\n    }\n\n    const { component } = this.props;\n    const requestData = {\n      gateId: newId ? newId : oldId!,\n      organization: component.organization,\n      projectKey: component.key\n    };\n    const request = newId\n      ? associateGateWithProject(requestData)\n      : dissociateGateWithProject(requestData);\n\n    return request.then(() => {\n      if (this.mounted) {\n        addGlobalSuccessMessage(translate('project_quality_gate.successfully_updated'));\n        if (newId) {\n          const newGate = allGates.find(gate => gate.id === newId);\n          if (newGate) {\n            this.setState({ gate: newGate });\n            this.props.onComponentChange({ qualityGate: newGate });\n          }\n        } else {\n          this.setState({ gate: undefined });\n        }\n      }\n    });\n  };\n\n  render() {\n    if (!this.checkPermissions()) {\n      return null;\n    }\n\n    const { allGates, gate, loading } = this.state;\n\n    return (\n      <div className=\"page page-limited\" id=\"project-quality-gate\">\n        <Suggestions suggestions=\"project_quality_gate\" />\n        <Helmet defer={false} title={translate('project_quality_gate.page')} />\n        <A11ySkipTarget anchor=\"qg_main\" />\n        <Header />\n        {loading ? (\n          <i className=\"spinner\" />\n        ) : (\n          allGates && <Form allGates={allGates} gate={gate} onChange={this.handleChangeGate} />\n        )}\n      </div>\n    );\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar HelpIcon_1 = require(\"../icons/HelpIcon\");\nvar theme_1 = require(\"../theme\");\nrequire(\"./HelpTooltip.css\");\nvar Tooltip_1 = require(\"./Tooltip\");\nfunction HelpTooltip(props) {\n    var _a = props.tagName, tagName = _a === void 0 ? 'div' : _a;\n    return React.createElement(tagName, { className: classNames('help-tooltip', props.className) }, React.createElement(Tooltip_1.default, { mouseLeaveDelay: 0.25, onShow: props.onShow, overlay: props.overlay, placement: props.placement },\n        React.createElement(\"span\", { className: \"display-inline-flex-center\" }, props.children || (React.createElement(theme_1.ThemeConsumer, null, function (theme) { return React.createElement(HelpIcon_1.default, { fill: theme.colors.gray71, size: 12 }); })))));\n}\nexports.default = HelpTooltip;\n//# sourceMappingURL=HelpTooltip.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./HelpTooltip.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".help-tooltip{display:inline-flex;align-items:center;vertical-align:middle}.help-toolip-link{display:block;width:12px;height:12px;border:none}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoadComponent(() => import('./DocMarkdownBlock'), 'DocMarkdownBlock');\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    if (start < end) {\n      newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    } else {\n      // When conditional tags are incorrectly used we log an error, strip them out and pass to the next pair of tags\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          `Documentation - incorrect usage of conditional formatting tags here: \"${newContent.substring(\n            end,\n            start + beginning.length\n          )}\"`\n        )\n      );\n      newContent =\n        newContent.substring(0, end) +\n        newContent.substring(end + ending.length, start) +\n        newContent.substring(start + beginning.length);\n    }\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getHistory from 'sonar-ui-common/helpers/getHistory';\nimport { requireAuthorization } from '../../store/appState';\nimport getStore from './getStore';\n\nexport default function handleRequiredAuthorization() {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n"],"sourceRoot":""}