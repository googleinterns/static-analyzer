{"version":3,"sources":["webpack:///./node_modules/sonar-ui-common/components/icons/WarningIcon.js","webpack:///./src/main/js/components/common/AnalysisWarningsModal.tsx"],"names":["Object","defineProperty","exports","value","React","Icon_1","default","_a","className","fill","size","createElement","ThemedIcon","theme","d","style","colors","warningIconColor","AnalysisWarningsModal","props","super","mounted","keepLineBreaks","warning","includes","lines","split","map","line","index","key","length","this","state","loading","warnings","taskId","loadWarnings","prevProps","setState","then","header","contentLabel","onRequestClose","onClose","onClick"],"mappings":"iGACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAIC,EAAQ,EAAQ,GAChBC,EAAS,EAAQ,KAQrBH,EAAQI,QAPR,SAAqBC,GACjB,IAAIC,EAAYD,EAAGC,UAAWC,EAAOF,EAAGE,KAAMC,EAAOH,EAAGG,KACxD,OAAQN,EAAMO,cAAcN,EAAOO,WAAY,CAAEJ,UAAWA,EAAWE,KAAMA,IAAQ,SAAUH,GAC3F,IAAIM,EAAQN,EAAGM,MACf,OAAQT,EAAMO,cAAc,OAAQ,CAAEG,EAAG,oZAAqZC,MAAO,CAAEN,KAAMA,GAAQI,EAAMG,OAAOC,yB,kCCR1e,0IAsCe,MAAMC,UAA8B,gBAGjD,YAAYC,GACVC,MAAMD,GAHR,KAAAE,SAAU,EA2CV,KAAAC,eAAkBC,IAChB,GAAIA,EAAQC,SAAS,MAAO,CAC1B,MAAMC,EAAQF,EAAQG,MAAM,MAC5B,OACE,gCACGD,EAAME,IAAI,CAACC,EAAMC,IAChB,gBAAC,WAAc,CAACC,IAAKD,GAClBD,EACAC,EAAQJ,EAAMM,OAAS,GAAK,8BAMrC,OAAOR,GArDTS,KAAKC,MAAQ,CAAEC,SAAUf,EAAMgB,SAAUA,SAAUhB,EAAMgB,UAAY,IAGvE,oBACEH,KAAKX,SAAU,GACVW,KAAKb,MAAMgB,UAAYH,KAAKb,MAAMiB,QACrCJ,KAAKK,aAAaL,KAAKb,MAAMiB,QAIjC,mBAAmBE,GACjB,MAAM,OAAEF,EAAF,SAAUD,GAAaH,KAAKb,OAC7BgB,GAAYC,GAAUE,EAAUF,SAAWA,EAC9CJ,KAAKK,aAAaD,GACTD,GAAYG,EAAUH,WAAaA,GAC5CH,KAAKO,SAAS,CAAEJ,aAIpB,uBACEH,KAAKX,SAAU,EAGjB,aAAae,GACXJ,KAAKO,SAAS,CAAEL,SAAS,IACzB,YAAQE,EAAQ,CAAC,aAAaI,KAC5B,EAAGL,WAAW,OACRH,KAAKX,SACPW,KAAKO,SAAS,CAAEL,SAAS,EAAOC,cAGpC,KACMH,KAAKX,SACPW,KAAKO,SAAS,CAAEL,SAAS,MAwBjC,SACE,MAAMO,EAAS,oBAAU,YACzB,OACE,gBAAC,IAAK,CAACC,aAAcD,EAAQE,eAAgBX,KAAKb,MAAMyB,SACtD,0BAAQpC,UAAU,cAChB,0BAAKiC,IAGP,uBAAKjC,UAAU,mDACb,gBAAC,IAAe,CAAC0B,QAASF,KAAKC,MAAMC,SAClCF,KAAKC,MAAME,SAASR,IAAI,CAACJ,EAASM,IACjC,uBAAKrB,UAAU,uBAAuBsB,IAAKD,GACzC,gBAAC,IAAW,CAACrB,UAAU,2BACvB,uBAAKA,UAAU,4BAA4BwB,KAAKV,eAAeC,QAMvE,0BAAQf,UAAU,cAChB,gBAAC,kBAAe,CAACA,UAAU,iBAAiBqC,QAASb,KAAKb,MAAMyB,SAC7D,oBAAU","file":"js/374.m.9a875165.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction WarningIcon(_a) {\n    var className = _a.className, fill = _a.fill, size = _a.size;\n    return (React.createElement(Icon_1.ThemedIcon, { className: className, size: size }, function (_a) {\n        var theme = _a.theme;\n        return (React.createElement(\"path\", { d: \"M9 12.242v-1.484c0-.14-.11-.258-.25-.258h-1.5c-.14 0-.25.117-.25.258v1.484c0 .14.11.258.25.258h1.5c.14 0 .25-.117.25-.258zM8.984 9.32l.141-3.586a.189.189 0 0 0-.078-.148C9 5.546 8.93 5.5 8.859 5.5H7.141c-.07 0-.141.047-.188.086-.055.039-.078.117-.078.164l.133 3.57c0 .102.117.18.265.18H8.72c.14 0 .258-.078.265-.18zm-.109-7.297l6 11A1 1 0 0 1 14 14.5H2a1 1 0 0 1-.875-1.477l6-11a.994.994 0 0 1 1.75 0z\", style: { fill: fill || theme.colors.warningIconColor } }));\n    }));\n}\nexports.default = WarningIcon;\n//# sourceMappingURL=WarningIcon.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport WarningIcon from 'sonar-ui-common/components/icons/WarningIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  taskId?: string;\n  warnings?: string[];\n}\n\ninterface State {\n  loading: boolean;\n  warnings: string[];\n}\n\nexport default class AnalysisWarningsModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: !props.warnings, warnings: props.warnings || [] };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (!this.props.warnings && this.props.taskId) {\n      this.loadWarnings(this.props.taskId);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { taskId, warnings } = this.props;\n    if (!warnings && taskId && prevProps.taskId !== taskId) {\n      this.loadWarnings(taskId);\n    } else if (warnings && prevProps.warnings !== warnings) {\n      this.setState({ warnings });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadWarnings(taskId: string) {\n    this.setState({ loading: true });\n    getTask(taskId, ['warnings']).then(\n      ({ warnings = [] }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, warnings });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  keepLineBreaks = (warning: string) => {\n    if (warning.includes('\\n')) {\n      const lines = warning.split('\\n');\n      return (\n        <>\n          {lines.map((line, index) => (\n            <React.Fragment key={index}>\n              {line}\n              {index < lines.length - 1 && <br />}\n            </React.Fragment>\n          ))}\n        </>\n      );\n    } else {\n      return warning;\n    }\n  };\n\n  render() {\n    const header = translate('warnings');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n\n        <div className=\"modal-body modal-container js-analysis-warnings\">\n          <DeferredSpinner loading={this.state.loading}>\n            {this.state.warnings.map((warning, index) => (\n              <div className=\"panel panel-vertical\" key={index}>\n                <WarningIcon className=\"pull-left spacer-right\" />\n                <div className=\"overflow-hidden markdown\">{this.keepLineBreaks(warning)}</div>\n              </div>\n            ))}\n          </DeferredSpinner>\n        </div>\n\n        <footer className=\"modal-foot\">\n          <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n            {translate('close')}\n          </ResetButtonLink>\n        </footer>\n      </Modal>\n    );\n  }\n}\n"],"sourceRoot":""}