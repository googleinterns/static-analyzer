{"version":3,"sources":["webpack:///./src/main/js/components/charts/ColorBoxLegend.css","webpack:///./src/main/js/components/common/EmptySearch.tsx","webpack:///./src/main/js/components/common/EmptySearch.css","webpack:///./src/main/js/apps/projects/styles.css?6cb4","webpack:///./src/main/js/apps/projects/styles.css","webpack:///./src/main/js/apps/projects/visualizations/SimpleBubbleChart.tsx","webpack:///./src/main/js/apps/projects/visualizations/Coverage.tsx","webpack:///./src/main/js/apps/projects/visualizations/Duplications.tsx","webpack:///./src/main/js/apps/projects/visualizations/Maintainability.tsx","webpack:///./src/main/js/apps/projects/visualizations/Reliability.tsx","webpack:///./src/main/js/apps/projects/visualizations/Risk.tsx","webpack:///./src/main/js/apps/projects/visualizations/Security.tsx","webpack:///./src/main/js/apps/projects/visualizations/Visualizations.tsx","webpack:///./src/main/js/apps/projects/filters/SearchFilterContainer.tsx","webpack:///./src/main/js/apps/projects/components/PerspectiveSelectOption.tsx","webpack:///./src/main/js/apps/projects/components/PerspectiveSelect.tsx","webpack:///./src/main/js/apps/projects/components/ProjectsSortingSelectOption.tsx","webpack:///./src/main/js/apps/projects/components/ProjectsSortingSelect.tsx","webpack:///./src/main/js/apps/projects/components/PageHeader.tsx","webpack:///./src/main/js/apps/projects/filters/Filter.tsx","webpack:///./src/main/js/apps/projects/filters/FilterHeader.tsx","webpack:///./src/main/js/apps/projects/filters/CoverageFilter.tsx","webpack:///./src/main/js/apps/projects/filters/DuplicationsFilter.tsx","webpack:///./src/main/js/apps/projects/filters/SearchableFilterFooter.tsx","webpack:///./src/main/js/apps/projects/filters/SearchableFilterOption.tsx","webpack:///./src/main/js/apps/projects/filters/LanguagesFilter.tsx","webpack:///./src/main/js/apps/projects/filters/LanguagesFilterContainer.tsx","webpack:///./src/main/js/apps/projects/filters/IssuesFilter.tsx","webpack:///./src/main/js/apps/projects/filters/MaintainabilityFilter.tsx","webpack:///./src/main/js/apps/projects/filters/NewCoverageFilter.tsx","webpack:///./src/main/js/apps/projects/filters/NewDuplicationsFilter.tsx","webpack:///./src/main/js/apps/projects/filters/NewLinesFilter.tsx","webpack:///./src/main/js/apps/projects/filters/NewMaintainabilityFilter.tsx","webpack:///./src/main/js/apps/projects/filters/NewReliabilityFilter.tsx","webpack:///./src/main/js/apps/projects/filters/NewSecurityFilter.tsx","webpack:///./src/main/js/apps/projects/filters/QualifierFilter.tsx","webpack:///./src/main/js/apps/projects/filters/QualityGateFilter.tsx","webpack:///./src/main/js/apps/projects/filters/ReliabilityFilter.tsx","webpack:///./src/main/js/apps/projects/filters/SecurityFilter.tsx","webpack:///./src/main/js/apps/projects/filters/SecurityReviewFilter.tsx","webpack:///./src/main/js/apps/projects/filters/SizeFilter.tsx","webpack:///./src/main/js/apps/projects/filters/TagsFilter.tsx","webpack:///./src/main/js/apps/projects/components/ClearAll.tsx","webpack:///./src/main/js/apps/projects/components/FavoriteFilter.tsx","webpack:///./src/main/js/apps/projects/components/FavoriteFilterContainer.tsx","webpack:///./src/main/js/apps/projects/components/PageSidebar.tsx","webpack:///./src/main/js/apps/projects/components/EmptyFavoriteSearch.tsx","webpack:///./src/main/js/apps/projects/components/EmptyInstance.tsx","webpack:///./src/main/js/apps/projects/components/NoFavoriteProjects.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCardRatingMeasure.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCardLeakMeasures.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCardOrganizationContainer.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCardOrganization.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCardLanguagesContainer.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCardLanguages.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCardOverallMeasures.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCardQualityGate.tsx","webpack:///./src/main/js/apps/projects/components/ProjectCard.tsx","webpack:///./src/main/js/apps/projects/components/ProjectsList.tsx","webpack:///./src/main/js/apps/projects/components/AllProjects.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/types/component.ts","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/components/measure/utils.ts","webpack:///./src/main/js/components/measure/Measure.tsx","webpack:///./src/main/js/components/tags/TagsList.css?d861","webpack:///./src/main/js/helpers/periods.ts","webpack:///./src/main/js/components/common/ScreenPositionHelper.tsx","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/components/tags/TagsList.css","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/components/ui/CoverageRating.tsx","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/controls/HomePageSelect.tsx","webpack:///./src/main/js/components/search-navigator.css?9a2e","webpack:///./src/main/js/components/search-navigator.css","webpack:///./src/main/js/components/common/EmptySearch.css?d1ee","webpack:///./src/main/js/components/common/PrivacyBadgeContainer.tsx","webpack:///./src/main/js/components/charts/ColorBoxLegend.css?a720","webpack:///./src/main/js/components/charts/ColorRatingsLegend.tsx"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","EmptySearch","className","api","content","__esModule","default","options","exported","locals","metric","value","name","key","formattedValue","type","project","x","y","size","color","fullProjectName","this","props","displayOrganizations","organization","qualifier","Application","fill","getMetricTooltip","xMetric","yMetric","sizeMetric","colorMetric","items","projects","filter","measures","map","Number","undefined","tooltip","getTooltip","link","formatXTick","tick","formatYTick","height","padding","yDomain","title","overlay","helpText","ColorRatingsLegend","Coverage","Duplications","Maintainability","Reliability","color1","color2","Math","max","Security","Component","risk","reliability","security","maintainability","coverage","duplications","visualization","total","sort","length","renderVisualization","renderFooter","handleSearch","search","onQueryChange","minLength","onChange","placeholder","query","handleMouseDown","event","preventDefault","stopPropagation","onSelect","option","handleMouseEnter","onFocus","handleMouseMove","isFocused","onMouseDown","onMouseEnter","onMouseMove","label","children","handleChange","view","perspective","opt","clearable","optionComponent","searchable","class","short","getSorting","selectedSort","getOptions","sortMetrics","defaultOption","handleDescToggle","sorting","sortValue","sortDesc","handleSortChange","gray60","onClick","PageHeader","loading","currentUser","limitReached","showHomePageSelect","isFavorite","onPerspectiveChange","onSortChange","id","HomePageSelect","currentPage","defaultGetFacetValueForOption","facet","handleClick","currentTarget","blur","property","dataset","urlOption","Array","isArray","ctrlKey","metaKey","isSelected","val","join","concat","renderOptions","highlightUnder","highlightUnderMax","beforeHighlight","slice","insideHighlight","afterHighlight","renderOption","includes","String","facetValue","maxFacetValue","style","width","getFacetValueForOption","active","halfWidth","optionClassName","isUnderSelectedOption","href","renderOptionBar","header","footer","FilterHeader","CoverageFilter","selected","CoverageRating","muted","DuplicationsFilter","handleOptionChange","urlOptions","isLoading","onInputChange","onOpen","SearchableFilterOption","optionName","optionKey","getSearchOptions","languages","languageKeys","Object","keys","getSortedOptions","state","IssuesFilter","headerDetail","small","MaintainabilityFilter","NewCoverageFilter","NewDuplicationsFilter","NewLinesFilter","NewMaintainabilityFilter","NewReliabilityFilter","NewSecurityFilter","Project","QualifierFilter","QualityGateFilter","level","ReliabilityFilter","SecurityFilter","labels","1","2","3","4","5","SecurityReviewFilter","SizeFilter","super","mounted","tagsCopy","tags","tag","setState","q","ps","then","result","ClearAll","onClearAll","handleSaveFavorite","handleSaveAll","pathnameForFavorite","pathnameForAll","activeClassName","to","pathname","PageSidebar","applicationsEnabled","facets","isFiltered","isLeakView","facetProps","values","getMaxFacetValue","linkQuery","FavoriteFilterContainer","getFacet","gate","security_review_rating","new_reliability","new_security","new_security_review_rating","new_maintainability","new_coverage","new_duplications","new_lines","LanguagesFilterContainer","EmptyFavoriteSearch","defaultMessage","url","analyzeNewProject","openProjectOnboarding","showNewProjectButton","actions","provision","organizations","org","toLowerCase","OrganizationListItem","ProjectCardRatingMeasure","iconKey","iconLabel","metricKey","metricRatingKey","metricType","Measure","ProjectCardLeakMeasures","organizationsEnabled","OrganizationLink","distribution","parsedLanguages","split","item","finalLanguages","l","language","getLanguageName","languagesText","ProjectCardOverallMeasures","componentQualifier","ncloc","ProjectCardLanguagesContainer","ProjectCardQualityGate","status","renderDateRow","dates","analysisDate","leakPeriodDate","periodMs","Date","now","date","formattedDate","renderDates","ProjectCard","getDates","hasTags","Favorite","component","favorite","handleFavorite","ProjectCardOrganizationContainer","PrivacyBadgeContainer","tooltipProps","projectKey","visibility","TagsList","renderHeader","renderMeasures","getCardHeight","cardType","renderRow","index","role","OnboardingContext","Consumer","cardHeight","WindowScroller","isScrolling","onChildScroll","scrollTop","AutoSizer","disableHeight","List","autoHeight","onScroll","overscanRowCount","rowCount","rowHeight","rowRenderer","outline","renderList","renderNoProjects","PROJECTS_SORT","fetchProjects","response","pageIndex","stopLoading","fetchMoreProjects","getSort","getStorageOptions","storageOptionsSuffix","getView","getVisualization","handleClearAll","router","location","p","handlePerspectiveChange","updateLocationQuery","desc","asString","newQuery","renderSide","ScreenPositionHelper","top","A11ySkipTarget","anchor","weight","qualifiers","renderMain","count","loadMore","ready","handleQueryChange","prevProps","initialMount","savedOptions","savedOptionsSet","replace","Suggestions","suggestions","defer","withRouter","addSuggestions","removeSuggestions","SuggestionsInner","DocMarkdownBlock","DocTooltip","doc","childProps","overlayProps","isTooltip","ComponentQualifier","Visibility","isPortfolioLike","Portfolio","toString","SubPortfolio","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","getFrontMatterPosition","lines","firstLine","lastLine","trim","parseFrontMatter","data","tokens","cutConditionalContent","beginning","ending","newContent","start","indexOf","end","substring","console","error","Error","getFrontMatter","position","separateFrontMatter","frontmatter","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","RegExp","KNOWN_RATINGS","enhanceMeasure","measure","metrics","leak","getLeakValue","periods","period","getRatingTooltip","finalMetricKey","substr","decimals","omitExtraDecimalZeros","rating","getLeakPeriod","find","getPeriod","getPeriodLabel","dateFormatter","parameter","modeParam","mode","getPeriodDate","isApplicationPeriod","getPosition","containerPos","container","getBoundingClientRect","window","pageYOffset","left","pageXOffset","debouncedOnResize","forceUpdate","addEventListener","removeEventListener","ref","allowUpdate","isPaidOrganization","Boolean","subscription","hasPrivateAccess","userOrganizations","isCurrentUserMemberOf","admin","some","DonutChart","SIZE_TO_WIDTH_MAPPING","normal","big","huge","SIZE_TO_THICKNESS_MAPPING","padAngle","numberValue","gray71","green","barBackgroundColor","lineCoverageRed","thickness","addFavorite","removeFavorite","toggleFavorite","newFavorite","_prevProps","prevState","setHomePage","homepage","checked","b","a","branch","filled","mapDispatchToProps","getDoc","icon","onSonarCloud","blue","badge","borderColor","backgroundColor"],"mappings":"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","file":"js/307.m.4548598b.chunk.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".color-box-legend{display:flex;justify-content:center}.color-box-legend>:not(:first-child){margin-left:24px}.color-box-legend .color-box-legend-rect{display:inline-block;margin-top:1px;margin-right:4px;border:1px solid}.color-box-legend .color-box-legend-rect-inner{display:block;width:8px;height:8px;opacity:.2}.color-box-legend.color-box-full .color-box-legend-rect-inner{opacity:1}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport './EmptySearch.css';\n\nexport default function EmptySearch() {\n  return (\n    <div className=\"empty-search\">\n      <h3>{translate('no_results_search')}</h3>\n      <p className=\"big-spacer-top\">{translate('no_results_search.2')}</p>\n    </div>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".empty-search{padding:60px 0;border:1px solid #e6e6e6;border-radius:2px;color:#777;text-align:center}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".projects-topbar-items{display:flex;align-items:center;flex-grow:1}.projects-topbar-item+.projects-topbar-item{padding-left:24px}.projects-topbar-item .spinner{top:-1px}.projects-topbar-item.is-last{margin-left:auto;padding-left:32px}.projects-topbar-item.disabled{cursor:not-allowed;opacity:.4}.projects-topbar-item.disabled *{pointer-events:none!important}.projects-topbar-item-search{position:relative;flex:1;height:24px}.projects-list .page-actions{margin-bottom:0}.project-card{position:relative;min-height:114px;box-sizing:border-box}.project-card-header{display:flex;align-items:center}.project-card-header-right{margin-left:auto}.project-card-name{font-weight:600;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-card-leak-date{padding:4px 8px;margin:-5px -4px -5px 24px;background-color:#fbf3d5;border:1px solid #f1e8cb}.project-card-measures{display:flex;padding-top:8px;margin:0 -15px 0 -30px}.project-card-leak-measures{display:flex;padding:8px 0;margin:4px -4px;background-color:#fbf3d5;border:1px solid #f1e8cb}.projects-leak-sorting-option{background-color:#fbf3d5;margin-bottom:2px}.projects-leak-sorting-option.is-focused{background-color:#f1e8cb}.project-card-measure{flex:0 1 15%;position:relative;display:inline-block;vertical-align:top;text-align:center;box-sizing:border-box;padding:0 8px}.project-card-measure+.project-card-measure:before{position:absolute;top:50%;left:0;width:0;height:24px;margin-top:-12px;border-left:1px solid #e6e6e6;content:\\\"\\\"}.project-card-measure .level{margin-top:0;margin-bottom:0}.project-card-measure-inner{display:inline-block;vertical-align:top;text-align:center}.project-card-measure-number{line-height:25px;font-size:18px;white-space:nowrap}.project-card-measure-label{margin-top:4px;font-size:12px}.project-card-measure-label-with-icon{margin-top:2px;font-size:12px;white-space:nowrap}.project-card-ncloc{margin-left:auto;text-align:right}.project-card-ncloc:before{display:none}.project-card-ncloc .project-card-measure-inner{text-align:right}.project-card-languages{display:inline-block;max-width:120px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-card-quality-gate{line-height:24px}.project-card-not-analyzed{padding:14px 0}.projects-facet-header{padding:10px;transition:none}.projects-facet-list{padding-left:10px;padding-right:10px}.projects-facets-header{margin-bottom:10px;padding:10px 0;border-bottom:1px solid #e6e6e6}.projects-facets-reset{float:right}.projects-facet-bar{display:inline-block;width:60px;margin-left:8px}.projects-facet-bar-inner{min-width:1px;height:10px;background-color:#b4b4b4;transition:width .3s ease}.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet .projects-facet-bar-inner,.search-navigator-facet.active .projects-facet-bar-inner{background-color:#4b9fd5}.projects-visualization{position:relative;height:600px}.projects-visualization .measure-details-bubble-chart-axis.y{width:300px;left:15px;margin-top:150px;transform-origin:0 0;text-align:center}.projects-visualizations-footer{margin-top:8px;padding:15px 60px;border-top:1px solid #e6e6e6;font-size:12px;line-height:1.4;text-align:center}.projects-visualizations-footer .note{font-style:italic}.measure-details-bubble-chart-title{position:absolute;left:20px}.measure-details-bubble-chart-axis{position:absolute;color:#777;font-size:12px}.measure-details-bubble-chart-axis.x{left:50%;bottom:16px;width:500px;margin-left:-250px;text-align:center}.measure-details-bubble-chart-axis.y{top:50%;left:-20px;transform:rotate(-90deg)}.measure-details-bubble-chart-axis.size{display:flex;align-items:center;justify-content:space-around;top:16px;width:100%}.projects-empty-list{padding:32px 0;text-align:center}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BubbleChart from 'sonar-ui-common/components/charts/BubbleChart';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport ColorRatingsLegend from '../../../components/charts/ColorRatingsLegend';\nimport { RATING_COLORS } from '../../../helpers/constants';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { ComponentQualifier } from '../../../types/component';\nimport { Project } from '../types';\n\ninterface Metric {\n  key: string;\n  type: string;\n}\n\ninterface Props {\n  colorMetric?: string;\n  displayOrganizations: boolean;\n  helpText: string;\n  projects: Project[];\n  sizeMetric: Metric;\n  title?: string;\n  xMetric: Metric;\n  yDomain?: [number, number];\n  yMetric: Metric;\n}\n\nexport default class SimpleBubbleChart extends React.PureComponent<Props> {\n  getMetricTooltip(metric: Metric, value?: number) {\n    const name = translate('metric', metric.key, 'name');\n    const formattedValue = value != null ? formatMeasure(value, metric.type) : '–';\n    return (\n      <div>\n        {name}\n        {': '}\n        {formattedValue}\n      </div>\n    );\n  }\n\n  getTooltip(project: Project, x?: number, y?: number, size?: number, color?: number) {\n    const fullProjectName =\n      this.props.displayOrganizations && project.organization ? (\n        <>\n          {project.organization.name}\n          {' / '}\n          <strong>{project.name}</strong>\n        </>\n      ) : (\n        <strong>{project.name}</strong>\n      );\n\n    return (\n      <div className=\"text-left\">\n        <div className=\"little-spacer-bottom display-flex-center display-flex-space-between\">\n          {fullProjectName}\n\n          {project.qualifier === ComponentQualifier.Application && (\n            <div className=\"big-spacer-left nowrap\">\n              <QualifierIcon\n                className=\"little-spacer-right\"\n                fill=\"currentColor\"\n                qualifier={ComponentQualifier.Application}\n              />\n              {translate('qualifier.APP')}\n            </div>\n          )}\n        </div>\n        {this.getMetricTooltip(this.props.xMetric, x)}\n        {this.getMetricTooltip(this.props.yMetric, y)}\n        {this.getMetricTooltip(this.props.sizeMetric, size)}\n        {/* if `color` is defined then `this.props.colorMetric` is defined too */}\n        {color && this.getMetricTooltip({ key: this.props.colorMetric!, type: 'RATING' }, color)}\n      </div>\n    );\n  }\n\n  render() {\n    const { xMetric, yMetric, sizeMetric, colorMetric } = this.props;\n\n    const items = this.props.projects\n      .filter(project => colorMetric == null || project.measures[colorMetric] !== null)\n      .map(project => {\n        const x =\n          project.measures[xMetric.key] != null ? Number(project.measures[xMetric.key]) : undefined;\n        const y =\n          project.measures[yMetric.key] != null ? Number(project.measures[yMetric.key]) : undefined;\n        const size =\n          project.measures[sizeMetric.key] != null\n            ? Number(project.measures[sizeMetric.key])\n            : undefined;\n        const color = colorMetric ? Number(project.measures[colorMetric]) : undefined;\n        return {\n          x: x || 0,\n          y: y || 0,\n          size: size || 0,\n          color: color ? RATING_COLORS[color - 1] : undefined,\n          key: project.key,\n          tooltip: this.getTooltip(project, x, y, size, color),\n          link: getProjectUrl(project.key)\n        };\n      });\n\n    const formatXTick = (tick: number) => formatMeasure(tick, xMetric.type);\n    const formatYTick = (tick: number) => formatMeasure(tick, yMetric.type);\n\n    return (\n      <div>\n        <BubbleChart\n          formatXTick={formatXTick}\n          formatYTick={formatYTick}\n          height={600}\n          items={items}\n          padding={[colorMetric ? 80 : 40, 20, 60, 100]}\n          yDomain={this.props.yDomain}\n        />\n        <div className=\"measure-details-bubble-chart-axis x\">\n          {translate('metric', xMetric.key, 'name')}\n        </div>\n        <div className=\"measure-details-bubble-chart-axis y\">\n          {translate('metric', yMetric.key, 'name')}\n        </div>\n        <div className=\"measure-details-bubble-chart-axis size\">\n          <span className=\"measure-details-bubble-chart-title\">\n            <span className=\"text-middle\">{this.props.title}</span>\n            <HelpTooltip className=\"spacer-left\" overlay={this.props.helpText} />\n          </span>\n          <div>\n            {colorMetric != null && (\n              <span className=\"spacer-right\">\n                {translateWithParameters(\n                  'component_measures.legend.color_x',\n                  translate('metric', colorMetric, 'name')\n                )}\n              </span>\n            )}\n            {translateWithParameters(\n              'component_measures.legend.size_x',\n              translate('metric', sizeMetric.key, 'name')\n            )}\n            {colorMetric != null && <ColorRatingsLegend className=\"big-spacer-top\" />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Project } from '../types';\nimport SimpleBubbleChart from './SimpleBubbleChart';\n\ninterface Props {\n  displayOrganizations: boolean;\n  helpText: string;\n  projects: Project[];\n}\n\nexport default function Coverage(props: Props) {\n  return (\n    <SimpleBubbleChart\n      {...props}\n      sizeMetric={{ key: 'uncovered_lines', type: 'SHORT_INT' }}\n      title={translate('projects.visualization', 'coverage')}\n      xMetric={{ key: 'complexity', type: 'SHORT_INT' }}\n      yDomain={[100, 0]}\n      yMetric={{ key: 'coverage', type: 'PERCENT' }}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Project } from '../types';\nimport SimpleBubbleChart from './SimpleBubbleChart';\n\ninterface Props {\n  displayOrganizations: boolean;\n  helpText: string;\n  projects: Project[];\n}\n\nexport default function Duplications(props: Props) {\n  return (\n    <SimpleBubbleChart\n      {...props}\n      sizeMetric={{ key: 'duplicated_blocks', type: 'SHORT_INT' }}\n      title={translate('projects.visualization', 'duplications')}\n      xMetric={{ key: 'ncloc', type: 'SHORT_INT' }}\n      yMetric={{ key: 'duplicated_lines_density', type: 'PERCENT' }}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Project } from '../types';\nimport SimpleBubbleChart from './SimpleBubbleChart';\n\ninterface Props {\n  displayOrganizations: boolean;\n  helpText: string;\n  projects: Project[];\n}\n\nexport default function Maintainability(props: Props) {\n  return (\n    <SimpleBubbleChart\n      {...props}\n      colorMetric=\"sqale_rating\"\n      sizeMetric={{ key: 'code_smells', type: 'SHORT_INT' }}\n      title={translate('projects.visualization', 'maintainability')}\n      xMetric={{ key: 'ncloc', type: 'SHORT_INT' }}\n      yMetric={{ key: 'sqale_index', type: 'SHORT_WORK_DUR' }}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Project } from '../types';\nimport SimpleBubbleChart from './SimpleBubbleChart';\n\ninterface Props {\n  displayOrganizations: boolean;\n  helpText: string;\n  projects: Project[];\n}\n\nexport default function Reliability(props: Props) {\n  return (\n    <SimpleBubbleChart\n      {...props}\n      colorMetric=\"reliability_rating\"\n      sizeMetric={{ key: 'bugs', type: 'SHORT_INT' }}\n      title={translate('projects.visualization', 'reliability')}\n      xMetric={{ key: 'ncloc', type: 'SHORT_INT' }}\n      yMetric={{ key: 'reliability_remediation_effort', type: 'SHORT_WORK_DUR' }}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BubbleChart from 'sonar-ui-common/components/charts/BubbleChart';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport ColorRatingsLegend from '../../../components/charts/ColorRatingsLegend';\nimport { RATING_COLORS } from '../../../helpers/constants';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { ComponentQualifier } from '../../../types/component';\nimport { Project } from '../types';\n\nconst X_METRIC = 'sqale_index';\nconst X_METRIC_TYPE = 'SHORT_WORK_DUR';\nconst Y_METRIC = 'coverage';\nconst Y_METRIC_TYPE = 'PERCENT';\nconst SIZE_METRIC = 'ncloc';\nconst SIZE_METRIC_TYPE = 'SHORT_INT';\nconst COLOR_METRIC_1 = 'reliability_rating';\nconst COLOR_METRIC_2 = 'security_rating';\nconst COLOR_METRIC_TYPE = 'RATING';\n\ninterface Props {\n  displayOrganizations: boolean;\n  helpText: string;\n  projects: Project[];\n}\n\nexport default class Risk extends React.PureComponent<Props> {\n  getMetricTooltip(metric: { key: string; type: string }, value?: number) {\n    const name = translate('metric', metric.key, 'name');\n    const formattedValue = value != null ? formatMeasure(value, metric.type) : '–';\n    return (\n      <div>\n        {name}\n        {': '}\n        {formattedValue}\n      </div>\n    );\n  }\n\n  getTooltip(\n    project: Project,\n    x?: number,\n    y?: number,\n    size?: number,\n    color1?: number,\n    color2?: number\n  ) {\n    const fullProjectName =\n      this.props.displayOrganizations && project.organization ? (\n        <>\n          {project.organization.name}\n          {' / '}\n          <strong>{project.name}</strong>\n        </>\n      ) : (\n        <strong>{project.name}</strong>\n      );\n\n    return (\n      <div className=\"text-left\">\n        <div className=\"little-spacer-bottom display-flex-center display-flex-space-between\">\n          {fullProjectName}\n\n          {project.qualifier === ComponentQualifier.Application && (\n            <div className=\"big-spacer-left nowrap\">\n              <QualifierIcon\n                className=\"little-spacer-right\"\n                fill=\"currentColor\"\n                qualifier={ComponentQualifier.Application}\n              />\n              {translate('qualifier.APP')}\n            </div>\n          )}\n        </div>\n        {this.getMetricTooltip({ key: COLOR_METRIC_1, type: COLOR_METRIC_TYPE }, color1)}\n        {this.getMetricTooltip({ key: COLOR_METRIC_2, type: COLOR_METRIC_TYPE }, color2)}\n        {this.getMetricTooltip({ key: Y_METRIC, type: Y_METRIC_TYPE }, y)}\n        {this.getMetricTooltip({ key: X_METRIC, type: X_METRIC_TYPE }, x)}\n        {this.getMetricTooltip({ key: SIZE_METRIC, type: SIZE_METRIC_TYPE }, size)}\n      </div>\n    );\n  }\n\n  render() {\n    const items = this.props.projects.map(project => {\n      const x = project.measures[X_METRIC] != null ? Number(project.measures[X_METRIC]) : undefined;\n      const y = project.measures[Y_METRIC] != null ? Number(project.measures[Y_METRIC]) : undefined;\n      const size =\n        project.measures[SIZE_METRIC] != null ? Number(project.measures[SIZE_METRIC]) : undefined;\n      const color1 =\n        project.measures[COLOR_METRIC_1] != null\n          ? Number(project.measures[COLOR_METRIC_1])\n          : undefined;\n      const color2 =\n        project.measures[COLOR_METRIC_2] != null\n          ? Number(project.measures[COLOR_METRIC_2])\n          : undefined;\n      return {\n        x: x || 0,\n        y: y || 0,\n        size: size || 0,\n        color:\n          color1 != null && color2 != null\n            ? RATING_COLORS[Math.max(color1, color2) - 1]\n            : undefined,\n        key: project.key,\n        tooltip: this.getTooltip(project, x, y, size, color1, color2),\n        link: getProjectUrl(project.key)\n      };\n    });\n\n    const formatXTick = (tick: number) => formatMeasure(tick, X_METRIC_TYPE);\n    const formatYTick = (tick: number) => formatMeasure(tick, Y_METRIC_TYPE);\n\n    return (\n      <div>\n        <BubbleChart\n          formatXTick={formatXTick}\n          formatYTick={formatYTick}\n          height={600}\n          items={items}\n          padding={[80, 20, 60, 100]}\n          yDomain={[100, 0]}\n        />\n\n        <div className=\"measure-details-bubble-chart-axis x\">\n          {translate('metric', X_METRIC, 'name')}\n        </div>\n        <div className=\"measure-details-bubble-chart-axis y\">\n          {translate('metric', Y_METRIC, 'name')}\n        </div>\n        <div className=\"measure-details-bubble-chart-axis size\">\n          <span className=\"measure-details-bubble-chart-title\">\n            <span className=\"text-middle\">{translate('projects.visualization.risk')}</span>\n            <HelpTooltip className=\"spacer-left\" overlay={this.props.helpText} />\n          </span>\n          <div>\n            <span className=\"spacer-right\">\n              {translateWithParameters(\n                'component_measures.legend.color_x',\n                translate('projects.worse_of_reliablity_and_security')\n              )}\n            </span>\n            {translateWithParameters(\n              'component_measures.legend.size_x',\n              translate('metric', SIZE_METRIC, 'name')\n            )}\n            <ColorRatingsLegend className=\"big-spacer-top\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Project } from '../types';\nimport SimpleBubbleChart from './SimpleBubbleChart';\n\ninterface Props {\n  displayOrganizations: boolean;\n  helpText: string;\n  projects: Project[];\n}\n\nexport default function Security(props: Props) {\n  return (\n    <SimpleBubbleChart\n      {...props}\n      colorMetric=\"security_rating\"\n      sizeMetric={{ key: 'vulnerabilities', type: 'SHORT_INT' }}\n      title={translate('projects.visualization', 'security')}\n      xMetric={{ key: 'ncloc', type: 'SHORT_INT' }}\n      yMetric={{ key: 'security_remediation_effort', type: 'SHORT_WORK_DUR' }}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { Project } from '../types';\nimport { localizeSorting } from '../utils';\nimport Coverage from './Coverage';\nimport Duplications from './Duplications';\nimport Maintainability from './Maintainability';\nimport Reliability from './Reliability';\nimport Risk from './Risk';\nimport Security from './Security';\n\ninterface Props {\n  displayOrganizations?: boolean;\n  projects: Project[];\n  sort?: string;\n  total?: number;\n  visualization: string;\n}\n\nexport default class Visualizations extends React.PureComponent<Props> {\n  renderVisualization(projects: Project[]) {\n    const visualizationToComponent: T.Dict<any> = {\n      risk: Risk,\n      reliability: Reliability,\n      security: Security,\n      maintainability: Maintainability,\n      coverage: Coverage,\n      duplications: Duplications\n    };\n    const Component = visualizationToComponent[this.props.visualization];\n\n    return Component ? (\n      <Component\n        displayOrganizations={this.props.displayOrganizations}\n        helpText={translate('projects.visualization', this.props.visualization, 'description')}\n        projects={projects}\n      />\n    ) : null;\n  }\n\n  renderFooter() {\n    const { projects, total, sort } = this.props;\n\n    const limitReached = projects != null && total != null && projects.length < total;\n\n    return limitReached ? (\n      <footer className=\"projects-visualizations-footer\">\n        <p className=\"note spacer-top\">\n          {translateWithParameters(\n            'projects.limited_set_of_projects',\n            projects!.length,\n            localizeSorting(sort)\n          )}\n        </p>\n      </footer>\n    ) : null;\n  }\n\n  render() {\n    const { projects } = this.props;\n\n    return (\n      <div className=\"boxed-group projects-visualizations\">\n        <div className=\"projects-visualization\">\n          {projects != null && this.renderVisualization(projects)}\n        </div>\n        {this.renderFooter()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  query: { search?: string };\n  onQueryChange: (change: { search?: string }) => void;\n}\n\nexport default class SearchFilterContainer extends React.PureComponent<Props> {\n  handleSearch = (search?: string) => {\n    this.props.onQueryChange({ search });\n  };\n\n  render() {\n    return (\n      <div className=\"projects-topbar-item projects-topbar-item-search\">\n        <SearchBox\n          minLength={2}\n          onChange={this.handleSearch}\n          placeholder={translate('projects.search')}\n          value={this.props.query.search || ''}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BubblesIcon from 'sonar-ui-common/components/icons/BubblesIcon';\nimport ListIcon from 'sonar-ui-common/components/icons/ListIcon';\n\nexport interface Option {\n  label: string;\n  type: string;\n  value: string;\n}\n\ninterface Props {\n  option: Option;\n  children?: React.ReactNode;\n  className?: string;\n  isFocused?: boolean;\n  onFocus: (option: Option, event: React.SyntheticEvent<HTMLElement>) => void;\n  onSelect: (option: Option, event: React.SyntheticEvent<HTMLElement>) => void;\n}\n\nexport default class PerspectiveSelectOption extends React.PureComponent<Props> {\n  handleMouseDown = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onSelect(this.props.option, event);\n  };\n\n  handleMouseEnter = (event: React.SyntheticEvent<HTMLElement>) => {\n    this.props.onFocus(this.props.option, event);\n  };\n\n  handleMouseMove = (event: React.SyntheticEvent<HTMLElement>) => {\n    if (this.props.isFocused) {\n      return;\n    }\n    this.props.onFocus(this.props.option, event);\n  };\n\n  render() {\n    const { option } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseMove={this.handleMouseMove}\n        title={option.label}>\n        <div>\n          {option.type === 'view' && <ListIcon className=\"little-spacer-right\" />}\n          {option.type === 'visualization' && <BubblesIcon className=\"little-spacer-right\" />}\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { VIEWS, VISUALIZATIONS } from '../utils';\nimport PerspectiveSelectOption, { Option } from './PerspectiveSelectOption';\n\ninterface Props {\n  className?: string;\n  onChange: (x: { view: string; visualization?: string }) => void;\n  view: string;\n  visualization?: string;\n}\n\nexport default class PerspectiveSelect extends React.PureComponent<Props> {\n  handleChange = (option: Option) => {\n    if (option.type === 'view') {\n      this.props.onChange({ view: option.value });\n    } else if (option.type === 'visualization') {\n      this.props.onChange({ view: 'visualizations', visualization: option.value });\n    }\n  };\n\n  render() {\n    const { view, visualization } = this.props;\n    const perspective = view === 'visualizations' ? visualization : view;\n    const options = [\n      ...VIEWS.map(opt => ({\n        type: 'view',\n        value: opt.value,\n        label: translate('projects.view', opt.label)\n      })),\n      ...VISUALIZATIONS.map(opt => ({\n        type: 'visualization',\n        value: opt,\n        label: translate('projects.visualization', opt)\n      }))\n    ];\n    return (\n      <div className={this.props.className}>\n        <label>{translate('projects.perspective')}:</label>\n        <Select\n          className=\"little-spacer-left input-medium\"\n          clearable={false}\n          onChange={this.handleChange}\n          optionComponent={PerspectiveSelectOption}\n          options={options}\n          searchable={false}\n          value={perspective}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface Option {\n  label: string;\n  value: string;\n  class?: string;\n  short?: string;\n}\n\ninterface Props {\n  option: Option;\n  children?: React.ReactNode;\n  className?: string;\n  isFocused?: boolean;\n  onFocus: (option: Option, event: React.SyntheticEvent<HTMLElement>) => void;\n  onSelect: (option: Option, event: React.SyntheticEvent<HTMLElement>) => void;\n}\n\nexport default class ProjectsSortingSelectOption extends React.PureComponent<Props> {\n  handleMouseDown = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onSelect(this.props.option, event);\n  };\n\n  handleMouseEnter = (event: React.SyntheticEvent<HTMLElement>) => {\n    this.props.onFocus(this.props.option, event);\n  };\n\n  handleMouseMove = (event: React.SyntheticEvent<HTMLElement>) => {\n    if (this.props.isFocused) {\n      return;\n    }\n    this.props.onFocus(this.props.option, event);\n  };\n\n  render() {\n    const { option } = this.props;\n    return (\n      <div\n        className={classNames(this.props.className, option.class)}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseMove={this.handleMouseMove}\n        title={option.label}>\n        {option.short ? option.short : this.props.children}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport SortAscIcon from 'sonar-ui-common/components/icons/SortAscIcon';\nimport SortDescIcon from 'sonar-ui-common/components/icons/SortDescIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { parseSorting, SORTING_LEAK_METRICS, SORTING_METRICS } from '../utils';\nimport ProjectsSortingSelectOption, { Option } from './ProjectsSortingSelectOption';\n\ninterface Props {\n  className?: string;\n  defaultOption: string;\n  onChange: (sort: string, desc: boolean) => void;\n  selectedSort: string;\n  view: string;\n}\n\nexport default class ProjectsSortingSelect extends React.PureComponent<Props> {\n  getSorting = () => parseSorting(this.props.selectedSort);\n\n  getOptions = () => {\n    const sortMetrics = this.props.view === 'leak' ? SORTING_LEAK_METRICS : SORTING_METRICS;\n    return sortBy(sortMetrics, option => (option.value === this.props.defaultOption ? 0 : 1)).map(\n      option => ({\n        value: option.value,\n        label: translate('projects.sorting', option.value),\n        class: option.class\n      })\n    );\n  };\n\n  handleDescToggle = () => {\n    const sorting = this.getSorting();\n    this.props.onChange(sorting.sortValue, !sorting.sortDesc);\n  };\n\n  handleSortChange = (option: Option) =>\n    this.props.onChange(option.value, this.getSorting().sortDesc);\n\n  render() {\n    const { sortDesc, sortValue } = this.getSorting();\n\n    return (\n      <div className={this.props.className}>\n        <label>{translate('projects.sort_by')}:</label>\n        <Select\n          className=\"little-spacer-left input-medium\"\n          clearable={false}\n          onChange={this.handleSortChange}\n          optionComponent={ProjectsSortingSelectOption}\n          options={this.getOptions()}\n          searchable={false}\n          value={sortValue}\n        />\n        <Tooltip\n          overlay={\n            sortDesc ? translate('projects.sort_descending') : translate('projects.sort_ascending')\n          }>\n          <ButtonIcon\n            className=\"js-projects-sorting-invert spacer-left\"\n            color={colors.gray60}\n            onClick={this.handleDescToggle}>\n            {sortDesc ? <SortDescIcon className=\"\" /> : <SortAscIcon className=\"\" />}\n          </ButtonIcon>\n        </Tooltip>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport HomePageSelect from '../../../components/controls/HomePageSelect';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { isLoggedIn } from '../../../helpers/users';\nimport SearchFilterContainer from '../filters/SearchFilterContainer';\nimport { Project } from '../types';\nimport PerspectiveSelect from './PerspectiveSelect';\nimport ProjectsSortingSelect from './ProjectsSortingSelect';\n\ninterface Props {\n  currentUser: T.CurrentUser;\n  isFavorite: boolean;\n  loading: boolean;\n  onPerspectiveChange: (x: { view: string; visualization?: string }) => void;\n  onQueryChange: (change: T.RawQuery) => void;\n  onSortChange: (sort: string, desc: boolean) => void;\n  organization?: { key: string };\n  projects?: Project[];\n  query: T.RawQuery;\n  selectedSort: string;\n  total?: number;\n  view: string;\n  visualization?: string;\n}\n\nexport default function PageHeader(props: Props) {\n  const { loading, total, projects, currentUser, view } = props;\n  const limitReached = projects != null && total != null && projects.length < total;\n  const defaultOption = isLoggedIn(currentUser) ? 'name' : 'analysis_date';\n  const showHomePageSelect = !isSonarCloud() || props.isFavorite;\n\n  return (\n    <header className=\"page-header projects-topbar-items\">\n      <PerspectiveSelect\n        className=\"projects-topbar-item js-projects-perspective-select\"\n        onChange={props.onPerspectiveChange}\n        view={props.view}\n        visualization={props.visualization}\n      />\n\n      {view === 'visualizations' && !limitReached ? (\n        <Tooltip overlay={translate('projects.sort.disabled')}>\n          <div className=\"projects-topbar-item disabled\">\n            <ProjectsSortingSelect\n              className=\"js-projects-sorting-select\"\n              defaultOption={defaultOption}\n              onChange={props.onSortChange}\n              selectedSort={props.selectedSort}\n              view={props.view}\n            />\n          </div>\n        </Tooltip>\n      ) : (\n        <ProjectsSortingSelect\n          className=\"projects-topbar-item js-projects-sorting-select\"\n          defaultOption={defaultOption}\n          onChange={props.onSortChange}\n          selectedSort={props.selectedSort}\n          view={props.view}\n        />\n      )}\n\n      <SearchFilterContainer onQueryChange={props.onQueryChange} query={props.query} />\n\n      <div\n        className={classNames('projects-topbar-item', 'is-last', {\n          'is-loading': loading\n        })}>\n        {total != null && (\n          <span>\n            <strong id=\"projects-total\">{total}</strong> {translate('projects._projects')}\n          </span>\n        )}\n      </div>\n\n      {showHomePageSelect && (\n        <HomePageSelect\n          className=\"huge-spacer-left\"\n          currentPage={isSonarCloud() ? { type: 'MY_PROJECTS' } : { type: 'PROJECTS' }}\n        />\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { Facet } from '../types';\n\nexport type Option = string | number;\n\ninterface Props {\n  property: string;\n  className?: string;\n  onQueryChange: (change: T.RawQuery) => void;\n  options: Option[];\n  renderOption: (option: Option, isSelected: boolean) => React.ReactNode;\n\n  value?: Option | Option[];\n  facet?: Facet;\n  maxFacetValue?: number;\n  optionClassName?: string;\n  organization?: { key: string };\n\n  getFacetValueForOption?: (facet: Facet, option: Option) => number;\n\n  halfWidth?: boolean;\n  highlightUnder?: number;\n  highlightUnderMax?: number;\n\n  header?: React.ReactNode;\n  footer?: React.ReactNode;\n}\n\nconst defaultGetFacetValueForOption = (facet: Facet, option: string | number) => facet[option];\n\nexport default class Filter extends React.PureComponent<Props> {\n  isSelected(option: Option): boolean {\n    const { value } = this.props;\n    return Array.isArray(value) ? value.includes(option) : String(option) === String(value);\n  }\n\n  highlightUnder(option?: Option): boolean {\n    return (\n      this.props.highlightUnder != null &&\n      option != null &&\n      option > this.props.highlightUnder &&\n      (this.props.highlightUnderMax == null || option < this.props.highlightUnderMax)\n    );\n  }\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n\n    const { property, value } = this.props;\n    const { key: option } = event.currentTarget.dataset;\n    let urlOption;\n\n    if (option) {\n      if (Array.isArray(value) && (event.ctrlKey || event.metaKey)) {\n        if (this.isSelected(option)) {\n          urlOption = value.length > 1 ? value.filter(val => val !== option).join(',') : null;\n        } else {\n          urlOption = value.concat(option).join(',');\n        }\n      } else {\n        urlOption =\n          this.isSelected(option) && (!Array.isArray(value) || value.length < 2) ? null : option;\n      }\n\n      this.props.onQueryChange({ [property]: urlOption });\n    }\n  };\n\n  renderOptionBar(facetValue: number | undefined) {\n    if (facetValue === undefined || !this.props.maxFacetValue) {\n      return null;\n    }\n    return (\n      <div className=\"projects-facet-bar\">\n        <div\n          className=\"projects-facet-bar-inner\"\n          style={{ width: (facetValue / this.props.maxFacetValue) * 60 }}\n        />\n      </div>\n    );\n  }\n\n  renderOption(option: Option) {\n    const { facet, getFacetValueForOption = defaultGetFacetValueForOption, value } = this.props;\n    const className = classNames(\n      'facet',\n      'search-navigator-facet',\n      'projects-facet',\n      {\n        active: this.isSelected(option),\n        'search-navigator-facet-half': this.props.halfWidth\n      },\n      this.props.optionClassName\n    );\n\n    const facetValue =\n      facet && getFacetValueForOption ? getFacetValueForOption(facet, option) : undefined;\n\n    const isUnderSelectedOption =\n      typeof value === 'number' &&\n      typeof option === 'number' &&\n      this.highlightUnder(value) &&\n      option > value;\n\n    return (\n      <a className={className} data-key={option} href=\"#\" key={option} onClick={this.handleClick}>\n        <span className=\"facet-name\">\n          {this.props.renderOption(option, this.isSelected(option) || isUnderSelectedOption)}\n        </span>\n        {facetValue != null && (\n          <span className=\"facet-stat\">\n            {formatMeasure(facetValue, 'SHORT_INT')}\n            {this.renderOptionBar(facetValue)}\n          </span>\n        )}\n      </a>\n    );\n  }\n\n  renderOptions = () => {\n    const { options, highlightUnder } = this.props;\n    if (options && options.length > 0) {\n      if (highlightUnder != null) {\n        const max = this.props.highlightUnderMax || options.length;\n        const beforeHighlight = options.slice(0, highlightUnder);\n        const insideHighlight = options.slice(highlightUnder, max);\n        const afterHighlight = options.slice(max);\n        return (\n          <div className=\"search-navigator-facet-list projects-facet-list\">\n            {beforeHighlight.map(option => this.renderOption(option))}\n            <div className=\"search-navigator-facet-highlight-under-container\">\n              {insideHighlight.map(option => this.renderOption(option))}\n            </div>\n            {afterHighlight.map(option => this.renderOption(option))}\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"search-navigator-facet-list projects-facet-list\">\n            {options.map(option => this.renderOption(option))}\n          </div>\n        );\n      }\n    } else {\n      return <div className=\"search-navigator-facet-empty\">{translate('no_results')}</div>;\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className={classNames('search-navigator-facet-box', this.props.className)}\n        data-key={this.props.property}>\n        {this.props.header}\n        {this.renderOptions()}\n        {this.props.footer}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  children?: React.ReactNode;\n  name: string;\n}\n\nexport default function FilterHeader(props: Props) {\n  return (\n    <div className=\"search-navigator-facet-header projects-facet-header\">\n      {props.name}\n      {props.children}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getCoverageRatingAverageValue,\n  getCoverageRatingLabel\n} from 'sonar-ui-common/helpers/ratings';\nimport CoverageRating from '../../../components/ui/CoverageRating';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\n\nexport interface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  property?: string;\n  value?: any;\n}\n\nexport default function CoverageFilter(props: Props) {\n  const { property = 'coverage' } = props;\n\n  return (\n    <Filter\n      className={props.className}\n      facet={props.facet}\n      getFacetValueForOption={getFacetValueForOption}\n      header={<FilterHeader name={translate('metric_domain.Coverage')} />}\n      highlightUnder={1}\n      highlightUnderMax={5}\n      maxFacetValue={props.maxFacetValue}\n      onQueryChange={props.onQueryChange}\n      options={[1, 2, 3, 4, 5, 6]}\n      organization={props.organization}\n      property={property}\n      renderOption={renderOption}\n      value={props.value}\n    />\n  );\n}\n\nfunction getFacetValueForOption(facet: Facet, option: number): number {\n  const map = ['80.0-*', '70.0-80.0', '50.0-70.0', '30.0-50.0', '*-30.0', 'NO_DATA'];\n  return facet[map[option - 1]];\n}\n\nfunction renderOption(option: number, selected: boolean) {\n  return (\n    <span>\n      {option < 6 && (\n        <CoverageRating\n          muted={!selected}\n          size=\"small\"\n          value={getCoverageRatingAverageValue(option)}\n        />\n      )}\n      <span className=\"spacer-left\">\n        {option < 6 ? (\n          getCoverageRatingLabel(option)\n        ) : (\n          <span className=\"big-spacer-left\">{translate('no_data')}</span>\n        )}\n      </span>\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DuplicationsRating from 'sonar-ui-common/components/ui/DuplicationsRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getDuplicationsRatingAverageValue,\n  getDuplicationsRatingLabel\n} from 'sonar-ui-common/helpers/ratings';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\n\nexport interface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  property?: string;\n  value?: any;\n}\n\nexport default function DuplicationsFilter(props: Props) {\n  const { property = 'duplications' } = props;\n  return (\n    <Filter\n      className={props.className}\n      facet={props.facet}\n      getFacetValueForOption={getFacetValueForOption}\n      header={<FilterHeader name={translate('metric_domain.Duplications')} />}\n      highlightUnder={1}\n      highlightUnderMax={5}\n      maxFacetValue={props.maxFacetValue}\n      onQueryChange={props.onQueryChange}\n      options={[1, 2, 3, 4, 5, 6]}\n      organization={props.organization}\n      property={property}\n      renderOption={renderOption}\n      value={props.value}\n    />\n  );\n}\n\nfunction getFacetValueForOption(facet: Facet, option: number) {\n  const map = ['*-3.0', '3.0-5.0', '5.0-10.0', '10.0-20.0', '20.0-*', 'NO_DATA'];\n  return facet[map[option - 1]];\n}\n\nfunction renderOption(option: number, selected: boolean) {\n  return (\n    <span>\n      {option < 6 && (\n        <DuplicationsRating\n          muted={!selected}\n          size=\"small\"\n          value={getDuplicationsRatingAverageValue(option)}\n        />\n      )}\n      <span className=\"spacer-left\">\n        {option < 6 ? (\n          getDuplicationsRatingLabel(option)\n        ) : (\n          <span className=\"big-spacer-left\">{translate('no_data')}</span>\n        )}\n      </span>\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  isFavorite?: boolean;\n  isLoading?: boolean;\n  onInputChange?: (query: string) => void;\n  onOpen?: () => void;\n  onQueryChange: (change: T.RawQuery) => void;\n  options: Array<{ label: string; value: string }>;\n  organization?: { key: string };\n  property: string;\n  query: T.Dict<any>;\n}\n\nexport default class SearchableFilterFooter extends React.PureComponent<Props> {\n  handleOptionChange = ({ value }: { value: string }) => {\n    const urlOptions = (this.props.query[this.props.property] || []).concat(value).join(',');\n    this.props.onQueryChange({ [this.props.property]: urlOptions });\n  };\n\n  render() {\n    return (\n      <div className=\"search-navigator-facet-footer projects-facet-footer\">\n        <Select\n          className=\"input-super-large\"\n          clearable={false}\n          isLoading={this.props.isLoading}\n          onChange={this.handleOptionChange}\n          onInputChange={this.props.onInputChange}\n          onOpen={this.props.onOpen}\n          options={this.props.options}\n          placeholder={translate('search_verb')}\n          searchable={true}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  option?: { name: string };\n  optionKey: string;\n}\n\nexport default function SearchableFilterOption(props: Props) {\n  const optionName = props.option ? props.option.name : props.optionKey;\n  return <span>{props.optionKey !== '<null>' ? optionName : translate('unknown')}</span>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getLanguageByKey } from '../../../store/languages';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\nimport SearchableFilterFooter from './SearchableFilterFooter';\nimport SearchableFilterOption from './SearchableFilterOption';\n\ninterface Props {\n  facet?: Facet;\n  languages: T.Languages;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  property?: string;\n  query: T.Dict<any>;\n  value?: string[];\n}\n\nexport default class LanguagesFilter extends React.Component<Props> {\n  getSearchOptions = () => {\n    const { facet, languages } = this.props;\n    let languageKeys = Object.keys(languages);\n    if (facet) {\n      languageKeys = difference(languageKeys, Object.keys(facet));\n    }\n    return languageKeys.map(key => ({ label: languages[key].name, value: key }));\n  };\n\n  getSortedOptions = (facet: Facet = {}) =>\n    sortBy(Object.keys(facet), [(option: string) => -facet[option], (option: string) => option]);\n\n  renderOption = (option: string) => (\n    <SearchableFilterOption\n      option={getLanguageByKey(this.props.languages, option)}\n      optionKey={option}\n    />\n  );\n\n  render() {\n    const { property = 'languages' } = this.props;\n\n    return (\n      <Filter\n        facet={this.props.facet}\n        footer={\n          <SearchableFilterFooter\n            onQueryChange={this.props.onQueryChange}\n            options={this.getSearchOptions()}\n            organization={this.props.organization}\n            property={property}\n            query={this.props.query}\n          />\n        }\n        header={<FilterHeader name={translate('projects.facets.languages')} />}\n        maxFacetValue={this.props.maxFacetValue}\n        onQueryChange={this.props.onQueryChange}\n        options={this.getSortedOptions(this.props.facet)}\n        organization={this.props.organization}\n        property={property}\n        renderOption={this.renderOption}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getLanguages, Store } from '../../../store/rootReducer';\nimport LanguagesFilter from './LanguagesFilter';\n\nconst stateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(stateToProps)(LanguagesFilter);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\n\ninterface Props {\n  className?: string;\n  facet?: Facet;\n  headerDetail?: React.ReactNode;\n  maxFacetValue?: number;\n  name: string;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  property: string;\n  value?: any;\n}\n\nexport default function IssuesFilter(props: Props) {\n  return (\n    <Filter\n      className={props.className}\n      facet={props.facet}\n      header={\n        <FilterHeader name={translate('metric_domain', props.name)}>\n          {props.headerDetail}\n        </FilterHeader>\n      }\n      highlightUnder={1}\n      maxFacetValue={props.maxFacetValue}\n      onQueryChange={props.onQueryChange}\n      options={[1, 2, 3, 4, 5]}\n      organization={props.organization}\n      property={props.property}\n      renderOption={renderOption}\n      value={props.value}\n    />\n  );\n}\n\nfunction renderOption(option: number, selected: boolean) {\n  return (\n    <span>\n      <Rating muted={!selected} small={true} value={option} />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CodeSmellIcon from 'sonar-ui-common/components/icons/CodeSmellIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport IssuesFilter from './IssuesFilter';\n\ninterface Props {\n  className?: string;\n  facet?: Facet;\n  headerDetail?: React.ReactNode;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  value?: any;\n}\n\nexport default function MaintainabilityFilter(props: Props) {\n  return (\n    <IssuesFilter\n      {...props}\n      headerDetail={\n        <span className=\"note little-spacer-left\">\n          {'( '}\n          <CodeSmellIcon className=\"little-spacer-right\" />\n          {translate('metric.code_smells.name')}\n          {' )'}\n        </span>\n      }\n      name=\"Maintainability\"\n      property=\"maintainability\"\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CoverageFilter, { Props } from './CoverageFilter';\n\nexport default function NewCoverageFilter(props: Props) {\n  return <CoverageFilter {...props} className=\"leak-facet-box\" property=\"new_coverage\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DuplicationsFilter, { Props } from './DuplicationsFilter';\n\nexport default function NewDuplicationsFilter(props: Props) {\n  return <DuplicationsFilter {...props} className=\"leak-facet-box\" property=\"new_duplications\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSizeRatingLabel } from 'sonar-ui-common/helpers/ratings';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\n\nexport interface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  property?: string;\n  value?: any;\n}\n\nexport default function NewLinesFilter(props: Props) {\n  const { property = 'new_lines' } = props;\n\n  return (\n    <Filter\n      className=\"leak-facet-box\"\n      facet={props.facet}\n      getFacetValueForOption={getFacetValueForOption}\n      header={<FilterHeader name={translate('projects.facets.new_lines')} />}\n      highlightUnder={1}\n      maxFacetValue={props.maxFacetValue}\n      onQueryChange={props.onQueryChange}\n      options={[1, 2, 3, 4, 5]}\n      organization={props.organization}\n      property={property}\n      renderOption={renderOption}\n      value={props.value}\n    />\n  );\n}\n\nfunction getFacetValueForOption(facet: Facet, option: number) {\n  const map = ['*-1000.0', '1000.0-10000.0', '10000.0-100000.0', '100000.0-500000.0', '500000.0-*'];\n  return facet[map[option - 1]];\n}\n\nfunction renderOption(option: number) {\n  return <span>{getSizeRatingLabel(option)}</span>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CodeSmellIcon from 'sonar-ui-common/components/icons/CodeSmellIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport IssuesFilter from './IssuesFilter';\n\ninterface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  value?: any;\n}\n\nexport default function NewMaintainabilityFilter(props: Props) {\n  return (\n    <IssuesFilter\n      {...props}\n      className=\"leak-facet-box\"\n      headerDetail={\n        <span className=\"note little-spacer-left\">\n          {'( '}\n          <CodeSmellIcon className=\"little-spacer-right\" />\n          {translate('metric.code_smells.name')}\n          {' )'}\n        </span>\n      }\n      name=\"Maintainability\"\n      property=\"new_maintainability\"\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BugIcon from 'sonar-ui-common/components/icons/BugIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport IssuesFilter from './IssuesFilter';\n\ninterface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  value?: any;\n}\n\nexport default function NewReliabilityFilter(props: Props) {\n  return (\n    <IssuesFilter\n      {...props}\n      className=\"leak-facet-box\"\n      headerDetail={\n        <span className=\"note little-spacer-left\">\n          {'( '}\n          <BugIcon className=\"little-spacer-right\" />\n          {translate('metric.bugs.name')}\n          {' )'}\n        </span>\n      }\n      name=\"Reliability\"\n      property=\"new_reliability\"\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport VulnerabilityIcon from 'sonar-ui-common/components/icons/VulnerabilityIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport IssuesFilter from './IssuesFilter';\n\ninterface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  value?: any;\n}\n\nexport default function NewSecurityFilter(props: Props) {\n  return (\n    <IssuesFilter\n      {...props}\n      className=\"leak-facet-box\"\n      headerDetail={\n        <span className=\"note little-spacer-left\">\n          {'( '}\n          <VulnerabilityIcon className=\"little-spacer-right\" />\n          {translate('metric.vulnerabilities.name')}\n          {' )'}\n        </span>\n      }\n      name=\"Security\"\n      property=\"new_security\"\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ComponentQualifier } from '../../../types/component';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\n\nexport interface QualifierFilterProps {\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  value: ComponentQualifier | undefined;\n}\n\nconst options = [ComponentQualifier.Project, ComponentQualifier.Application];\n\nexport default function QualifierFilter(props: QualifierFilterProps) {\n  const { facet, maxFacetValue, organization, value } = props;\n\n  return (\n    <Filter\n      facet={facet}\n      header={<FilterHeader name={translate('projects.facets.qualifier')} />}\n      maxFacetValue={maxFacetValue}\n      onQueryChange={props.onQueryChange}\n      options={options}\n      organization={organization}\n      property=\"qualifier\"\n      renderOption={renderOption}\n      value={value}\n    />\n  );\n}\n\nfunction renderOption(option: string, selected: boolean) {\n  return (\n    <span className=\"display-flex-center\">\n      <QualifierIcon\n        className=\"spacer-right\"\n        fill={selected ? undefined : 'currentColor'}\n        qualifier={option}\n      />\n      {translate('qualifier', option)}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\n\nexport interface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  value?: any;\n}\n\nexport default function QualityGateFilter(props: Props) {\n  const hasWarnStatus = props.facet && props.facet['WARN'] !== undefined;\n  const options = hasWarnStatus ? ['OK', 'WARN', 'ERROR'] : ['OK', 'ERROR'];\n\n  return (\n    <Filter\n      facet={props.facet}\n      header={<FilterHeader name={translate('projects.facets.quality_gate')} />}\n      maxFacetValue={props.maxFacetValue}\n      onQueryChange={props.onQueryChange}\n      options={options}\n      organization={props.organization}\n      property=\"gate\"\n      renderOption={renderOption}\n      value={props.value}\n    />\n  );\n}\n\nfunction renderOption(option: string, selected: boolean) {\n  return (\n    <>\n      <Level level={option} muted={!selected} small={true} />\n      {option === 'WARN' && (\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('projects.facets.quality_gate.warning_help')}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BugIcon from 'sonar-ui-common/components/icons/BugIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport IssuesFilter from './IssuesFilter';\n\ninterface Props {\n  className?: string;\n  facet?: Facet;\n  headerDetail?: React.ReactNode;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  value?: any;\n}\n\nexport default function ReliabilityFilter(props: Props) {\n  return (\n    <IssuesFilter\n      {...props}\n      headerDetail={\n        <span className=\"note little-spacer-left\">\n          {'( '}\n          <BugIcon className=\"little-spacer-right\" />\n          {translate('metric.bugs.name')}\n          {' )'}\n        </span>\n      }\n      name=\"Reliability\"\n      property=\"reliability\"\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport VulnerabilityIcon from 'sonar-ui-common/components/icons/VulnerabilityIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport IssuesFilter from './IssuesFilter';\n\ninterface Props {\n  className?: string;\n  facet?: Facet;\n  headerDetail?: React.ReactNode;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  value?: any;\n}\n\nexport default function SecurityFilter(props: Props) {\n  return (\n    <IssuesFilter\n      {...props}\n      headerDetail={\n        <span className=\"note little-spacer-left\">\n          {'( '}\n          <VulnerabilityIcon className=\"little-spacer-right\" />\n          {translate('metric.vulnerabilities.name')}\n          {' )'}\n        </span>\n      }\n      name=\"Security\"\n      property=\"security\"\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SecurityHotspotIcon from 'sonar-ui-common/components/icons/SecurityHotspotIcon';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\n\nexport interface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  property?: string;\n  value?: any;\n}\n\nconst labels: T.Dict<string> = {\n  1: '≥ 80%',\n  2: '70% - 80%',\n  3: '50% - 70%',\n  4: '30% - 50%',\n  5: '< 30%'\n};\n\nexport default function SecurityReviewFilter(props: Props) {\n  const { property = 'security_review' } = props;\n\n  return (\n    <Filter\n      className={props.className}\n      facet={props.facet}\n      header={\n        <FilterHeader name={translate('metric_domain.SecurityReview')}>\n          <span className=\"note little-spacer-left\">\n            {'( '}\n            <SecurityHotspotIcon className=\"little-spacer-right\" />\n            {translate('metric.security_hotspots.name')}\n            {' )'}\n          </span>\n        </FilterHeader>\n      }\n      highlightUnder={1}\n      maxFacetValue={props.maxFacetValue}\n      onQueryChange={props.onQueryChange}\n      options={[1, 2, 3, 4, 5]}\n      organization={props.organization}\n      property={property}\n      renderOption={renderOption}\n      value={props.value}\n    />\n  );\n}\n\nfunction renderOption(option: number, selected: boolean) {\n  return (\n    <span>\n      <Rating muted={!selected} small={true} value={option} />\n      <span className=\"spacer-left\">{labels[option]}</span>\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSizeRatingAverageValue, getSizeRatingLabel } from 'sonar-ui-common/helpers/ratings';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\n\nexport interface Props {\n  className?: string;\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  property?: string;\n  value?: any;\n}\n\nexport default function SizeFilter(props: Props) {\n  const { property = 'size' } = props;\n\n  return (\n    <Filter\n      className={props.className}\n      facet={props.facet}\n      getFacetValueForOption={getFacetValueForOption}\n      header={<FilterHeader name={translate('metric_domain.Size')} />}\n      highlightUnder={1}\n      maxFacetValue={props.maxFacetValue}\n      onQueryChange={props.onQueryChange}\n      options={[1, 2, 3, 4, 5]}\n      organization={props.organization}\n      property={property}\n      renderOption={renderOption}\n      value={props.value}\n    />\n  );\n}\n\nfunction getFacetValueForOption(facet: Facet, option: number) {\n  const map = ['*-1000.0', '1000.0-10000.0', '10000.0-100000.0', '100000.0-500000.0', '500000.0-*'];\n  return facet[map[option - 1]];\n}\n\nfunction renderOption(option: number, selected: boolean) {\n  return (\n    <span>\n      <SizeRating muted={!selected} small={true} value={getSizeRatingAverageValue(option)} />\n      <span className=\"spacer-left\">{getSizeRatingLabel(option)}</span>\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, difference, size, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { searchProjectTags } from '../../../api/components';\nimport { Facet } from '../types';\nimport Filter from './Filter';\nimport FilterHeader from './FilterHeader';\nimport SearchableFilterFooter from './SearchableFilterFooter';\nimport SearchableFilterOption from './SearchableFilterOption';\n\ninterface Props {\n  facet?: Facet;\n  maxFacetValue?: number;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  property?: string;\n  query: T.Dict<any>;\n  value?: string[];\n}\n\ninterface State {\n  isLoading: boolean;\n  search: string;\n  tags: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class TagsFilter extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      search: '',\n      tags: []\n    };\n    this.handleSearch = debounce(this.handleSearch, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getSearchOptions = () => {\n    let tagsCopy = [...this.state.tags];\n    if (this.props.facet) {\n      tagsCopy = difference(tagsCopy, Object.keys(this.props.facet));\n    }\n    return tagsCopy.slice(0, LIST_SIZE).map(tag => ({ label: tag, value: tag }));\n  };\n\n  handleSearch = (search?: string) => {\n    if (search !== this.state.search) {\n      search = search || '';\n      this.setState({ search, isLoading: true });\n      searchProjectTags({\n        q: search,\n        ps: size(this.props.facet || {}) + LIST_SIZE\n      }).then(\n        result => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, tags: result.tags });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  getSortedOptions = (facet: Facet = {}) =>\n    sortBy(Object.keys(facet), [(option: string) => -facet[option], (option: string) => option]);\n\n  renderOption = (option: string) => <SearchableFilterOption optionKey={option} />;\n\n  render() {\n    const { property = 'tags' } = this.props;\n\n    return (\n      <Filter\n        facet={this.props.facet}\n        footer={\n          <SearchableFilterFooter\n            isLoading={this.state.isLoading}\n            onInputChange={this.handleSearch}\n            onOpen={this.handleSearch}\n            onQueryChange={this.props.onQueryChange}\n            options={this.getSearchOptions()}\n            organization={this.props.organization}\n            property={property}\n            query={this.props.query}\n          />\n        }\n        header={<FilterHeader name={translate('projects.facets.tags')} />}\n        maxFacetValue={this.props.maxFacetValue}\n        onQueryChange={this.props.onQueryChange}\n        options={this.getSortedOptions(this.props.facet)}\n        organization={this.props.organization}\n        property={property}\n        renderOption={this.renderOption}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onClearAll: () => void;\n}\n\nexport default function ClearAll({ onClearAll }: Props) {\n  return (\n    <div className=\"projects-facets-reset\">\n      <Button className=\"button-red\" onClick={onClearAll}>\n        {translate('clear_all_filters')}\n      </Button>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IndexLink, Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport { isLoggedIn } from '../../../helpers/users';\nimport { PROJECTS_ALL, PROJECTS_DEFAULT_FILTER, PROJECTS_FAVORITE } from '../utils';\n\ninterface Props {\n  currentUser: T.CurrentUser;\n  organization?: { key: string };\n  query?: T.RawQuery;\n}\n\nexport default class FavoriteFilter extends React.PureComponent<Props> {\n  handleSaveFavorite = () => {\n    if (!this.props.organization) {\n      save(PROJECTS_DEFAULT_FILTER, PROJECTS_FAVORITE);\n    }\n  };\n\n  handleSaveAll = () => {\n    if (!this.props.organization) {\n      save(PROJECTS_DEFAULT_FILTER, PROJECTS_ALL);\n    }\n  };\n\n  render() {\n    if (!isLoggedIn(this.props.currentUser)) {\n      return null;\n    }\n\n    const pathnameForFavorite = this.props.organization\n      ? `/organizations/${this.props.organization.key}/projects/favorite`\n      : '/projects/favorite';\n\n    const pathnameForAll = this.props.organization\n      ? `/organizations/${this.props.organization.key}/projects`\n      : '/projects';\n\n    return (\n      <header className=\"page-header text-center\">\n        <div className=\"button-group\">\n          <Link\n            activeClassName=\"button-active\"\n            className=\"button\"\n            id=\"favorite-projects\"\n            onClick={this.handleSaveFavorite}\n            to={{ pathname: pathnameForFavorite, query: this.props.query }}>\n            {translate('my_favorites')}\n          </Link>\n          <IndexLink\n            activeClassName=\"button-active\"\n            className=\"button\"\n            id=\"all-projects\"\n            onClick={this.handleSaveAll}\n            to={{ pathname: pathnameForAll, query: this.props.query }}>\n            {translate('all')}\n          </IndexLink>\n        </div>\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getCurrentUser, Store } from '../../../store/rootReducer';\nimport FavoriteFilter from './FavoriteFilter';\n\nfunction mapStateToProps(state: Store) {\n  return { currentUser: getCurrentUser(state) };\n}\n\nexport default connect(mapStateToProps)(FavoriteFilter);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { flatMap } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CoverageFilter from '../filters/CoverageFilter';\nimport DuplicationsFilter from '../filters/DuplicationsFilter';\nimport LanguagesFilterContainer from '../filters/LanguagesFilterContainer';\nimport MaintainabilityFilter from '../filters/MaintainabilityFilter';\nimport NewCoverageFilter from '../filters/NewCoverageFilter';\nimport NewDuplicationsFilter from '../filters/NewDuplicationsFilter';\nimport NewLinesFilter from '../filters/NewLinesFilter';\nimport NewMaintainabilityFilter from '../filters/NewMaintainabilityFilter';\nimport NewReliabilityFilter from '../filters/NewReliabilityFilter';\nimport NewSecurityFilter from '../filters/NewSecurityFilter';\nimport QualifierFilter from '../filters/QualifierFilter';\nimport QualityGateFilter from '../filters/QualityGateFilter';\nimport ReliabilityFilter from '../filters/ReliabilityFilter';\nimport SecurityFilter from '../filters/SecurityFilter';\nimport SecurityReviewFilter from '../filters/SecurityReviewFilter';\nimport SizeFilter from '../filters/SizeFilter';\nimport TagsFilter from '../filters/TagsFilter';\nimport { hasFilterParams } from '../query';\nimport { Facets } from '../types';\nimport ClearAll from './ClearAll';\nimport FavoriteFilterContainer from './FavoriteFilterContainer';\n\nexport interface PageSidebarProps {\n  applicationsEnabled: boolean;\n  facets?: Facets;\n  onClearAll: () => void;\n  onQueryChange: (change: T.RawQuery) => void;\n  organization?: { key: string };\n  query: T.RawQuery;\n  view: string;\n  visualization: string;\n}\n\nexport default function PageSidebar(props: PageSidebarProps) {\n  const {\n    applicationsEnabled,\n    facets,\n    onQueryChange,\n    query,\n    organization,\n    view,\n    visualization\n  } = props;\n  const isFiltered = hasFilterParams(query);\n  const isLeakView = view === 'leak';\n  const maxFacetValue = getMaxFacetValue(facets);\n  const facetProps = { onQueryChange, maxFacetValue, organization };\n\n  let linkQuery: T.RawQuery | undefined = undefined;\n  if (view !== 'overall') {\n    linkQuery = { view };\n\n    if (view === 'visualizations') {\n      linkQuery.visualization = visualization;\n    }\n  }\n\n  return (\n    <div>\n      <FavoriteFilterContainer organization={organization} query={linkQuery} />\n\n      <div className=\"projects-facets-header clearfix\">\n        {isFiltered && <ClearAll onClearAll={props.onClearAll} />}\n\n        <h3>{translate('filters')}</h3>\n      </div>\n      <QualityGateFilter {...facetProps} facet={getFacet(facets, 'gate')} value={query.gate} />\n      {!isLeakView && (\n        <>\n          <ReliabilityFilter\n            {...facetProps}\n            facet={getFacet(facets, 'reliability')}\n            value={query.reliability}\n          />\n          <SecurityFilter\n            {...facetProps}\n            facet={getFacet(facets, 'security')}\n            value={query.security}\n          />\n\n          <SecurityReviewFilter\n            {...facetProps}\n            facet={getFacet(facets, 'security_review_rating')}\n            value={query.security_review_rating}\n          />\n\n          <MaintainabilityFilter\n            {...facetProps}\n            facet={getFacet(facets, 'maintainability')}\n            value={query.maintainability}\n          />\n          <CoverageFilter\n            {...facetProps}\n            facet={getFacet(facets, 'coverage')}\n            value={query.coverage}\n          />\n          <DuplicationsFilter\n            {...facetProps}\n            facet={getFacet(facets, 'duplications')}\n            value={query.duplications}\n          />\n          <SizeFilter {...facetProps} facet={getFacet(facets, 'size')} value={query.size} />\n        </>\n      )}\n      {isLeakView && (\n        <>\n          <NewReliabilityFilter\n            {...facetProps}\n            facet={getFacet(facets, 'new_reliability')}\n            value={query.new_reliability}\n          />\n          <NewSecurityFilter\n            {...facetProps}\n            facet={getFacet(facets, 'new_security')}\n            value={query.new_security}\n          />\n          <SecurityReviewFilter\n            {...facetProps}\n            className=\"leak-facet-box\"\n            facet={getFacet(facets, 'new_security_review_rating')}\n            property=\"new_security_review_rating\"\n            value={query.new_security_review_rating}\n          />\n          <NewMaintainabilityFilter\n            {...facetProps}\n            facet={getFacet(facets, 'new_maintainability')}\n            value={query.new_maintainability}\n          />\n          <NewCoverageFilter\n            {...facetProps}\n            facet={getFacet(facets, 'new_coverage')}\n            value={query.new_coverage}\n          />\n          <NewDuplicationsFilter\n            {...facetProps}\n            facet={getFacet(facets, 'new_duplications')}\n            value={query.new_duplications}\n          />\n          <NewLinesFilter\n            {...facetProps}\n            facet={getFacet(facets, 'new_lines')}\n            value={query.new_lines}\n          />\n        </>\n      )}\n      <LanguagesFilterContainer\n        {...facetProps}\n        facet={getFacet(facets, 'languages')}\n        query={query}\n        value={query.languages}\n      />\n      {applicationsEnabled && (\n        <QualifierFilter\n          {...facetProps}\n          facet={getFacet(facets, 'qualifier')}\n          value={query.qualifier}\n        />\n      )}\n      <TagsFilter\n        {...facetProps}\n        facet={getFacet(facets, 'tags')}\n        query={query}\n        value={query.tags}\n      />\n    </div>\n  );\n}\n\nfunction getFacet(facets: Facets | undefined, name: string) {\n  return facets && facets[name];\n}\n\nfunction getMaxFacetValue(facets?: Facets) {\n  return facets && Math.max(...flatMap(Object.values(facets), facet => Object.values(facet)));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport '../../../components/common/EmptySearch.css';\nimport { Query } from '../query';\n\nexport default function EmptyFavoriteSearch({ query }: { query: Query }) {\n  return (\n    <div className=\"empty-search\">\n      <h3>{translate('no_results_search.favorites')}</h3>\n      <p className=\"big-spacer-top\">\n        <FormattedMessage\n          defaultMessage={translate('no_results_search.favorites.2')}\n          id=\"no_results_search.favorites.2\"\n          values={{\n            url: <Link to={{ pathname: '/projects', query }}>{translate('all')}</Link>\n          }}\n        />\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { OnboardingContextShape } from '../../../app/components/OnboardingContext';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { hasGlobalPermission, isLoggedIn } from '../../../helpers/users';\n\ninterface Props {\n  currentUser: T.CurrentUser;\n  openProjectOnboarding: OnboardingContextShape;\n  organization?: T.Organization;\n}\n\nexport default class EmptyInstance extends React.PureComponent<Props> {\n  analyzeNewProject = () => {\n    this.props.openProjectOnboarding(this.props.organization);\n  };\n\n  render() {\n    const { currentUser, organization } = this.props;\n    const showNewProjectButton = isSonarCloud()\n      ? organization && organization.actions && organization.actions.provision\n      : isLoggedIn(currentUser) && hasGlobalPermission(currentUser, 'provisioning');\n\n    return (\n      <div className=\"projects-empty-list\">\n        <h3>\n          {showNewProjectButton\n            ? translate('projects.no_projects.empty_instance.new_project')\n            : translate('projects.no_projects.empty_instance')}\n        </h3>\n        {showNewProjectButton && (\n          <div>\n            <p className=\"big-spacer-top\">\n              {translate('projects.no_projects.empty_instance.how_to_add_projects')}\n            </p>\n            <p className=\"big-spacer-top\">\n              <Button onClick={this.analyzeNewProject}>\n                {translate('my_account.create_new.TRK')}\n              </Button>\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { OnboardingContextShape } from '../../../app/components/OnboardingContext';\nimport OrganizationListItem from '../../../components/ui/OrganizationListItem';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { getMyOrganizations, Store } from '../../../store/rootReducer';\n\ninterface OwnProps {\n  openProjectOnboarding: OnboardingContextShape;\n}\n\ninterface StateProps {\n  organizations: T.Organization[];\n}\n\nexport function NoFavoriteProjects(props: StateProps & OwnProps) {\n  return (\n    <div className=\"projects-empty-list\">\n      <h3>{translate('projects.no_favorite_projects')}</h3>\n      {isSonarCloud() ? (\n        <div className=\"spacer-top\">\n          <p>{translate('projects.no_favorite_projects.how_to_add_projects')}</p>\n          <div className=\"huge-spacer-top\">\n            <Button onClick={props.openProjectOnboarding}>\n              {translate('provisioning.analyze_new_project')}\n            </Button>\n\n            {props.organizations.length > 0 && (\n              <Dropdown\n                className=\"display-inline-block big-spacer-left\"\n                overlay={\n                  <ul className=\"menu\">\n                    {sortBy(props.organizations, org => org.name.toLowerCase()).map(\n                      organization => (\n                        <OrganizationListItem key={organization.key} organization={organization} />\n                      )\n                    )}\n                  </ul>\n                }>\n                <a className=\"button\" href=\"#\">\n                  {translate('projects.no_favorite_projects.favorite_projects_from_orgs')}\n                  <DropdownIcon className=\"little-spacer-left\" />\n                </a>\n              </Dropdown>\n            )}\n\n            <Link className=\"button big-spacer-left\" to=\"/explore/projects\">\n              {translate('projects.no_favorite_projects.favorite_public_projects')}\n            </Link>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <p className=\"big-spacer-top\">{translate('projects.no_favorite_projects.engagement')}</p>\n          <p className=\"big-spacer-top\">\n            <Link className=\"button\" to=\"/projects/all\">\n              {translate('projects.explore_projects')}\n            </Link>\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  organizations: getMyOrganizations(state)\n});\n\nexport default connect(mapStateToProps)(NoFavoriteProjects);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport IssueTypeIcon from 'sonar-ui-common/components/icons/IssueTypeIcon';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport Measure from '../../../components/measure/Measure';\n\nexport interface ProjectCardRatingMeasureProps {\n  iconKey?: string;\n  iconLabel: string;\n  measures: T.Dict<string | undefined>;\n  metricKey: string;\n  metricRatingKey: string;\n  metricType: string;\n}\n\nexport default function ProjectCardRatingMeasure(props: ProjectCardRatingMeasureProps) {\n  const { iconKey, iconLabel, measures, metricKey, metricRatingKey, metricType } = props;\n\n  return (\n    <div className=\"project-card-measure\" data-key={metricRatingKey}>\n      <div className=\"project-card-measure-inner\">\n        <div className=\"project-card-measure-number\">\n          <Measure\n            className=\"spacer-right\"\n            metricKey={metricKey}\n            metricType={metricType}\n            value={measures[metricKey]}\n          />\n\n          <Rating value={measures[metricRatingKey]} />\n        </div>\n\n        <div className=\"project-card-measure-label-with-icon\">\n          <IssueTypeIcon className=\"little-spacer-right text-bottom\" query={iconKey || metricKey} />\n\n          {iconLabel}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Measure from '../../../components/measure/Measure';\nimport ProjectCardRatingMeasure from './ProjectCardRatingMeasure';\n\ninterface Props {\n  measures: T.Dict<string>;\n}\n\nexport default function ProjectCardLeakMeasures({ measures }: Props) {\n  return (\n    <div className=\"project-card-leak-measures\">\n      <ProjectCardRatingMeasure\n        iconLabel={translate('metric.bugs.name')}\n        measures={measures}\n        metricKey=\"new_bugs\"\n        metricRatingKey=\"new_reliability_rating\"\n        metricType=\"SHORT_INT\"\n      />\n\n      <ProjectCardRatingMeasure\n        iconLabel={translate('metric.vulnerabilities.name')}\n        measures={measures}\n        metricKey=\"new_vulnerabilities\"\n        metricRatingKey=\"new_security_rating\"\n        metricType=\"SHORT_INT\"\n      />\n\n      <ProjectCardRatingMeasure\n        iconKey=\"security_hotspots\"\n        iconLabel={translate('projects.security_hotspots_reviewed')}\n        measures={measures}\n        metricKey=\"new_security_hotspots_reviewed\"\n        metricRatingKey=\"new_security_review_rating\"\n        metricType=\"PERCENT\"\n      />\n\n      <ProjectCardRatingMeasure\n        iconLabel={translate('metric.code_smells.name')}\n        measures={measures}\n        metricKey=\"new_code_smells\"\n        metricRatingKey=\"new_maintainability_rating\"\n        metricType=\"SHORT_INT\"\n      />\n\n      {measures['new_coverage'] != null && (\n        <div className=\"project-card-measure\" data-key=\"new_coverage\">\n          <div className=\"project-card-measure-inner\">\n            <div className=\"project-card-measure-number\">\n              <Measure\n                metricKey=\"new_coverage\"\n                metricType=\"PERCENT\"\n                value={measures['new_coverage']}\n              />\n            </div>\n            <div className=\"project-card-measure-label\">{translate('metric.coverage.name')}</div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"project-card-measure\" data-key=\"new_duplicated_lines_density\">\n        <div className=\"project-card-measure-inner\">\n          <div className=\"project-card-measure-number\">\n            <Measure\n              metricKey=\"new_duplicated_lines_density\"\n              metricType=\"PERCENT\"\n              value={measures['new_duplicated_lines_density']}\n            />\n          </div>\n          <div className=\"project-card-measure-label\">\n            {translate('metric.duplicated_lines_density.short_name')}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"project-card-measure project-card-ncloc\" data-key=\"new_lines\">\n        <div className=\"project-card-measure-inner\">\n          <div className=\"project-card-measure-number\">\n            <Measure metricKey=\"new_lines\" metricType=\"SHORT_INT\" value={measures['new_lines']} />\n          </div>\n          <div className=\"project-card-measure-label\">{translate('metric.lines.name')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { areThereCustomOrganizations, Store } from '../../../store/rootReducer';\nimport ProjectCardOrganization from './ProjectCardOrganization';\n\nconst stateToProps = (state: Store) => ({\n  organizationsEnabled: areThereCustomOrganizations(state)\n});\n\nexport default connect(stateToProps)(ProjectCardOrganization);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport OrganizationLink from '../../../components/ui/OrganizationLink';\n\ninterface Props {\n  organization?: { key: string; name: string };\n  organizationsEnabled?: boolean;\n}\n\nexport default function ProjectCardOrganization({ organization, organizationsEnabled }: Props) {\n  if (!organization || !organizationsEnabled) {\n    return null;\n  }\n\n  return (\n    <span className=\"text-normal\">\n      <OrganizationLink organization={organization}>{organization.name}</OrganizationLink>\n      <span className=\"slash-separator\" />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getLanguages, Store } from '../../../store/rootReducer';\nimport ProjectCardLanguages from './ProjectCardLanguages';\n\nconst stateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(stateToProps)(ProjectCardLanguages);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  className?: string;\n  distribution?: string;\n  languages: T.Languages;\n}\n\nexport default function ProjectCardLanguages({ className, distribution, languages }: Props) {\n  if (distribution === undefined) {\n    return null;\n  }\n\n  const parsedLanguages = distribution.split(';').map(item => item.split('='));\n  const finalLanguages = sortBy(parsedLanguages, l => -1 * Number(l[1])).map(l =>\n    getLanguageName(languages, l[0])\n  );\n\n  const languagesText =\n    finalLanguages.slice(0, 2).join(', ') + (finalLanguages.length > 2 ? ', ...' : '');\n\n  let tooltip;\n  if (finalLanguages.length > 2) {\n    tooltip = (\n      <span>\n        {finalLanguages.map(language => (\n          <span key={language}>\n            {language}\n            <br />\n          </span>\n        ))}\n      </span>\n    );\n  }\n\n  return (\n    <div className={className}>\n      <Tooltip overlay={tooltip}>\n        <span>{languagesText}</span>\n      </Tooltip>\n    </div>\n  );\n}\n\nfunction getLanguageName(languages: T.Languages, key: string): string {\n  if (key === '<null>') {\n    return translate('unknown');\n  }\n  const language = languages[key];\n  return language != null ? language.name : key;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DuplicationsRating from 'sonar-ui-common/components/ui/DuplicationsRating';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Measure from '../../../components/measure/Measure';\nimport CoverageRating from '../../../components/ui/CoverageRating';\nimport { ComponentQualifier } from '../../../types/component';\nimport ProjectCardLanguagesContainer from './ProjectCardLanguagesContainer';\nimport ProjectCardRatingMeasure from './ProjectCardRatingMeasure';\n\ninterface Props {\n  componentQualifier: ComponentQualifier;\n  measures: T.Dict<string | undefined>;\n}\n\nexport default function ProjectCardOverallMeasures({ componentQualifier, measures }: Props) {\n  if (measures === undefined) {\n    return null;\n  }\n\n  const { ncloc } = measures;\n  if (!ncloc) {\n    return (\n      <div className=\"note big-spacer-top\">\n        {componentQualifier === ComponentQualifier.Application\n          ? translate('portfolio.app.empty')\n          : translate('overview.project.main_branch_empty')}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"project-card-measures\">\n      <ProjectCardRatingMeasure\n        iconLabel={translate('metric.bugs.name')}\n        measures={measures}\n        metricKey=\"bugs\"\n        metricRatingKey=\"reliability_rating\"\n        metricType=\"SHORT_INT\"\n      />\n\n      <ProjectCardRatingMeasure\n        iconLabel={translate('metric.vulnerabilities.name')}\n        measures={measures}\n        metricKey=\"vulnerabilities\"\n        metricRatingKey=\"security_rating\"\n        metricType=\"SHORT_INT\"\n      />\n\n      <ProjectCardRatingMeasure\n        iconKey=\"security_hotspots\"\n        iconLabel={translate('projects.security_hotspots_reviewed')}\n        measures={measures}\n        metricKey=\"security_hotspots_reviewed\"\n        metricRatingKey=\"security_review_rating\"\n        metricType=\"PERCENT\"\n      />\n\n      <ProjectCardRatingMeasure\n        iconLabel={translate('metric.code_smells.name')}\n        measures={measures}\n        metricKey=\"code_smells\"\n        metricRatingKey=\"sqale_rating\"\n        metricType=\"SHORT_INT\"\n      />\n\n      {measures['coverage'] != null && (\n        <div className=\"project-card-measure\" data-key=\"coverage\">\n          <div className=\"project-card-measure-inner\">\n            <div className=\"project-card-measure-number\">\n              <span className=\"spacer-right\">\n                <CoverageRating value={measures['coverage']} />\n              </span>\n              <Measure metricKey=\"coverage\" metricType=\"PERCENT\" value={measures['coverage']} />\n            </div>\n            <div className=\"project-card-measure-label\">{translate('metric.coverage.name')}</div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"project-card-measure\" data-key=\"duplicated_lines_density\">\n        <div className=\"project-card-measure-inner\">\n          <div className=\"project-card-measure-number\">\n            {measures['duplicated_lines_density'] != null && (\n              <span className=\"spacer-right\">\n                <DuplicationsRating value={Number(measures['duplicated_lines_density'])} />\n              </span>\n            )}\n            <Measure\n              metricKey=\"duplicated_lines_density\"\n              metricType=\"PERCENT\"\n              value={measures['duplicated_lines_density']}\n            />\n          </div>\n          <div className=\"project-card-measure-label\">\n            {translate('metric.duplicated_lines_density.short_name')}\n          </div>\n        </div>\n      </div>\n\n      {measures['ncloc'] != null && (\n        <div className=\"project-card-measure project-card-ncloc\" data-key=\"ncloc\">\n          <div className=\"project-card-measure-inner pull-right\">\n            <div className=\"project-card-measure-number\">\n              <Measure metricKey=\"ncloc\" metricType=\"SHORT_INT\" value={measures['ncloc']} />\n              <span className=\"spacer-left\">\n                <SizeRating value={Number(measures['ncloc'])} />\n              </span>\n            </div>\n            <div className=\"project-card-measure-label\">\n              <ProjectCardLanguagesContainer\n                className=\"project-card-languages\"\n                distribution={measures['ncloc_language_distribution']}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\n\ninterface Props {\n  status?: string;\n}\n\nexport default function ProjectCardQualityGate({ status }: Props) {\n  if (!status) {\n    return null;\n  }\n\n  const tooltip = translateWithParameters(\n    'overview.quality_gate_x',\n    formatMeasure(status, 'LEVEL')\n  );\n\n  return (\n    <div className=\"project-card-quality-gate big-spacer-left\">\n      <Tooltip overlay={tooltip}>\n        <div className=\"project-card-measure-inner\">\n          <Level aria-label={translate('quality_gates.status')} level={status} small={true} />\n          {status === 'WARN' && (\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('quality_gates.conditions.warning.tooltip')}\n            />\n          )}\n        </div>\n      </Tooltip>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as difference from 'date-fns/difference_in_milliseconds';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport PrivacyBadgeContainer from '../../../components/common/PrivacyBadgeContainer';\nimport Favorite from '../../../components/controls/Favorite';\nimport TagsList from '../../../components/tags/TagsList';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { isLoggedIn } from '../../../helpers/users';\nimport { ComponentQualifier } from '../../../types/component';\nimport { Project } from '../types';\nimport { formatDuration } from '../utils';\nimport ProjectCardLeakMeasures from './ProjectCardLeakMeasures';\nimport ProjectCardOrganizationContainer from './ProjectCardOrganizationContainer';\nimport ProjectCardOverallMeasures from './ProjectCardOverallMeasures';\nimport ProjectCardQualityGate from './ProjectCardQualityGate';\n\ninterface Props {\n  currentUser: T.CurrentUser;\n  handleFavorite: (component: string, isFavorite: boolean) => void;\n  height: number;\n  organization: T.Organization | undefined;\n  project: Project;\n  type?: string;\n}\n\ninterface Dates {\n  analysisDate: string;\n  leakPeriodDate?: string;\n}\n\nfunction getDates(project: Project, type: string | undefined) {\n  const { analysisDate, leakPeriodDate } = project;\n  if (!analysisDate || (type === 'leak' && !leakPeriodDate)) {\n    return undefined;\n  } else {\n    return { analysisDate, leakPeriodDate };\n  }\n}\n\nfunction renderHeader(props: Props) {\n  const { organization, project } = props;\n  const hasTags = project.tags.length > 0;\n  return (\n    <div className=\"project-card-header\">\n      {project.isFavorite !== undefined && (\n        <Favorite\n          className=\"spacer-right\"\n          component={project.key}\n          favorite={project.isFavorite}\n          handleFavorite={props.handleFavorite}\n          qualifier={project.qualifier}\n        />\n      )}\n      <h2 className=\"project-card-name\">\n        {!organization && <ProjectCardOrganizationContainer organization={project.organization} />}\n        <Link to={getProjectUrl(project.key)}>{project.name}</Link>\n      </h2>\n      {project.analysisDate && <ProjectCardQualityGate status={project.measures['alert_status']} />}\n      <div className=\"project-card-header-right\">\n        <PrivacyBadgeContainer\n          className=\"spacer-left\"\n          organization={organization || project.organization}\n          qualifier={project.qualifier}\n          tooltipProps={{ projectKey: project.key }}\n          visibility={project.visibility}\n        />\n\n        {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} />}\n      </div>\n    </div>\n  );\n}\n\nfunction renderDates(dates: Dates, type: string | undefined) {\n  const { analysisDate, leakPeriodDate } = dates;\n  const periodMs = leakPeriodDate ? difference(Date.now(), leakPeriodDate) : 0;\n\n  return (\n    <>\n      <DateTimeFormatter date={analysisDate}>\n        {formattedDate => (\n          <span className=\"note\">\n            {translateWithParameters('projects.last_analysis_on_x', formattedDate)}\n          </span>\n        )}\n      </DateTimeFormatter>\n      {type === 'leak' && periodMs !== undefined && (\n        <span className=\"project-card-leak-date big-spacer-left big-spacer-right\">\n          {translateWithParameters('projects.new_code_period_x', formatDuration(periodMs))}\n        </span>\n      )}\n    </>\n  );\n}\n\nfunction renderDateRow(project: Project, dates: Dates | undefined, type: string | undefined) {\n  if (project.qualifier === ComponentQualifier.Application || dates) {\n    return (\n      <div\n        className={classNames('display-flex-center project-card-dates spacer-top', {\n          'big-spacer-left padded-left': project.isFavorite !== undefined\n        })}>\n        {dates && renderDates(dates, type)}\n\n        {project.qualifier === ComponentQualifier.Application && (\n          <div className=\"text-right flex-1-0-auto\">\n            <QualifierIcon className=\"spacer-right\" qualifier={project.qualifier} />\n            {translate('qualifier.APP')}\n            {project.measures.projects && (\n              <>\n                {' ‒ '}\n                {translateWithParameters('x_projects_', project.measures.projects)}\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction renderMeasures(props: Props, dates: Dates | undefined) {\n  const { currentUser, project, type } = props;\n\n  const { measures } = project;\n\n  if (dates) {\n    return type === 'leak' ? (\n      <ProjectCardLeakMeasures measures={measures} />\n    ) : (\n      <ProjectCardOverallMeasures componentQualifier={project.qualifier} measures={measures} />\n    );\n  } else {\n    return (\n      <div className=\"project-card-not-analyzed\">\n        <span className=\"note\">\n          {type === 'leak' && project.analysisDate\n            ? translate('projects.no_new_code_period', project.qualifier)\n            : translate('projects.not_analyzed', project.qualifier)}\n        </span>\n        {project.qualifier !== ComponentQualifier.Application &&\n          !project.analysisDate &&\n          isLoggedIn(currentUser) && (\n            <Link className=\"button spacer-left\" to={getProjectUrl(project.key)}>\n              {translate('projects.configure_analysis')}\n            </Link>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default function ProjectCard(props: Props) {\n  const { height, project, type } = props;\n\n  const dates = getDates(project, type);\n\n  return (\n    <div\n      className=\"boxed-group project-card big-padded display-flex-column display-flex-space-between\"\n      data-key={project.key}\n      style={{ height }}>\n      <div>\n        {renderHeader(props)}\n        {renderDateRow(project, dates, type)}\n      </div>\n      {renderMeasures(props, dates)}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized/dist/commonjs/AutoSizer';\nimport { List, ListRowProps } from 'react-virtualized/dist/commonjs/List';\nimport { WindowScroller } from 'react-virtualized/dist/commonjs/WindowScroller';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { OnboardingContext } from '../../../app/components/OnboardingContext';\nimport EmptySearch from '../../../components/common/EmptySearch';\nimport { Query } from '../query';\nimport { Project } from '../types';\nimport EmptyFavoriteSearch from './EmptyFavoriteSearch';\nimport EmptyInstance from './EmptyInstance';\nimport NoFavoriteProjects from './NoFavoriteProjects';\nimport ProjectCard from './ProjectCard';\n\ninterface Props {\n  cardType?: string;\n  currentUser: T.CurrentUser;\n  handleFavorite: (component: string, isFavorite: boolean) => void;\n  isFavorite: boolean;\n  isFiltered: boolean;\n  organization: T.Organization | undefined;\n  projects: Project[];\n  query: Query;\n}\n\nexport default class ProjectsList extends React.PureComponent<Props> {\n  getCardHeight = () => {\n    return this.props.cardType === 'leak' ? 159 : 143;\n  };\n\n  renderNoProjects() {\n    const { currentUser, isFavorite, isFiltered, organization, query } = this.props;\n    if (isFiltered) {\n      return isFavorite ? <EmptyFavoriteSearch query={query} /> : <EmptySearch />;\n    }\n    return isFavorite ? (\n      <OnboardingContext.Consumer>\n        {openProjectOnboarding => (\n          <NoFavoriteProjects openProjectOnboarding={openProjectOnboarding} />\n        )}\n      </OnboardingContext.Consumer>\n    ) : (\n      <OnboardingContext.Consumer>\n        {openProjectOnboarding => (\n          <EmptyInstance\n            currentUser={currentUser}\n            openProjectOnboarding={openProjectOnboarding}\n            organization={organization}\n          />\n        )}\n      </OnboardingContext.Consumer>\n    );\n  }\n\n  renderRow = ({ index, key, style }: ListRowProps) => {\n    const project = this.props.projects[index];\n    const height = this.getCardHeight();\n    return (\n      <div key={key} role=\"row\" style={{ ...style, height }}>\n        <div role=\"gridcell\">\n          <ProjectCard\n            currentUser={this.props.currentUser}\n            handleFavorite={this.props.handleFavorite}\n            height={height}\n            key={project.key}\n            organization={this.props.organization}\n            project={project}\n            type={this.props.cardType}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  renderList() {\n    const cardHeight = this.getCardHeight();\n    return (\n      <WindowScroller>\n        {({ height, isScrolling, onChildScroll, scrollTop }) => (\n          <AutoSizer disableHeight={true}>\n            {({ width }) => (\n              <div>\n                <List\n                  aria-label={translate('project_plural')}\n                  autoHeight={true}\n                  height={height}\n                  isScrolling={isScrolling}\n                  onScroll={onChildScroll}\n                  overscanRowCount={2}\n                  rowCount={this.props.projects.length}\n                  rowHeight={cardHeight + 20}\n                  rowRenderer={this.renderRow}\n                  scrollTop={scrollTop}\n                  style={{ outline: 'none' }}\n                  width={width}\n                />\n              </div>\n            )}\n          </AutoSizer>\n        )}\n      </WindowScroller>\n    );\n  }\n\n  render() {\n    const { projects } = this.props;\n\n    return (\n      <div className=\"projects-list\">\n        {projects.length > 0 ? this.renderList() : this.renderNoProjects()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addSideBarClass, removeSideBarClass } from 'sonar-ui-common/helpers/pages';\nimport { get, save } from 'sonar-ui-common/helpers/storage';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport ScreenPositionHelper from '../../../components/common/ScreenPositionHelper';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport '../../../components/search-navigator.css';\nimport { isLoggedIn } from '../../../helpers/users';\nimport { ComponentQualifier } from '../../../types/component';\nimport { hasFilterParams, hasVisualizationParams, parseUrlQuery, Query } from '../query';\nimport '../styles.css';\nimport { Facets, Project } from '../types';\nimport { fetchProjects, parseSorting, SORTING_SWITCH } from '../utils';\nimport Visualizations from '../visualizations/Visualizations';\nimport PageHeader from './PageHeader';\nimport PageSidebar from './PageSidebar';\nimport ProjectsList from './ProjectsList';\n\ninterface Props {\n  currentUser: T.CurrentUser;\n  isFavorite: boolean;\n  location: Pick<Location, 'pathname' | 'query'>;\n  organization: T.Organization | undefined;\n  qualifiers: ComponentQualifier[];\n  router: Pick<Router, 'push' | 'replace'>;\n  storageOptionsSuffix?: string;\n}\n\ninterface State {\n  facets?: Facets;\n  loading: boolean;\n  pageIndex?: number;\n  projects?: Project[];\n  query: Query;\n  total?: number;\n}\n\nconst PROJECTS_SORT = 'sonarqube.projects.sort';\nconst PROJECTS_VIEW = 'sonarqube.projects.view';\nconst PROJECTS_VISUALIZATION = 'sonarqube.projects.visualization';\n\nexport class AllProjects extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: true, query: {} };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    if (this.props.isFavorite && !isLoggedIn(this.props.currentUser)) {\n      handleRequiredAuthentication();\n      return;\n    }\n    this.handleQueryChange(true);\n    addSideBarClass();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.location.query !== this.props.location.query) {\n      this.handleQueryChange(false);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeSideBarClass();\n  }\n\n  fetchProjects = (query: Query) => {\n    this.setState({ loading: true, query });\n    fetchProjects(query, this.props.isFavorite, this.props.organization).then(response => {\n      if (this.mounted) {\n        this.setState({\n          facets: response.facets,\n          loading: false,\n          pageIndex: 1,\n          projects: response.projects,\n          total: response.total\n        });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchMoreProjects = () => {\n    const { pageIndex, projects, query } = this.state;\n    if (pageIndex && projects && query) {\n      this.setState({ loading: true });\n      fetchProjects(query, this.props.isFavorite, this.props.organization, pageIndex + 1).then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              loading: false,\n              pageIndex: pageIndex + 1,\n              projects: [...projects, ...response.projects]\n            });\n          }\n        },\n        this.stopLoading\n      );\n    }\n  };\n\n  getSort = () => this.state.query.sort || 'name';\n\n  getStorageOptions = () => {\n    const { storageOptionsSuffix } = this.props;\n    const options: {\n      sort?: string;\n      view?: string;\n      visualization?: string;\n    } = {};\n    if (get(PROJECTS_SORT, storageOptionsSuffix)) {\n      options.sort = get(PROJECTS_SORT, storageOptionsSuffix) || undefined;\n    }\n    if (get(PROJECTS_VIEW, storageOptionsSuffix)) {\n      options.view = get(PROJECTS_VIEW, storageOptionsSuffix) || undefined;\n    }\n    if (get(PROJECTS_VISUALIZATION, storageOptionsSuffix)) {\n      options.visualization = get(PROJECTS_VISUALIZATION, storageOptionsSuffix) || undefined;\n    }\n    return options;\n  };\n\n  getView = () => this.state.query.view || 'overall';\n\n  getVisualization = () => this.state.query.visualization || 'risk';\n\n  handleClearAll = () => {\n    this.props.router.push({ pathname: this.props.location.pathname });\n  };\n\n  handleFavorite = (key: string, isFavorite: boolean) => {\n    this.setState(({ projects }) => {\n      if (!projects) {\n        return null;\n      }\n\n      return {\n        projects: projects.map(p => (p.key === key ? { ...p, isFavorite } : p))\n      };\n    });\n  };\n\n  handlePerspectiveChange = ({ view, visualization }: { view: string; visualization?: string }) => {\n    const { storageOptionsSuffix } = this.props;\n    const query: {\n      view: string | undefined;\n      visualization: string | undefined;\n      sort?: string | undefined;\n    } = {\n      view: view === 'overall' ? undefined : view,\n      visualization\n    };\n\n    if (this.state.query.view === 'leak' || view === 'leak') {\n      if (this.state.query.sort) {\n        const sort = parseSorting(this.state.query.sort);\n        if (SORTING_SWITCH[sort.sortValue]) {\n          query.sort = (sort.sortDesc ? '-' : '') + SORTING_SWITCH[sort.sortValue];\n        }\n      }\n      this.props.router.push({ pathname: this.props.location.pathname, query });\n    } else {\n      this.updateLocationQuery(query);\n    }\n\n    save(PROJECTS_SORT, query.sort, storageOptionsSuffix);\n    save(PROJECTS_VIEW, query.view, storageOptionsSuffix);\n    save(PROJECTS_VISUALIZATION, visualization, storageOptionsSuffix);\n  };\n\n  handleQueryChange(initialMount: boolean) {\n    const query = parseUrlQuery(this.props.location.query);\n    const savedOptions = this.getStorageOptions();\n    const savedOptionsSet = savedOptions.sort || savedOptions.view || savedOptions.visualization;\n\n    // if there is no visualization parameters (sort, view, visualization), but there are saved preferences in the localStorage\n    if (initialMount && !hasVisualizationParams(query) && savedOptionsSet) {\n      this.props.router.replace({ pathname: this.props.location.pathname, query: savedOptions });\n    } else {\n      this.fetchProjects(query);\n    }\n  }\n\n  handleSortChange = (sort: string, desc: boolean) => {\n    const asString = (desc ? '-' : '') + sort;\n    this.updateLocationQuery({ sort: asString });\n    save(PROJECTS_SORT, asString, this.props.storageOptionsSuffix);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  updateLocationQuery = (newQuery: T.RawQuery) => {\n    const query = omitBy({ ...this.props.location.query, ...newQuery }, x => !x);\n    this.props.router.push({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSide = () => (\n    <ScreenPositionHelper className=\"layout-page-side-outer\">\n      {({ top }) => (\n        <div className=\"layout-page-side projects-page-side\" style={{ top }}>\n          <div className=\"layout-page-side-inner\">\n            <div className=\"layout-page-filters\">\n              <A11ySkipTarget\n                anchor=\"projects_filters\"\n                label={translate('projects.skip_to_filters')}\n                weight={10}\n              />\n\n              <PageSidebar\n                applicationsEnabled={this.props.qualifiers.includes(ComponentQualifier.Application)}\n                facets={this.state.facets}\n                onClearAll={this.handleClearAll}\n                onQueryChange={this.updateLocationQuery}\n                organization={this.props.organization}\n                query={this.state.query}\n                view={this.getView()}\n                visualization={this.getVisualization()}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </ScreenPositionHelper>\n  );\n\n  renderHeader = () => (\n    <div className=\"layout-page-header-panel layout-page-main-header\">\n      <div className=\"layout-page-header-panel-inner layout-page-main-header-inner\">\n        <div className=\"layout-page-main-inner\">\n          <PageHeader\n            currentUser={this.props.currentUser}\n            isFavorite={this.props.isFavorite}\n            loading={this.state.loading}\n            onPerspectiveChange={this.handlePerspectiveChange}\n            onQueryChange={this.updateLocationQuery}\n            onSortChange={this.handleSortChange}\n            organization={this.props.organization}\n            projects={this.state.projects}\n            query={this.state.query}\n            selectedSort={this.getSort()}\n            total={this.state.total}\n            view={this.getView()}\n            visualization={this.getVisualization()}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  renderMain = () => {\n    if (this.state.loading && this.state.projects === undefined) {\n      return <DeferredSpinner />;\n    }\n\n    return this.getView() === 'visualizations' ? (\n      <div className=\"layout-page-main-inner\">\n        {this.state.projects && (\n          <Visualizations\n            displayOrganizations={false}\n            projects={this.state.projects}\n            sort={this.state.query.sort}\n            total={this.state.total}\n            visualization={this.getVisualization()}\n          />\n        )}\n      </div>\n    ) : (\n      <div className=\"layout-page-main-inner\">\n        {this.state.projects && (\n          <ProjectsList\n            cardType={this.getView()}\n            currentUser={this.props.currentUser}\n            handleFavorite={this.handleFavorite}\n            isFavorite={this.props.isFavorite}\n            isFiltered={hasFilterParams(this.state.query)}\n            organization={this.props.organization}\n            projects={this.state.projects}\n            query={this.state.query}\n          />\n        )}\n        <ListFooter\n          count={this.state.projects !== undefined ? this.state.projects.length : 0}\n          loading={this.state.loading}\n          loadMore={this.fetchMoreProjects}\n          ready={!this.state.loading}\n          total={this.state.total !== undefined ? this.state.total : 0}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"layout-page projects-page\" id=\"projects-page\">\n        <Suggestions suggestions=\"projects\" />\n        <Helmet defer={false} title={translate('projects.page')} />\n\n        {this.renderSide()}\n\n        <div className=\"layout-page-main\">\n          <A11ySkipTarget anchor=\"projects_main\" />\n\n          {this.renderHeader()}\n          {this.renderMain()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AllProjects);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoadComponent(() => import('./DocMarkdownBlock'), 'DocMarkdownBlock');\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nexport enum ComponentQualifier {\n  Application = 'APP',\n  Directory = 'DIR',\n  Developper = 'DEV',\n  File = 'FIL',\n  Portfolio = 'VW',\n  Project = 'TRK',\n  SubPortfolio = 'SVW',\n  SubProject = 'BRC',\n  TestFile = 'UTS'\n}\n\nexport function isPortfolioLike(componentQualifier?: string | ComponentQualifier) {\n  return (\n    !!componentQualifier &&\n    [ComponentQualifier.Portfolio.toString(), ComponentQualifier.SubPortfolio.toString()].includes(\n      componentQualifier\n    )\n  );\n}\n\nexport enum Visibility {\n  Public = 'public',\n  Private = 'private'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    if (start < end) {\n      newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    } else {\n      // When conditional tags are incorrectly used we log an error, strip them out and pass to the next pair of tags\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          `Documentation - incorrect usage of conditional formatting tags here: \"${newContent.substring(\n            end,\n            start + beginning.length\n          )}\"`\n        )\n      );\n      newContent =\n        newContent.substring(0, end) +\n        newContent.substring(end + ending.length, start) +\n        newContent.substring(start + beginning.length);\n    }\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getRatingTooltip as nextGetRatingTooltip, isDiffMetric } from '../../helpers/measures';\nimport { getLeakPeriod } from '../../helpers/periods';\n\nconst KNOWN_RATINGS = [\n  'sqale_rating',\n  'maintainability_rating', // Needed to provide the label for \"new_maintainability_rating\"\n  'reliability_rating',\n  'security_rating',\n  'security_review_rating'\n];\n\nexport function enhanceMeasure(measure: T.Measure, metrics: T.Dict<T.Metric>): T.MeasureEnhanced {\n  return {\n    ...measure,\n    metric: metrics[measure.metric],\n    leak: getLeakValue(measure)\n  };\n}\n\nexport function getLeakValue(measure: T.MeasureIntern | undefined): string | undefined {\n  if (!measure || !measure.periods) {\n    return undefined;\n  }\n  const period = getLeakPeriod(measure.periods);\n  return period && period.value;\n}\n\nexport function getRatingTooltip(metricKey: string, value: number): string | undefined {\n  const finalMetricKey = isDiffMetric(metricKey) ? metricKey.substr(4) : metricKey;\n  if (KNOWN_RATINGS.includes(finalMetricKey)) {\n    return nextGetRatingTooltip(finalMetricKey, value);\n  }\n  return undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRatingTooltip } from './utils';\n\ninterface Props {\n  className?: string;\n  decimals?: number | null;\n  metricKey: string;\n  metricType: string;\n  small?: boolean;\n  value: string | undefined;\n}\n\nexport default function Measure({\n  className,\n  decimals,\n  metricKey,\n  metricType,\n  small,\n  value\n}: Props) {\n  if (value === undefined) {\n    return <span className={className}>–</span>;\n  }\n\n  if (metricType === 'LEVEL') {\n    return <Level className={className} level={value} small={small} />;\n  }\n\n  if (metricType !== 'RATING') {\n    const formattedValue = formatMeasure(value, metricType, {\n      decimals,\n      omitExtraDecimalZeros: metricType === 'PERCENT'\n    });\n    return <span className={className}>{formattedValue != null ? formattedValue : '–'}</span>;\n  }\n\n  const tooltip = getRatingTooltip(metricKey, Number(value));\n  const rating = <Rating small={small} value={value} />;\n  if (tooltip) {\n    return (\n      <Tooltip overlay={tooltip}>\n        <span className={className}>{rating}</span>\n      </Tooltip>\n    );\n  }\n  return rating;\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { ApplicationPeriod } from '../types/application';\n\nfunction getPeriod<T extends T.Period | T.PeriodMeasure>(periods: T[] | undefined, index: number) {\n  if (!Array.isArray(periods)) {\n    return undefined;\n  }\n  return periods.find(period => period.index === index);\n}\n\nexport function getLeakPeriod<T extends T.Period | T.PeriodMeasure>(periods: T[] | undefined) {\n  return getPeriod(periods, 1);\n}\n\nexport function getPeriodLabel(\n  period: T.Period | undefined,\n  dateFormatter: (date: string) => string\n) {\n  if (!period) {\n    return undefined;\n  }\n\n  let parameter = period.modeParam || period.parameter || '';\n\n  switch (period.mode) {\n    case 'SPECIFIC_ANALYSIS':\n      parameter = dateFormatter(period.date);\n      break;\n    case 'PREVIOUS_VERSION':\n      parameter = parameter || dateFormatter(period.date);\n      break;\n    /*\n     * Handle legacy period modes, that predate MMF-1579\n     */\n    case 'previous_version':\n      if (!parameter) {\n        return translate('overview.period.previous_version_only_date');\n      }\n      break;\n    case 'date':\n      parameter = parameter && dateFormatter(parameter);\n      break;\n    case 'manual_baseline':\n      parameter = parameter || dateFormatter(period.date);\n      break;\n    default: // No change in the parameter\n  }\n\n  return translateWithParameters(`overview.period.${period.mode.toLowerCase()}`, parameter);\n}\n\nexport function getPeriodDate(period?: { date?: string }): Date | undefined {\n  return period && period.date ? parseDate(period.date) : undefined;\n}\n\nexport function isApplicationPeriod(\n  period: T.Period | ApplicationPeriod\n): period is ApplicationPeriod {\n  return (period as ApplicationPeriod).project !== undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\n\ninterface Props {\n  className?: string;\n  children: (position: { top: number; left: number }) => React.ReactElement<any>;\n}\n\nexport default class ScreenPositionHelper extends React.PureComponent<Props> {\n  container?: HTMLDivElement;\n  debouncedOnResize: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.debouncedOnResize = debounce(() => this.forceUpdate(), 250);\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    window.addEventListener('resize', this.debouncedOnResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.debouncedOnResize);\n  }\n\n  getPosition = () => {\n    const containerPos = this.container && this.container.getBoundingClientRect();\n    if (!containerPos) {\n      return { top: 0, left: 0 };\n    }\n    return {\n      top: window.pageYOffset + containerPos.top,\n      left: window.pageXOffset + containerPos.left\n    };\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        ref={container => (this.container = container as HTMLDivElement)}>\n        {this.props.children(this.getPosition())}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span\n      aria-label={translateWithParameters('tags_list_x', tags.join(', '))}\n      className={classNames('tags-list', className)}>\n      <TagsIcon className=\"text-middle\" />\n      <span aria-hidden={true} className=\"text-ellipsis text-middle\" title={tags.join(', ')}>\n        {tags.join(', ')}\n      </span>\n      {allowUpdate && <DropdownIcon className=\"text-middle\" />}\n    </span>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tags-list{white-space:nowrap;line-height:16px}.tags-list i:before{font-size:12px}.tags-list span{display:inline-block;vertical-align:middle;text-align:left;max-width:220px;padding-left:4px;padding-right:4px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { colors } from '../../app/theme';\n\nconst DonutChart = lazyLoadComponent(\n  () => import('sonar-ui-common/components/charts/DonutChart'),\n  'DonutChart'\n);\n\nconst SIZE_TO_WIDTH_MAPPING = { small: 16, normal: 24, big: 40, huge: 60 };\n\nconst SIZE_TO_THICKNESS_MAPPING = { small: 2, normal: 3, big: 3, huge: 4 };\n\nexport interface CoverageRatingProps {\n  muted?: boolean;\n  size?: 'small' | 'normal' | 'big' | 'huge';\n  value: number | string | null | undefined;\n}\n\nexport default function CoverageRating({\n  muted = false,\n  size = 'normal',\n  value\n}: CoverageRatingProps) {\n  let data = [{ value: 100, fill: '#ccc ' }];\n  let padAngle = 0;\n\n  if (value != null) {\n    const numberValue = Number(value);\n    data = [\n      { value: numberValue, fill: muted ? colors.gray71 : colors.green },\n      { value: 100 - numberValue, fill: muted ? colors.barBackgroundColor : colors.lineCoverageRed }\n    ];\n    if (numberValue !== 0 && numberValue < 100) {\n      padAngle = 0.1; // Same for all sizes, because it scales automatically\n    }\n  }\n\n  const width = SIZE_TO_WIDTH_MAPPING[size];\n  const thickness = SIZE_TO_THICKNESS_MAPPING[size];\n\n  return (\n    <DonutChart\n      data={data}\n      height={width}\n      padAngle={padAngle}\n      thickness={thickness}\n      width={width}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nclass HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const checked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const tooltip = checked ? translate('homepage.current') : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {checked ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={checked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={this.handleClick}>\n            <HomeIcon filled={checked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component &&\n    (a as any).organization === (b as any).organization\n  );\n}\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../node_modules/postcss-loader/src/index.js??postcss!./search-navigator.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".search-navigator.sticky .search-navigator-workspace-header{position:fixed;z-index:50;top:0;left:300px;right:0}.search-navigator.sticky .search-navigator-workspace-details,.search-navigator.sticky .search-navigator-workspace-list{padding-top:43px}.search-navigator-facet-box{background-color:#f3f3f3;font-size:13px}.search-navigator-facet-box.leak-facet-box{background-color:#fbf3d5;border:1px solid #f1e8cb}.search-navigator-facet-box.is-inner{margin-left:8px;padding-left:12px;border-left:1px solid #e6e6e6}.search-navigator-facet-box.is-inner .search-navigator-facet-header{padding-top:6px;padding-bottom:6px}.leak-facet-box:not(.hidden)+.leak-facet-box{border-top:none}.search-navigator-facet-box-forbidden{background-color:transparent;opacity:.5}.search-navigator-facet-box-forbidden .search-navigator-facet-container,.search-navigator-facet-box-forbidden .search-navigator-facet-empty,.search-navigator-facet-box-forbidden .search-navigator-facet-list{display:none}.search-navigator-facet-box-forbidden .search-navigator-facet-header{color:#777}.search-navigator-facet-box-forbidden .search-navigator-facet-header:hover{color:#4b9fd5}.search-navigator-facet-box-forbidden .search-navigator-facet-header{cursor:default}.search-navigator-facet-box-forbidden .search-navigator-facet-header:hover{color:#777}.search-navigator-facet{position:relative;display:inline-flex;justify-content:space-between;align-items:center;width:100%;height:24px;margin:0 0 1px;padding:0 6px;border:1px solid transparent;border-radius:2px;box-sizing:border-box;white-space:normal;opacity:.3;cursor:not-allowed;transition:none}a.search-navigator-facet{opacity:1;cursor:pointer}a.search-navigator-facet .facet-name{color:#444}.search-navigator-facet.active,a.search-navigator-facet:focus,a.search-navigator-facet:hover{border-color:#4b9fd5}.search-navigator-facet.facet-category{opacity:1;cursor:default}.search-navigator-facet.facet-category .facet-name{color:#777}.search-navigator-facet .facet-name{flex:1 1 auto;min-width:0;line-height:16px;padding:1px 0;color:#777;font-size:12px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.search-navigator-facet .facet-stat{display:flex;align-items:center;margin-left:8px;color:#777;font-size:12px}.search-navigator-facet .facet-toggle{display:none;float:left;height:16px;line-height:16px;margin-top:-1px;padding:0 5px;border-radius:2px;font-size:11px;text-transform:lowercase}.search-navigator-facet .facet-toggle:hover{color:#444}.search-navigator-facet .facet-toggle-active.facet-toggle-green{background-color:#0a0;color:#fff}.search-navigator-facet .facet-toggle-active.facet-toggle-red{background-color:#d4333f;color:#fff}.leak-facet-box .search-navigator-facet .facet-name,.leak-facet-box .search-navigator-facet .facet-stat{background-color:#fbf3d5}.leak-facet-box .search-navigator-facet .facet-stat:before{background-image:linear-gradient(90deg,rgba(251,243,213,0),#fbf3d5 75%)}.search-navigator-facet.active{background-color:#cae3f2;text-decoration:none}.search-navigator-facet.active .facet-toggle{display:inline}.search-navigator-facet.compare .facet-toggle{cursor:not-allowed;opacity:.5}.search-navigator-facet.compare .facet-toggle.facet-toggle-green{background-color:#0a0;color:#fff}.search-navigator-facet.compare .facet-toggle.facet-toggle-red{background-color:transparent;color:#777}.search-navigator-facet-half{width:45%}.search-navigator-facet-half:nth-child(odd){margin-right:10%}.search-navigator-facet-highlight-under-container{margin-bottom:1px}.search-navigator-facet-highlight-under-container .search-navigator-facet{margin-bottom:0}.search-navigator-facet-highlight-under-container .search-navigator-facet.active,.search-navigator-facet-highlight-under-container .search-navigator-facet:hover{border-bottom:none;padding-bottom:1px;border-radius:2px 2px 0 0}.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet,.search-navigator-facet-highlight-under-container .search-navigator-facet:hover~.search-navigator-facet{border-top:none;border-bottom:none;border-left-color:#4b9fd5;border-right-color:#4b9fd5;border-radius:0}.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet:last-of-type,.search-navigator-facet-highlight-under-container .search-navigator-facet:hover~.search-navigator-facet:last-of-type{border-bottom:1px solid #4b9fd5;border-radius:0 0 2px 2px}.search-navigator-facet-highlight-under-container .search-navigator-facet.active:last-of-type,.search-navigator-facet-highlight-under-container .search-navigator-facet:hover:last-of-type{border-bottom:1px solid #4b9fd5;border-radius:2px}.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet{background-color:#cae3f2;text-decoration:none}.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet .facet-toggle{display:inline}.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet:hover,.search-navigator-facet-highlight-under-container .search-navigator-facet:hover~.search-navigator-facet.active{border-top:1px solid #4b9fd5}.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet:hover,.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet:hover~.search-navigator-facet{background-color:#a1cde8;text-decoration:none}.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet:hover .facet-toggle,.search-navigator-facet-highlight-under-container .search-navigator-facet.active~.search-navigator-facet:hover~.search-navigator-facet .facet-toggle{display:inline}.search-navigator-facet-header{display:block;flex-shrink:0;padding:8px 0;color:#444;font-weight:600;overflow:hidden;white-space:nowrap}.search-navigator-facet-header>a{border-bottom:none;color:#444}.search-navigator-facet-header>a:focus,.search-navigator-facet-header>a:hover{color:#4b9fd5}.search-navigator-facet-header>.note{font-weight:400}.search-navigator-facet-header-value{display:block;overflow:hidden}.search-navigator-facet-header-value>.badge{display:block}.search-navigator-facet-header-button{flex-shrink:0;margin-left:auto}.search-navigator-facet-header-wrapper{display:flex;align-items:center}.search-navigator-facet-list{padding-bottom:8px;font-size:0}.search-navigator-facet-list-title{margin:0 8px 4px;font-size:12px;font-weight:700}.search-navigator-facet-list+.search-navigator-facet-list>.search-navigator-facet-list-title{border-top:1px solid #e6e6e6;padding-top:8px}.search-navigator-facet-empty{margin:0;padding:0 10px 10px;color:#444;font-size:12px;white-space:nowrap}.search-navigator-facet-footer{display:block;padding-bottom:8px;border-bottom:none}.search-navigator-facet-container{margin-top:6px;padding:0 10px 16px}.search-navigator-date-facet-selection{position:relative;padding-left:8px;font-size:12px}.search-navigator-date-facet-selection:after,.search-navigator-date-facet-selection:before{display:table;content:\\\"\\\";line-height:0}.search-navigator-date-facet-selection:after{clear:both}.search-navigator-date-facet-selection .date-input-control-input{width:115px!important}.search-navigator-date-facet-selection-dropdown-left{float:left;border-bottom:none}.search-navigator-date-facet-selection-dropdown-right{float:right;border-bottom:none}.search-navigator-date-facet-selection-input-left{position:absolute;left:0;width:100px;visibility:hidden}.search-navigator-date-facet-selection-input-right{position:absolute;right:0;width:100px;visibility:hidden}.search-navigator-date-facet-selection .date-input-control:not(:first-of-type) .date-input-calendar{left:auto;right:0}.search-navigator-filters{position:relative;padding:5px 10px;background-color:#f3f3f3}.search-navigator-filters:after,.search-navigator-filters:before{display:table;content:\\\"\\\";line-height:0}.search-navigator-filters:after{clear:both}.search-navigator-filters-header{margin-bottom:12px;padding-bottom:11px;border-bottom:1px solid #e6e6e6}.search-navigator-intro{width:500px;margin:0 auto;padding-top:100px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./EmptySearch.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport VisibleIcon from 'sonar-ui-common/components/icons/VisibleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../app/theme';\nimport { isCurrentUserMemberOf, isPaidOrganization } from '../../helpers/organizations';\nimport { isSonarCloud } from '../../helpers/system';\nimport {\n  getCurrentUser,\n  getMyOrganizations,\n  getOrganizationByKey,\n  Store\n} from '../../store/rootReducer';\nimport DocTooltip from '../docs/DocTooltip';\n\ninterface StateToProps {\n  currentUser: T.CurrentUser;\n  organization?: T.Organization;\n  userOrganizations: T.Organization[];\n}\n\ninterface OwnProps {\n  className?: string;\n  organization: T.Organization | string | undefined;\n  qualifier: string;\n  tooltipProps?: { projectKey: string };\n  visibility: T.Visibility;\n}\n\ninterface Props extends OwnProps, StateToProps {\n  organization: T.Organization | undefined;\n}\n\nexport function PrivacyBadge({\n  className,\n  currentUser,\n  organization,\n  qualifier,\n  userOrganizations,\n  tooltipProps,\n  visibility\n}: Props) {\n  const onSonarCloud = isSonarCloud();\n  if (\n    visibility !== 'private' &&\n    (!onSonarCloud || !isCurrentUserMemberOf(currentUser, organization, userOrganizations))\n  ) {\n    return null;\n  }\n\n  let icon = null;\n  if (isPaidOrganization(organization) && visibility === 'public') {\n    icon = <VisibleIcon className=\"little-spacer-right\" fill={colors.blue} />;\n  }\n\n  const badge = (\n    <div\n      className={classNames('badge', className, {\n        'badge-info': Boolean(icon)\n      })}>\n      {icon}\n      {translate('visibility', visibility)}\n    </div>\n  );\n\n  if (onSonarCloud && organization) {\n    return (\n      <DocTooltip\n        className={className}\n        doc={getDoc(visibility, icon, organization)}\n        overlayProps={{ ...tooltipProps, organization: organization.key }}>\n        {badge}\n      </DocTooltip>\n    );\n  }\n\n  return (\n    <Tooltip overlay={translate('visibility', visibility, 'description', qualifier)}>\n      {badge}\n    </Tooltip>\n  );\n}\n\nconst mapStateToProps = (state: Store, { organization }: OwnProps) => {\n  if (typeof organization === 'string') {\n    organization = getOrganizationByKey(state, organization);\n  }\n  return {\n    currentUser: getCurrentUser(state),\n    organization,\n    userOrganizations: getMyOrganizations(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrivacyBadge);\n\nfunction getDoc(visibility: T.Visibility, icon: JSX.Element | null, organization: T.Organization) {\n  let doc;\n  const { actions = {} } = organization;\n  if (visibility === 'private') {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-private.md');\n  } else if (icon) {\n    if (actions.admin) {\n      doc = import(\n        /* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-paid-org-admin.md'\n      );\n    } else {\n      doc = import(\n        /* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-paid-org.md'\n      );\n    }\n  } else if (actions.admin) {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-admin.md');\n  } else {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public.md');\n  }\n  return doc;\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./ColorBoxLegend.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { RATING_COLORS } from '../../helpers/constants';\nimport './ColorBoxLegend.css';\n\ninterface Props {\n  className?: string;\n}\n\nexport default function ColorRatingsLegend({ className }: Props) {\n  return (\n    <div className={classNames('color-box-legend', className)}>\n      {[1, 2, 3, 4, 5].map(rating => (\n        <div key={rating}>\n          <span\n            className=\"color-box-legend-rect\"\n            style={{ borderColor: RATING_COLORS[rating - 1] }}>\n            <span\n              className=\"color-box-legend-rect-inner\"\n              style={{ backgroundColor: RATING_COLORS[rating - 1] }}\n            />\n          </span>\n          {formatMeasure(rating, 'RATING')}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"sourceRoot":""}