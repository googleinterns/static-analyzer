{"version":3,"sources":["webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/components/common/CodeSnippet.css?463c","webpack:///./src/main/js/components/common/CodeSnippet.css","webpack:///./src/main/js/components/common/PrivacyBadgeContainer.tsx","webpack:///../sonar-docs/src/tooltips/project/visibility-private.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-paid-org-admin.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-paid-org.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-admin.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public.md","webpack:///./src/main/js/app/utils/isValidUri.ts","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/web-api.ts","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/api/projectLinks.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLink.tsx","webpack:///./src/main/js/api/notifications.ts","webpack:///./src/main/js/components/hoc/withNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css?8738","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css","webpack:///../sonar-docs/src/tooltips/branches/no-branch-support.md","webpack:///../sonar-docs/src/tooltips/branches/single-branch.md","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css?82fb","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css","webpack:///./src/main/js/app/components/nav/component/Menu.css?14a8","webpack:///./src/main/js/app/components/nav/component/Menu.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css?f7cf","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css?4563","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css?e00c","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLike.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItemList.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLikeMergeInformation.tsx","webpack:///./src/main/js/app/components/nav/component/Breadcrumb.tsx","webpack:///./src/main/js/app/components/nav/component/Header.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.tsx","webpack:///./src/main/js/app/components/nav/component/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/utils.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeButton.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeParams.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/ProjectBadges.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawerPage.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationPages.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/DrawerLink.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaKey.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLinks.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityGate.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityProfiles.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaSize.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTagsSelector.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTags.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationRenderer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/hoc/utils.ts","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/types/component.ts","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/api/rules.ts","webpack:///./src/main/js/components/tags/TagsList.css?d861","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/components/tags/TagsList.css","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/components/tags/TagsSelector.tsx","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/common/CodeSnippet.tsx","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/HomePageSelect.tsx","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/helpers/projectLinks.ts","webpack:///./src/main/js/components/shared/DrilldownLink.tsx"],"names":["getBranches","project","then","r","getPullRequests","deleteBranch","data","catch","deletePullRequest","renameBranch","name","excludeBranchFromPurge","projectKey","branchName","excluded","branch","value","ComponentContext","branchLike","undefined","component","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","getDoc","visibility","icon","organization","actions","admin","state","currentUser","userOrganizations","className","qualifier","tooltipProps","onSonarCloud","fill","blue","badge","Boolean","doc","overlayProps","key","overlay","url","test","status","level","small","fetchWebApi","showInternal","include_internals","fetchResponseExample","domain","action","controller","isEnabled","type","channel","this","props","notifications","find","notification","handleCheck","checked","onAdd","onRemove","getDispatcherLabel","dispatcher","globalMessageKey","projectMessageKey","render","channels","checkboxId","types","map","id","onCheck","getProjectLinks","deleteLink","linkId","createLink","expanded","handleClick","event","preventDefault","setState","handleCollapse","handleSelect","currentTarget","select","iconOnly","link","linkTitle","href","onClick","rel","target","title","readOnly","getNotifications","throwGlobalError","addNotification","removeNotification","withNotifications","WrappedComponent","mounted","globalTypes","loading","perProjectTypes","fetchNotifications","response","addNotificationToState","added","areNotificationsEqual","removeNotificationFromState","removed","filter","a","b","componentDidMount","componentWillUnmount","displayName","ComponentContainerNotFound","defaultTitle","defer","to","fetchIsValidLicense","isValidLicense","currentTask","errorType","Alert","display","variant","componentQualifier","Project","errorMessage","appState","canAdmin","withAppState","renderMessage","messageKey","canSeeBackgroundTasks","configuration","showBackgroundTasks","defaultMessage","values","currentTaskOnSameBranch","isInProgress","isPending","ALL","FAILED","pullRequest","pullRequestTitle","message","branchesEnabled","currentBranchLike","hasManyBranches","isApplication","Application","canAdminComponent","showSettings","BranchLikeIcon","plusIcon","size","DocTooltip","additionalIcon","indent","setSelectedNode","onSelect","selected","active","ref","BranchStatus","listNode","selectedNode","parent","smooth","branchLikeTree","hasResults","selectedBranchLike","renderItem","node","mainBranchTree","branchTree","tree","pullRequests","length","pr","parentlessPullRequests","orphanPullRequests","processBranchLikes","branchLikes","branchLikesToDisplay","reduce","prev","t","branchLikesToDisplayTree","openHighlightedBranchLike","handleOnSelect","highlightSiblingBranchlike","indexDelta","selectBranchLikeIndex","findIndex","newIndex","handleKeyDown","keyCode","Enter","UpArrow","DownArrow","handleSearchChange","query","q","toLowerCase","filteredBranchLikes","bl","includes","onClose","router","some","showManageLink","Dropdown","noPadding","autoFocus","onChange","onKeyDown","placeholder","pathname","withRouter","isMenuOpen","setIsMenuOpen","isMenuEnabled","currentBranchLikeElement","dropdown","onRequestClose","open","Breadcrumb","breadcrumbs","lastBreadcrumbElement","isNoMainBranch","breadcrumbElement","isFirst","isNotLast","Favorite","favorite","isFavorite","AnalysisWarningsModal","lazyLoadComponent","modal","blur","handleCloseModal","warnings","warningsCount","isABranch","currentPage","Portfolio","SubPortfolio","getCurrentPage","displayVersion","version","analysisDate","date","HomePageSelect","SETTINGS_URLS","getQuery","renderExtension","isAdmin","activeClassName","isProject","isDeveloper","Developper","isPortfolio","getConfiguration","renderDashboardLink","renderCodeLink","renderActivityLink","renderIssuesLink","resolved","renderComponentMeasuresLink","renderSecurityHotspotsLink","renderSecurityReports","extensions","extension","startsWith","renderAdministration","isSettingsActive","window","location","indexOf","adminLinks","renderAdministrationLinks","tagName","onToggleClick","renderSettingsLink","renderBranchesLink","renderBaselineLink","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderAdminExtensions","renderDeletionLink","renderProjectInformationButton","e","onToggleProjectInfo","role","tabIndex","showQualityProfiles","showQualityGates","showManualMeasures","showLinks","showPermissions","showUpdateKey","renderExtensions","withoutSecurityExtension","children","displayed","top","style","onKeydown","onClickOutside","BadgeType","getBadgeSnippet","getBadgeUrl","format","metric","label","projectUrl","marketing","measure","qualityGate","mdImage","color","width","alt","src","badgeMetrics","getColorOptions","getFormatOptions","getMetricOptions","metrics","handleColorChange","updateOptions","handleFormatChange","handleMetricChange","renderBadgeType","htmlFor","clearable","searchable","menuStyle","maxHeight","fetchBadgeMetrics","webservices","d","path","ws","w","param","params","p","possibleValues","selectedType","badgeOptions","alert_status","handleSelectBadge","handleUpdateOptions","fullBadgeOptions","CodeSnippet","isOneLine","snippet","InfoDrawerPage","onPageChange","ProjectInformationPages","projectNotifications","n","NotificationsList","MetaKey","componentKey","copyValue","loadLinks","links","componentDidUpdate","prevProps","orderedLinks","MetaLink","MetaQualityGate","isDefault","deprecatedByKey","loadDeprecatedRules","existingProfiles","profiles","requests","profile","loadDeprecatedRulesForProfile","Promise","all","responses","forEach","count","profileKey","activation","ps","qprofile","statuses","getDeprecatedRulesCount","renderProfile","languageFromStore","languages","language","languageName","inner","deleted","tooltip","headerClassName","MetaSize","measures","isApp","ncloc","projects","DrilldownLink","Number","searchResult","onSearch","Math","min","selectedTags","tags","tag","setProjectTags","onUnselect","availableTags","TagsSelector","listSize","canUpdateTags","getPopupPos","eltPos","containerPos","height","right","setTags","application","join","handleSetProjectTags","onComponentChange","card","closeOnClick","closeOnClickOutside","overlayPlacement","BottomLeft","innerRef","tagsList","stopPropagation","TagsList","allowUpdate","canConfigureNotifications","canUseBadges","PrivacyBadgeContainer","description","qualityProfiles","badges","page","main","setPage","loadMeasures","metricKeys","fetchMetrics","mapDispatchToProps","ComponentNav","notifComponent","contextNavHeightRaw","globalNavHeightRaw","displayProjectInfo","setDisplayProjectInfo","RecentHistory","add","contextNavHeight","notif","addQualifier","fetchBranches","breadcrumb","resolve","branches","getCurrentBranchLike","registerBranchStatuses","fetchStatus","current","queue","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","currentTaskChanged","progressChanged","clearTimeout","watchStatusTimer","setTimeout","fetchComponent","fetchWarnings","isSameBranch","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","nav","componentWithQualifier","match","replace","requireAuthorization","Provider","onBranchesChange","fetchOrganization","getWrappedDisplayName","hocName","DocMarkdownBlock","childProps","isTooltip","ComponentQualifier","Visibility","isPortfolioLike","toString","getFrontMatterPosition","lines","firstLine","lastLine","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","beginning","ending","newContent","start","end","substring","console","error","Error","getFrontMatter","position","slice","separateFrontMatter","frontmatter","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","RegExp","getRulesApp","searchRules","takeFacet","property","facet","facets","getRuleDetails","parameters","getRuleTags","createRule","reject","deleteRule","updateRule","Wrapper","MultiSelectOption","custom","disabled","element","onHover","renderLabel","onFocus","onMouseOver","onSelectChange","handleSelectChange","item","onSelectItem","onUnselectItem","onSearchQuery","validateSearchInput","handleElementHover","prevState","activeIdx","getAllElements","handleKeyboard","evt","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","selectedElements","elements","updateSelectedElements","filterSelected","updateUnselectedElements","unselectedElements","setElementActive","idx","allElements","container","addEventListener","componentWillReceiveProps","nextProps","totalElements","searchInput","focus","removeEventListener","allowSelection","allowNewElements","footerNode","activeElement","showNewElement","infiniteList","listClasses","div","defaultProps","STATUSES","ALL_EXCEPT_PENDING","PENDING","IN_PROGRESS","SUCCESS","CANCELED","ALL_TYPES","CURRENTS","ONLY_CURRENTS","DEFAULT_FILTERS","taskType","currents","minSubmittedAt","maxExecutedAt","DEBOUNCE_DELAY","isPaidOrganization","subscription","hasPrivateAccess","isCurrentUserMemberOf","org","validateTag","toggleFavorite","newFavorite","handleFavorite","_prevProps","noCopy","wrap","snippetArray","Array","isArray","line","finalSnippet","getAnalysisStatus","getActivity","getStatus","componentId","Object","assign","getTask","additionalFields","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","getWorkers","setWorkerCount","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","addFavorite","removeFavorite","setHomePage","homepage","filled","PROVIDED_TYPES","isProvided","orderLinks","provided","unknown","getLinkName","ISSUE_MEASURES","issueParamsPerMetric","blocker_violations","severities","new_blocker_violations","critical_violations","new_critical_violations","major_violations","new_major_violations","minor_violations","new_minor_violations","info_violations","new_info_violations","open_issues","reopened_issues","confirmed_issues","false_positive_issues","resolutions","code_smells","new_code_smells","bugs","new_bugs","vulnerabilities","new_vulnerabilities","isIssueMeasure","propsToIssueParams","sinceLeakPeriod","listView"],"mappings":"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","file":"js/299.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Branch, PullRequest } from '../types/branch-like';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n\nexport function excludeBranchFromPurge(projectKey: string, branchName: string, excluded: boolean) {\n  return post('/api/project_branches/set_automatic_deletion_protection', {\n    project: projectKey,\n    branch: branchName,\n    value: excluded\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".code-snippet{position:relative;margin:8px 0;background:#404040;color:#f0f0f0;border-radius:3px}.code-snippet pre{padding:16px;overflow:auto}.code-snippet>button{position:absolute;top:16px;right:16px;line-height:18px;border:1px solid #fff;color:#fff;font-size:11px;font-weight:400;-webkit-user-select:none;-ms-user-select:none;user-select:none}.code-snippet>button:active,.code-snippet>button:focus,.code-snippet>button:hover{background-color:#fff;color:#404040}.code-snippet-oneline pre{padding-bottom:40px}.code-snippet-oneline>button{top:auto;bottom:16px}.code-snippet-wrap pre{white-space:pre-wrap;word-break:break-all}.code-snippet .highlight{font-weight:700;color:#f4b1b0}.code-snippet .button-icon{color:#fff!important}.code-snippet .button-icon:active svg,.code-snippet .button-icon:focus svg,.code-snippet .button-icon:hover svg{background-color:#fff;color:#404040}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport VisibleIcon from 'sonar-ui-common/components/icons/VisibleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../app/theme';\nimport { isCurrentUserMemberOf, isPaidOrganization } from '../../helpers/organizations';\nimport { isSonarCloud } from '../../helpers/system';\nimport {\n  getCurrentUser,\n  getMyOrganizations,\n  getOrganizationByKey,\n  Store\n} from '../../store/rootReducer';\nimport DocTooltip from '../docs/DocTooltip';\n\ninterface StateToProps {\n  currentUser: T.CurrentUser;\n  organization?: T.Organization;\n  userOrganizations: T.Organization[];\n}\n\ninterface OwnProps {\n  className?: string;\n  organization: T.Organization | string | undefined;\n  qualifier: string;\n  tooltipProps?: { projectKey: string };\n  visibility: T.Visibility;\n}\n\ninterface Props extends OwnProps, StateToProps {\n  organization: T.Organization | undefined;\n}\n\nexport function PrivacyBadge({\n  className,\n  currentUser,\n  organization,\n  qualifier,\n  userOrganizations,\n  tooltipProps,\n  visibility\n}: Props) {\n  const onSonarCloud = isSonarCloud();\n  if (\n    visibility !== 'private' &&\n    (!onSonarCloud || !isCurrentUserMemberOf(currentUser, organization, userOrganizations))\n  ) {\n    return null;\n  }\n\n  let icon = null;\n  if (isPaidOrganization(organization) && visibility === 'public') {\n    icon = <VisibleIcon className=\"little-spacer-right\" fill={colors.blue} />;\n  }\n\n  const badge = (\n    <div\n      className={classNames('badge', className, {\n        'badge-info': Boolean(icon)\n      })}>\n      {icon}\n      {translate('visibility', visibility)}\n    </div>\n  );\n\n  if (onSonarCloud && organization) {\n    return (\n      <DocTooltip\n        className={className}\n        doc={getDoc(visibility, icon, organization)}\n        overlayProps={{ ...tooltipProps, organization: organization.key }}>\n        {badge}\n      </DocTooltip>\n    );\n  }\n\n  return (\n    <Tooltip overlay={translate('visibility', visibility, 'description', qualifier)}>\n      {badge}\n    </Tooltip>\n  );\n}\n\nconst mapStateToProps = (state: Store, { organization }: OwnProps) => {\n  if (typeof organization === 'string') {\n    organization = getOrganizationByKey(state, organization);\n  }\n  return {\n    currentUser: getCurrentUser(state),\n    organization,\n    userOrganizations: getMyOrganizations(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrivacyBadge);\n\nfunction getDoc(visibility: T.Visibility, icon: JSX.Element | null, organization: T.Organization) {\n  let doc;\n  const { actions = {} } = organization;\n  if (visibility === 'private') {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-private.md');\n  } else if (icon) {\n    if (actions.admin) {\n      doc = import(\n        /* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-paid-org-admin.md'\n      );\n    } else {\n      doc = import(\n        /* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-paid-org.md'\n      );\n    }\n  } else if (actions.admin) {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-admin.md');\n  } else {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public.md');\n  }\n  return doc;\n}\n","export default \"This project is private. Only the members of this organization are able to browse it and its source code.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Go to your project's [Administration > Permissions](/#sonarcloud#/project_roles?id=#projectKey#) to make it private.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Contact the project administrator to make it private.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Subscribe to a paid plan to get unlimited private projects in [Administration > Billing](/#sonarcloud#/organizations/#organization#/extension/billing/billing).\\n\\n---\\n\\nSee also: [Pricing](/sonarcloud-pricing/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Contact the organization administrator if you want to make it private.\\n\\n---\\n\\nSee also: [Pricing](/sonarcloud-pricing/)\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isWebUri } from 'valid-url';\n\nexport default function(url: string): boolean {\n  return /^(\\/|scm:)/.test(url) || !!isWebUri(url);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { getBranchStatusByBranchLike, Store } from '../../store/rootReducer';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface Props {\n  branchLike: BranchLike;\n  component: string;\n  status?: string;\n}\n\nexport function BranchStatus({ status }: Props) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, { branchLike, component }: Props) => {\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\ninterface RawDomain {\n  actions: T.WebApi.Action[];\n  deprecatedSince?: string;\n  description: string;\n  internal: boolean;\n  path: string;\n  since?: string;\n}\n\nexport function fetchWebApi(showInternal = true): Promise<RawDomain[]> {\n  return getJSON('/api/webservices/list', { include_internals: showInternal })\n    .then(r => r.webServices)\n    .catch(throwGlobalError);\n}\n\nexport function fetchResponseExample(domain: string, action: string): Promise<T.WebApi.Example> {\n  return getJSON('/api/webservices/response_example', { controller: domain, action }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectLinks(projectKey: string): Promise<T.ProjectLink[]> {\n  return getJSON('/api/project_links/search', { projectKey }).then(r => r.links, throwGlobalError);\n}\n\nexport function deleteLink(linkId: string) {\n  return post('/api/project_links/delete', { id: linkId }).catch(throwGlobalError);\n}\n\nexport function createLink(data: {\n  name: string;\n  projectKey: string;\n  url: string;\n}): Promise<T.ProjectLink> {\n  return postJSON('/api/project_links/create', data).then(r => r.link, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectLinkIcon from 'sonar-ui-common/components/icons/ProjectLinkIcon';\nimport { getLinkName } from '../../../../../../helpers/projectLinks';\nimport isValidUri from '../../../../../utils/isValidUri';\n\ninterface Props {\n  iconOnly?: boolean;\n  link: T.ProjectLink;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class MetaLink extends React.PureComponent<Props, State> {\n  state = { expanded: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState(({ expanded }) => ({ expanded: !expanded }));\n  };\n\n  handleCollapse = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleSelect = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.select();\n  };\n\n  render() {\n    const { iconOnly, link } = this.props;\n    const linkTitle = getLinkName(link);\n    return (\n      <li>\n        <a\n          className=\"link-with-icon\"\n          href={link.url}\n          onClick={!isValidUri(link.url) ? this.handleClick : undefined}\n          rel=\"nofollow noreferrer noopener\"\n          target=\"_blank\"\n          title={linkTitle}>\n          <ProjectLinkIcon className=\"little-spacer-right\" type={link.type} />\n          {!iconOnly && linkTitle}\n        </a>\n        {this.state.expanded && (\n          <div className=\"little-spacer-top display-flex-center\">\n            <input\n              className=\"overview-key width-80\"\n              onClick={this.handleSelect}\n              readOnly={true}\n              type=\"text\"\n              value={link.url}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.handleCollapse} />\n          </div>\n        )}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqWith } from 'lodash';\nimport * as React from 'react';\nimport { addNotification, getNotifications, removeNotification } from '../../api/notifications';\nimport { getWrappedDisplayName } from './utils';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport interface WithNotificationsProps {\n  addNotification: (added: T.Notification) => void;\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n  removeNotification: (removed: T.Notification) => void;\n}\n\nexport function withNotifications<P>(\n  WrappedComponent: React.ComponentType<P & WithNotificationsProps>\n) {\n  class Wrapper extends React.Component<P, State> {\n    mounted = false;\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withNotifications');\n\n    state: State = {\n      channels: [],\n      globalTypes: [],\n      loading: true,\n      notifications: [],\n      perProjectTypes: []\n    };\n\n    componentDidMount() {\n      this.mounted = true;\n      this.fetchNotifications();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n\n    fetchNotifications = () => {\n      getNotifications().then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              channels: response.channels,\n              globalTypes: response.globalTypes,\n              loading: false,\n              notifications: response.notifications,\n              perProjectTypes: response.perProjectTypes\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    };\n\n    addNotificationToState = (added: T.Notification) => {\n      this.setState(state => {\n        const notifications = uniqWith([...state.notifications, added], this.areNotificationsEqual);\n        return { notifications };\n      });\n    };\n\n    removeNotificationFromState = (removed: T.Notification) => {\n      this.setState(state => {\n        const notifications = state.notifications.filter(\n          notification => !this.areNotificationsEqual(notification, removed)\n        );\n        return { notifications };\n      });\n    };\n\n    addNotification = (added: T.Notification) => {\n      // optimistic update\n      this.addNotificationToState(added);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: added.channel, project: added.project, type: added.type };\n      addNotification(data).catch(() => {\n        this.removeNotificationFromState(added);\n      });\n    };\n\n    removeNotification = (removed: T.Notification) => {\n      // optimistic update\n      this.removeNotificationFromState(removed);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: removed.channel, project: removed.project, type: removed.type };\n      removeNotification(data).catch(() => {\n        this.addNotificationToState(removed);\n      });\n    };\n\n    areNotificationsEqual = (a: T.Notification, b: T.Notification) => {\n      return a.channel === b.channel && a.type === b.type && a.project === b.project;\n    };\n\n    render() {\n      const { channels, globalTypes, loading, notifications, perProjectTypes } = this.state;\n      return (\n        <WrappedComponent\n          {...this.props}\n          addNotification={this.addNotification}\n          channels={channels}\n          globalTypes={globalTypes}\n          loading={loading}\n          notifications={notifications}\n          perProjectTypes={perProjectTypes}\n          removeNotification={this.removeNotification}\n        />\n      );\n    }\n  }\n\n  return Wrapper;\n}\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".branch-like-navigation-toggler-container .popup{min-width:430px;max-width:650px}.branch-like-navigation-menu .search-box-container{padding:8px}.branch-like-navigation-menu .search-box-container .search-box,.branch-like-navigation-menu .search-box-container .search-box-input{max-width:none!important}.branch-like-navigation-menu .item-list{padding-bottom:8px;max-height:300px;overflow-y:auto}.branch-like-navigation-menu .item{padding:4px 8px}.branch-like-navigation-menu .item.header{color:#777}.branch-like-navigation-menu .item:not(.header).active,.branch-like-navigation-menu .item:not(.header):hover{background-color:#f3f3f3;cursor:pointer}.branch-like-navigation-menu .hint-container{padding:8px;background-color:#f3f3f3;border-top:1px solid #e6e6e6}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export default \"**Get the most out of SonarQube with branches analysis**\\n\\nAnalyze each branch of your project separately with the Developer Edition.\\n\\n---\\n\\n[Learn More](https://redirect.sonarsource.com/editions/developer.html)\\n\"","export default \"**Learn how to analyze branches in {instance}**\\n\\nQuickly setup branch analysis and get separate insights for each of your branches and pull requests.\\n\\n---\\n\\n[Branches Documentation](/branches/overview/)  \\n[Pull Request Analysis](/analysis/pull-request/)\\n\"","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".header-meta-warnings .alert{margin-bottom:0}.header-meta-warnings .alert-content{padding:6px 8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-tabs>li>a.menu-button{color:#236a97}.navbar-tabs>li>a.menu-button:hover{color:#4b9fd5;border-bottom-color:transparent}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-inner-with-notif .info-drawer{border-top:1px solid #e6e6e6}.info-drawer-pane{background-color:#fff;right:-380px;width:380px;transition:right .3s ease-in-out;border-left:1px solid #e6e6e6;box-sizing:border-box}.info-drawer-pane.open{right:0}.info-drawer{position:fixed;bottom:0;z-index:51}.info-drawer .close-button{position:absolute;top:0;right:0;background:#fff;padding:16px;z-index:2}.info-drawer .back-button{cursor:pointer}.info-drawer .back-button:hover{color:#4b9fd5}.info-drawer-page{position:absolute;top:0;bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".badges-list{display:flex;justify-content:space-around;justify-content:space-evenly;flex-wrap:nowrap}.button.badge-button{display:flex;justify-content:center;padding:8px;min-width:146px;height:116px;background-color:#f3f3f3;border:1px solid #e6e6e6;border-radius:3px;transition:all .3s ease}.button.badge-button:active,.button.badge-button:focus,.button.badge-button:hover{background-color:#f3f3f3;border-color:#4b9fd5;box-shadow:none}.button.badge-button.selected{background-color:#cae3f2;border-color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".project-info-list>li{padding-left:1px;padding-bottom:4px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-info-tags{position:relative}.project-info-deleted-profile,.project-info-deprecated-rules{margin:4px -6px;padding:3px 6px!important;border:1px solid #f4b1b0;border-radius:3px;background-color:#f2dede}.project-info-deleted-profile a,.project-info-deprecated-rules a{color:#0e516f;border-color:darken(#cae3f2)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ComponentQualifier } from '../../../../types/component';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: T.Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translateWithParameters(\n            'component_navigation.status.last_blocked_due_to_bad_license_X',\n            translate('qualifier', currentTask.componentQualifier || ComponentQualifier.Project)\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\n\ninterface Props {\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport default class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component, currentTask } = this.props;\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n\n    let type;\n    if (currentTask && hasMessage('background_task.type', currentTask.type)) {\n      messageKey += '_X';\n      type = translate('background_task.type', currentTask.type);\n    }\n\n    let url;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n      url = (\n        <Link to={getComponentBackgroundTaskUrl(component.key, status)}>\n          {translate('background_tasks.page')}\n        </Link>\n      );\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url, type }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === STATUSES.FAILED) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport PlusCircleIcon from 'sonar-ui-common/components/icons/PlusCircleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../../../components/docs/DocTooltip';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName } from '../../../../../helpers/branch-like';\nimport { getPortfolioAdminUrl } from '../../../../../helpers/urls';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { colors } from '../../../../theme';\n\nexport interface CurrentBranchLikeProps {\n  branchesEnabled: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  hasManyBranches: boolean;\n}\n\nexport function CurrentBranchLike(props: CurrentBranchLikeProps) {\n  const {\n    branchesEnabled,\n    component,\n    component: { configuration },\n    currentBranchLike,\n    hasManyBranches\n  } = props;\n\n  const displayName = getBranchLikeDisplayName(currentBranchLike);\n  const isApplication = component.qualifier === ComponentQualifier.Application;\n  const canAdminComponent = configuration && configuration.showSettings;\n\n  const additionalIcon = () => {\n    const plusIcon = <PlusCircleIcon fill={colors.blue} size={12} />;\n\n    if (branchesEnabled && hasManyBranches) {\n      return <DropdownIcon />;\n    }\n\n    if (isApplication) {\n      if (!hasManyBranches && canAdminComponent) {\n        return (\n          <HelpTooltip\n            overlay={\n              <>\n                <p>{translate('application.branches.help')}</p>\n                <hr className=\"spacer-top spacer-bottom\" />\n                <Link to={getPortfolioAdminUrl(component.key, component.qualifier)}>\n                  {translate('application.branches.link')}\n                </Link>\n              </>\n            }>\n            {plusIcon}\n          </HelpTooltip>\n        );\n      }\n    } else {\n      if (!branchesEnabled) {\n        return (\n          <DocTooltip\n            data-test=\"branches-support-disabled\"\n            doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/no-branch-support.md')}>\n            {plusIcon}\n          </DocTooltip>\n        );\n      }\n\n      if (!hasManyBranches) {\n        return (\n          <DocTooltip\n            data-test=\"only-one-branch-like\"\n            doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/single-branch.md')}>\n            {plusIcon}\n          </DocTooltip>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  return (\n    <span className=\"display-flex-center flex-shrink text-ellipsis\">\n      <BranchLikeIcon branchLike={currentBranchLike} />\n      <span\n        className=\"spacer-left spacer-right flex-shrink text-ellipsis js-branch-like-name\"\n        title={displayName}>\n        {displayName}\n      </span>\n      {additionalIcon()}\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLike);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../../components/common/BranchStatus';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName, isMainBranch } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface MenuItemProps {\n  branchLike: BranchLike;\n  component: T.Component;\n  indent?: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selected: boolean;\n  setSelectedNode?: (node: HTMLLIElement) => void;\n}\n\nexport function MenuItem(props: MenuItemProps) {\n  const { branchLike, component, indent, setSelectedNode, onSelect, selected } = props;\n  const displayName = getBranchLikeDisplayName(branchLike);\n\n  return (\n    <li\n      className={classNames('item', {\n        active: selected\n      })}\n      onClick={() => onSelect(branchLike)}\n      ref={selected ? setSelectedNode : undefined}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between', {\n          'big-spacer-left': indent\n        })}>\n        <div className=\"item-name text-ellipsis\" title={displayName}>\n          <BranchLikeIcon branchLike={branchLike} />\n          <span className=\"spacer-left\">{displayName}</span>\n          {isMainBranch(branchLike) && (\n            <span className=\"badge spacer-left\">{translate('branches.main_branch')}</span>\n          )}\n        </div>\n        <div className=\"spacer-left\">\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default React.memo(MenuItem);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getBranchLikeKey, isSameBranchLike } from '../../../../../helpers/branch-like';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport MenuItem from './MenuItem';\n\nexport interface MenuItemListProps {\n  branchLikeTree: BranchLikeTree;\n  component: T.Component;\n  hasResults: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport function MenuItemList(props: MenuItemListProps) {\n  let listNode: HTMLUListElement | null = null;\n  let selectedNode: HTMLLIElement | null = null;\n\n  React.useEffect(() => {\n    if (listNode && selectedNode) {\n      scrollToElement(selectedNode, { parent: listNode, smooth: false });\n    }\n  });\n\n  const { branchLikeTree, component, hasResults, onSelect, selectedBranchLike } = props;\n\n  const renderItem = (branchLike: BranchLike, indent?: boolean) => (\n    <MenuItem\n      branchLike={branchLike}\n      component={component}\n      indent={indent}\n      key={getBranchLikeKey(branchLike)}\n      onSelect={onSelect}\n      selected={isSameBranchLike(branchLike, selectedBranchLike)}\n      setSelectedNode={node => (selectedNode = node)}\n    />\n  );\n\n  return (\n    <ul className=\"item-list\" ref={node => (listNode = node)}>\n      {!hasResults && (\n        <li className=\"item\">\n          <span className=\"note\">{translate('no_results')}</span>\n        </li>\n      )}\n\n      {/* BRANCHES & PR */}\n      {[branchLikeTree.mainBranchTree, ...branchLikeTree.branchTree].filter(isDefined).map(tree => (\n        <React.Fragment key={getBranchLikeKey(tree.branch)}>\n          {renderItem(tree.branch)}\n          {tree.pullRequests.length > 0 && (\n            <>\n              <li className=\"item header\">\n                <span className=\"big-spacer-left\">\n                  {translate('branch_like_navigation.pull_requests')}\n                </span>\n              </li>\n              {tree.pullRequests.map(pr => renderItem(pr, true))}\n            </>\n          )}\n          <hr />\n        </React.Fragment>\n      ))}\n\n      {/* PARENTLESS PR (for display during search) */}\n      {branchLikeTree.parentlessPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">{translate('branch_like_navigation.pull_requests')}</li>\n          {branchLikeTree.parentlessPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n\n      {/* ORPHAN PR */}\n      {branchLikeTree.orphanPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">\n            {translate('branch_like_navigation.orphan_pull_requests')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('branch_like_navigation.orphan_pull_requests.tooltip')}\n            />\n          </li>\n          {branchLikeTree.orphanPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n    </ul>\n  );\n}\n\nexport default React.memo(MenuItemList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { KeyCodes } from 'sonar-ui-common/helpers/keycodes';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../../../components/hoc/withRouter';\nimport {\n  getBrancheLikesAsTree,\n  isBranch,\n  isPullRequest,\n  isSameBranchLike\n} from '../../../../../helpers/branch-like';\nimport { getBranchLikeUrl } from '../../../../../helpers/urls';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport MenuItemList from './MenuItemList';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdminComponent?: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  branchLikesToDisplay: BranchLike[];\n  branchLikesToDisplayTree: BranchLikeTree;\n  query: string;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport class Menu extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let selectedBranchLike = undefined;\n\n    if (props.branchLikes.some(b => isSameBranchLike(b, props.currentBranchLike))) {\n      selectedBranchLike = props.currentBranchLike;\n    } else if (props.branchLikes.length > 0) {\n      selectedBranchLike = props.branchLikes[0];\n    }\n\n    this.state = {\n      query: '',\n      selectedBranchLike,\n      ...this.processBranchLikes(props.branchLikes)\n    };\n  }\n\n  processBranchLikes = (branchLikes: BranchLike[]) => {\n    const tree = getBrancheLikesAsTree(branchLikes);\n    return {\n      branchLikesToDisplay: [\n        ...(tree.mainBranchTree\n          ? [tree.mainBranchTree.branch, ...tree.mainBranchTree.pullRequests]\n          : []),\n        ...tree.branchTree.reduce((prev, t) => [...prev, t.branch, ...t.pullRequests], []),\n        ...tree.parentlessPullRequests,\n        ...tree.orphanPullRequests\n      ],\n      branchLikesToDisplayTree: tree\n    };\n  };\n\n  openHighlightedBranchLike = () => {\n    if (this.state.selectedBranchLike) {\n      this.handleOnSelect(this.state.selectedBranchLike);\n    }\n  };\n\n  highlightSiblingBranchlike = (indexDelta: number) => {\n    const selectBranchLikeIndex = this.state.branchLikesToDisplay.findIndex(b =>\n      isSameBranchLike(b, this.state.selectedBranchLike)\n    );\n    const newIndex = selectBranchLikeIndex + indexDelta;\n\n    if (\n      selectBranchLikeIndex !== -1 &&\n      newIndex >= 0 &&\n      newIndex < this.state.branchLikesToDisplay.length\n    ) {\n      this.setState(({ branchLikesToDisplay }) => ({\n        selectedBranchLike: branchLikesToDisplay[newIndex]\n      }));\n    }\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.preventDefault();\n        this.openHighlightedBranchLike();\n        break;\n      case KeyCodes.UpArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(-1);\n        break;\n      case KeyCodes.DownArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(+1);\n        break;\n    }\n  };\n\n  handleSearchChange = (query: string) => {\n    const q = query.toLowerCase();\n\n    const filterBranch = (branch: BranchLike) =>\n      isBranch(branch) && branch.name.toLowerCase().includes(q);\n    const filterPullRequest = (pr: BranchLike) =>\n      isPullRequest(pr) && (pr.title.toLowerCase().includes(q) || pr.key.toLowerCase().includes(q));\n\n    const filteredBranchLikes = this.props.branchLikes.filter(\n      bl => filterBranch(bl) || filterPullRequest(bl)\n    );\n\n    this.setState({\n      query: q,\n      selectedBranchLike: filteredBranchLikes.length > 0 ? filteredBranchLikes[0] : undefined,\n      ...this.processBranchLikes(filteredBranchLikes)\n    });\n  };\n\n  handleOnSelect = (branchLike: BranchLike) => {\n    this.setState({ selectedBranchLike: branchLike }, () => {\n      this.props.onClose();\n      this.props.router.push(getBranchLikeUrl(this.props.component.key, branchLike));\n    });\n  };\n\n  render() {\n    const { canAdminComponent, component, onClose } = this.props;\n    const {\n      branchLikesToDisplay,\n      branchLikesToDisplayTree,\n      query,\n      selectedBranchLike\n    } = this.state;\n\n    const showManageLink = component.qualifier === ComponentQualifier.Project && canAdminComponent;\n    const hasResults = branchLikesToDisplay.length > 0;\n\n    return (\n      <DropdownOverlay className=\"branch-like-navigation-menu\" noPadding={true}>\n        <div className=\"search-box-container\">\n          <SearchBox\n            autoFocus={true}\n            onChange={this.handleSearchChange}\n            onKeyDown={this.handleKeyDown}\n            placeholder={translate('branch_like_navigation.search_for_branch_like')}\n            value={query}\n          />\n        </div>\n\n        <div className=\"item-list-container\">\n          <MenuItemList\n            branchLikeTree={branchLikesToDisplayTree}\n            component={component}\n            hasResults={hasResults}\n            onSelect={this.handleOnSelect}\n            selectedBranchLike={selectedBranchLike}\n          />\n        </div>\n\n        {showManageLink && (\n          <div className=\"hint-container text-right\">\n            <Link\n              onClick={() => onClose()}\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branch_like_navigation.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Toggler from 'sonar-ui-common/components/controls/Toggler';\nimport { withAppState } from '../../../../../components/hoc/withAppState';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport './BranchLikeNavigation.css';\nimport CurrentBranchLike from './CurrentBranchLike';\nimport Menu from './Menu';\n\nexport interface BranchLikeNavigationProps {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike;\n}\n\nexport function BranchLikeNavigation(props: BranchLikeNavigationProps) {\n  const {\n    appState: { branchesEnabled },\n    branchLikes,\n    component,\n    component: { configuration },\n    currentBranchLike\n  } = props;\n\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const canAdminComponent = configuration && configuration.showSettings;\n  const hasManyBranches = branchLikes.length >= 2;\n  const isMenuEnabled = branchesEnabled && hasManyBranches;\n\n  const currentBranchLikeElement = (\n    <CurrentBranchLike\n      branchesEnabled={Boolean(branchesEnabled)}\n      component={component}\n      currentBranchLike={currentBranchLike}\n      hasManyBranches={hasManyBranches}\n    />\n  );\n\n  return (\n    <span\n      className={classNames('big-spacer-left flex-0 branch-like-navigation-toggler-container', {\n        dropdown: isMenuEnabled\n      })}>\n      {isMenuEnabled ? (\n        <Toggler\n          onRequestClose={() => setIsMenuOpen(false)}\n          open={isMenuOpen}\n          overlay={\n            <Menu\n              branchLikes={branchLikes}\n              canAdminComponent={canAdminComponent}\n              component={component}\n              currentBranchLike={currentBranchLike}\n              onClose={() => setIsMenuOpen(false)}\n            />\n          }>\n          <a\n            className=\"link-base-color link-no-underline\"\n            href=\"#\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            {currentBranchLikeElement}\n          </a>\n        </Toggler>\n      ) : (\n        currentBranchLikeElement\n      )}\n    </span>\n  );\n}\n\nexport default withAppState(React.memo(BranchLikeNavigation));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPullRequest } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface CurrentBranchLikeMergeInformationProps {\n  currentBranchLike: BranchLike;\n}\n\nexport function CurrentBranchLikeMergeInformation(props: CurrentBranchLikeMergeInformationProps) {\n  const { currentBranchLike } = props;\n\n  if (!isPullRequest(currentBranchLike)) {\n    return null;\n  }\n\n  return (\n    <span className=\"big-spacer-left flex-shrink note text-ellipsis\">\n      <FormattedMessage\n        defaultMessage={translate('branch_like_navigation.for_merge_into_x_from_y')}\n        id=\"branch_like_navigation.for_merge_into_x_from_y\"\n        values={{\n          target: <strong>{currentBranchLike.target}</strong>,\n          branch: <strong>{currentBranchLike.branch}</strong>\n        }}\n      />\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLikeMergeInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { last } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { isMainBranch } from '../../../../helpers/branch-like';\nimport { getProjectUrl } from '../../../../helpers/urls';\nimport { BranchLike } from '../../../../types/branch-like';\n\ninterface Props {\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n}\n\nexport function Breadcrumb(props: Props) {\n  const {\n    component: { breadcrumbs },\n    currentBranchLike\n  } = props;\n  const lastBreadcrumbElement = last(breadcrumbs);\n  const isNoMainBranch = currentBranchLike && !isMainBranch(currentBranchLike);\n\n  return (\n    <div className=\"big flex-shrink display-flex-center\">\n      {breadcrumbs.map((breadcrumbElement, i) => {\n        const isFirst = i === 0;\n        const isNotLast = i < breadcrumbs.length - 1;\n\n        return (\n          <span className=\"flex-shrink display-flex-center\" key={breadcrumbElement.key}>\n            {isFirst && lastBreadcrumbElement && (\n              <QualifierIcon className=\"spacer-right\" qualifier={lastBreadcrumbElement.qualifier} />\n            )}\n            {isNoMainBranch || isNotLast ? (\n              <Link\n                className=\"link-no-underline text-ellipsis\"\n                title={breadcrumbElement.name}\n                to={getProjectUrl(breadcrumbElement.key)}>\n                {breadcrumbElement.name}\n              </Link>\n            ) : (\n              <span className=\"text-ellipsis\" title={breadcrumbElement.name}>\n                {breadcrumbElement.name}\n              </span>\n            )}\n            {isNotLast && <span className=\"slash-separator\" />}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default React.memo(Breadcrumb);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport Favorite from '../../../../components/controls/Favorite';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport BranchLikeNavigation from './branch-like/BranchLikeNavigation';\nimport CurrentBranchLikeMergeInformation from './branch-like/CurrentBranchLikeMergeInformation';\nimport { Breadcrumb } from './Breadcrumb';\n\nexport interface HeaderProps {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n  currentUser: T.CurrentUser;\n}\n\nexport function Header(props: HeaderProps) {\n  const { branchLikes, component, currentBranchLike, currentUser } = props;\n\n  return (\n    <>\n      <Helmet title={component.name} />\n      <header className=\"display-flex-center flex-shrink\">\n        <Breadcrumb component={component} currentBranchLike={currentBranchLike} />\n        {isLoggedIn(currentUser) && (\n          <Favorite\n            className=\"spacer-left\"\n            component={component.key}\n            favorite={Boolean(component.isFavorite)}\n            qualifier={component.qualifier}\n          />\n        )}\n        {currentBranchLike && (\n          <>\n            <BranchLikeNavigation\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={currentBranchLike}\n            />\n            <CurrentBranchLikeMergeInformation currentBranchLike={currentBranchLike} />\n          </>\n        )}\n      </header>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(React.memo(Header));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst AnalysisWarningsModal = lazyLoadComponent(\n  () => import('../../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  warnings: string[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Alert className=\"js-component-analysis-warnings flex-1\" display=\"inline\" variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analysis_had_warnings')}\n            id=\"component_navigation.last_analysis_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  <FormattedMessage\n                    defaultMessage={translate('component_navigation.x_warnings')}\n                    id=\"component_navigation.x_warnings\"\n                    values={{\n                      warningsCount: this.props.warnings.length\n                    }}\n                  />\n                </a>\n              )\n            }}\n          />\n        </Alert>\n        {this.state.modal && (\n          <AnalysisWarningsModal onClose={this.handleCloseModal} warnings={this.props.warnings} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport { isBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport './HeaderMeta.css';\n\nexport interface HeaderMetaProps {\n  branchLike?: BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  warnings: string[];\n}\n\nexport function HeaderMeta(props: HeaderMetaProps) {\n  const { branchLike, component, currentUser, warnings } = props;\n\n  const isABranch = isBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && isABranch;\n\n  return (\n    <>\n      <div className=\"display-flex-center flex-0 small\">\n        {warnings.length > 0 && (\n          <span className=\"header-meta-warnings\">\n            <ComponentNavWarnings warnings={warnings} />\n          </span>\n        )}\n        {component.analysisDate && (\n          <span className=\"spacer-left nowrap note\">\n            <DateTimeFormatter date={component.analysisDate} />\n          </span>\n        )}\n        {displayVersion && (\n          <span className=\"spacer-left nowrap note\">{`${translate('version')} ${\n            component.version\n          }`}</span>\n        )}\n        {isLoggedIn(currentUser) && currentPage !== undefined && !isPullRequest(branchLike) && (\n          <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n        )}\n      </div>\n      {isPullRequest(branchLike) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n\n  switch (component.qualifier) {\n    case ComponentQualifier.Portfolio:\n    case ComponentQualifier.SubPortfolio:\n      currentPage = { type: 'PORTFOLIO', component: component.key };\n      break;\n    case ComponentQualifier.Application:\n      currentPage = {\n        type: 'APPLICATION',\n        component: component.key,\n        branch: isBranch(branchLike) ? branchLike.name : undefined\n      };\n      break;\n    case ComponentQualifier.Project:\n      // when home page is set to the default branch of a project, its name is returned as `undefined`\n      currentPage = {\n        type: 'PROJECT',\n        component: component.key,\n        branch: isBranch(branchLike) ? branchLike.name : undefined\n      };\n      break;\n  }\n\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(HeaderMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport NavBarTabs from 'sonar-ui-common/components/ui/NavBarTabs';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getBranchLikeQuery, isMainBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport './Menu.css';\n\nconst SETTINGS_URLS = [\n  '/project/admin',\n  '/project/baseline',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: BranchLike | undefined;\n  component: T.Component;\n  onToggleProjectInfo: () => void;\n}\n\nexport class Menu extends React.PureComponent<Props> {\n  isProject() {\n    return this.props.component.qualifier === ComponentQualifier.Project;\n  }\n\n  isDeveloper() {\n    return this.props.component.qualifier === ComponentQualifier.Developper;\n  }\n\n  isPortfolio() {\n    const { qualifier } = this.props.component;\n    return (\n      qualifier === ComponentQualifier.Portfolio || qualifier === ComponentQualifier.SubPortfolio\n    );\n  }\n\n  isApplication() {\n    return this.props.component.qualifier === ComponentQualifier.Application;\n  }\n\n  getConfiguration() {\n    return this.props.component.configuration || {};\n  }\n\n  getQuery = () => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink() {\n    const pathname = this.isPortfolio() ? '/portfolio' : '/dashboard';\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname, query: this.getQuery() }}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCodeLink() {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname: '/code', query: this.getQuery() }}>\n          {this.isPortfolio() || this.isApplication()\n            ? translate('view_projects.page')\n            : translate('code.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderActivityLink() {\n    const { branchLike } = this.props;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/activity', query: this.getQuery() }}>\n          {translate('project_activity.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderIssuesLink() {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/issues', query: { ...this.getQuery(), resolved: 'false' } }}>\n          {translate('issues.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderComponentMeasuresLink() {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/component_measures', query: this.getQuery() }}>\n          {translate('layout.measures')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderSecurityHotspotsLink() {\n    return (\n      !this.isPortfolio() && (\n        <li>\n          <Link\n            activeClassName=\"active\"\n            to={{ pathname: '/security_hotspots', query: this.getQuery() }}>\n            {translate('layout.security_hotspots')}\n          </Link>\n        </li>\n      )\n    );\n  }\n\n  renderSecurityReports() {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query: this.getQuery()\n          }}>\n          {translate('layout.security_reports')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderAdministration() {\n    const { branchLike, component } = this.props;\n\n    if (!this.getConfiguration().showSettings || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks();\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {hasMessage('layout.settings', component.qualifier)\n              ? translate('layout.settings', component.qualifier)\n              : translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderAdministrationLinks() {\n    return [\n      this.renderSettingsLink(),\n      this.renderBranchesLink(),\n      this.renderBaselineLink(),\n      this.renderProfilesLink(),\n      this.renderQualityGateLink(),\n      this.renderCustomMeasuresLink(),\n      this.renderLinksLink(),\n      this.renderPermissionsLink(),\n      this.renderBackgroundTasksLink(),\n      this.renderUpdateKeyLink(),\n      this.renderWebhooksLink(),\n      ...this.renderAdminExtensions(),\n      this.renderDeletionLink()\n    ];\n  }\n\n  renderProjectInformationButton() {\n    if (isPullRequest(this.props.branchLike)) {\n      return null;\n    }\n\n    return (\n      (this.isProject() || this.isApplication()) && (\n        <li>\n          <a\n            className=\"menu-button\"\n            onClick={(e: React.SyntheticEvent<HTMLAnchorElement>) => {\n              e.preventDefault();\n              e.currentTarget.blur();\n              this.props.onToggleProjectInfo();\n            }}\n            role=\"button\"\n            tabIndex={0}>\n            <BulletListIcon className=\"little-spacer-right\" />\n            {translate(this.isProject() ? 'project' : 'application', 'info.title')}\n          </a>\n        </li>\n      )\n    );\n  }\n\n  renderSettingsLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/settings', query: this.getQuery() }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBranchesLink() {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !this.isProject() ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/branches', query: this.getQuery() }}>\n          {translate('project_branch_pull_request.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBaselineLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"baseline\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/baseline', query: this.getQuery() }}>\n          {translate('project_baseline.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderProfilesLink() {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_profiles', query: this.getQuery() }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderQualityGateLink() {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_gate', query: this.getQuery() }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCustomMeasuresLink() {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/custom_measures', query: this.getQuery() }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderLinksLink() {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/links', query: this.getQuery() }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderPermissionsLink() {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project_roles', query: this.getQuery() }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBackgroundTasksLink() {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/background_tasks', query: this.getQuery() }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderUpdateKeyLink() {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/key', query: this.getQuery() }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderWebhooksLink() {\n    if (!this.getConfiguration().showSettings || !this.isProject()) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/webhooks', query: this.getQuery() }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderDeletionLink() {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (\n      ![\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/deletion', query: this.getQuery() }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { ...this.getQuery(), qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions() {\n    if (this.props.branchLike && !isMainBranch(this.props.branchLike)) {\n      return [];\n    }\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions.map(e => this.renderExtension(e, true));\n  }\n\n  renderExtensions() {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n    if (\n      withoutSecurityExtension.length === 0 ||\n      (this.props.branchLike && !isMainBranch(this.props.branchLike))\n    ) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"display-flex-center display-flex-space-between\">\n        <NavBarTabs>\n          {this.renderDashboardLink()}\n          {this.renderIssuesLink()}\n          {this.renderSecurityHotspotsLink()}\n          {this.renderSecurityReports()}\n          {this.renderComponentMeasuresLink()}\n          {this.renderCodeLink()}\n          {this.renderActivityLink()}\n          {this.renderExtensions()}\n        </NavBarTabs>\n        <NavBarTabs>\n          {this.renderAdministration()}\n          {this.renderProjectInformationButton()}\n        </NavBarTabs>\n      </div>\n    );\n  }\n}\n\nexport default withAppState(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport EscKeydownHandler from 'sonar-ui-common/components/controls/EscKeydownHandler';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport './InfoDrawer.css';\n\nexport interface InfoDrawerProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onClose: () => void;\n  top: number;\n}\n\nexport default function InfoDrawer(props: InfoDrawerProps) {\n  const { children, displayed, onClose, top } = props;\n\n  return (\n    <div\n      className={classNames('info-drawer info-drawer-pane', { open: displayed })}\n      style={{ top }}>\n      <div className=\"close-button\">\n        <ClearButton onClick={onClose} />\n      </div>\n      {displayed && (\n        <EscKeydownHandler onKeydown={onClose}>\n          <OutsideClickHandler onClickOutside={onClose}>\n            <div className=\"display-flex-column max-height-100\">{children}</div>\n          </OutsideClickHandler>\n        </EscKeydownHandler>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport { getLocalizedMetricName } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport { getHostUrl, getPathUrlAsString } from 'sonar-ui-common/helpers/urls';\nimport { getProjectUrl } from '../../../../../../helpers/urls';\n\nexport type BadgeColors = 'white' | 'black' | 'orange';\nexport type BadgeFormats = 'md' | 'url';\n\nexport interface BadgeOptions {\n  branch?: string;\n  color?: BadgeColors;\n  format?: BadgeFormats;\n  project?: string;\n  metric?: string;\n  pullRequest?: string;\n}\n\nexport enum BadgeType {\n  measure = 'measure',\n  qualityGate = 'quality_gate',\n  marketing = 'marketing'\n}\n\nexport function getBadgeSnippet(type: BadgeType, options: BadgeOptions) {\n  const url = getBadgeUrl(type, options);\n  const { branch, format = 'md', metric = 'alert_status', project } = options;\n\n  if (format === 'url') {\n    return url;\n  } else {\n    let label;\n    let projectUrl;\n\n    switch (type) {\n      case BadgeType.marketing:\n        label = 'SonarCloud';\n        break;\n      case BadgeType.measure:\n        label = getLocalizedMetricName({ key: metric });\n        break;\n      case BadgeType.qualityGate:\n      default:\n        label = 'Quality gate';\n        break;\n    }\n\n    if (project) {\n      projectUrl = getPathUrlAsString(getProjectUrl(project, branch), false);\n    }\n\n    const mdImage = `![${label}](${url})`;\n    return projectUrl ? `[${mdImage}](${projectUrl})` : mdImage;\n  }\n}\n\nexport function getBadgeUrl(\n  type: BadgeType,\n  { branch, project, color = 'white', metric = 'alert_status', pullRequest }: BadgeOptions\n) {\n  switch (type) {\n    case BadgeType.marketing:\n      return `${getHostUrl()}/images/project_badges/sonarcloud-${color}.svg`;\n    case BadgeType.qualityGate:\n      return `${getHostUrl()}/api/project_badges/quality_gate?${stringify(\n        omitNil({ branch, project, pullRequest })\n      )}`;\n    case BadgeType.measure:\n    default:\n      return `${getHostUrl()}/api/project_badges/measure?${stringify(\n        omitNil({ branch, project, metric, pullRequest })\n      )}`;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BadgeType } from './utils';\n\ninterface Props {\n  onClick: (type: BadgeType) => void;\n  selected: boolean;\n  type: BadgeType;\n  url: string;\n}\n\nexport default class BadgeButton extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.onClick(this.props.type);\n  };\n\n  render() {\n    const { selected, type, url } = this.props;\n    const width = type !== BadgeType.measure ? '128px' : undefined;\n    return (\n      <Button className={classNames('badge-button', { selected })} onClick={this.handleClick}>\n        <img alt={translate('overview.badges', type, 'alt')} src={url} width={width} />\n      </Button>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { fetchWebApi } from '../../../../../../api/web-api';\nimport { BadgeColors, BadgeFormats, BadgeOptions, BadgeType } from './utils';\n\ninterface Props {\n  className?: string;\n  metrics: T.Dict<T.Metric>;\n  options: BadgeOptions;\n  type: BadgeType;\n  updateOptions: (options: Partial<BadgeOptions>) => void;\n}\n\ninterface State {\n  badgeMetrics: string[];\n}\n\nexport default class BadgeParams extends React.PureComponent<Props> {\n  mounted = false;\n\n  state: State = { badgeMetrics: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBadgeMetrics();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchBadgeMetrics() {\n    fetchWebApi(false).then(\n      webservices => {\n        if (this.mounted) {\n          const domain = webservices.find(d => d.path === 'api/project_badges');\n          const ws = domain && domain.actions.find(w => w.key === 'measure');\n          const param = ws && ws.params && ws.params.find(p => p.key === 'metric');\n          if (param && param.possibleValues) {\n            this.setState({ badgeMetrics: param.possibleValues });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  getColorOptions = () => {\n    return ['white', 'black', 'orange'].map(color => ({\n      label: translate('overview.badges.options.colors', color),\n      value: color\n    }));\n  };\n\n  getFormatOptions = () => {\n    return ['md', 'url'].map(format => ({\n      label: translate('overview.badges.options.formats', format),\n      value: format\n    }));\n  };\n\n  getMetricOptions = () => {\n    return this.state.badgeMetrics.map(key => {\n      const metric = this.props.metrics[key];\n      return {\n        value: key,\n        label: metric ? getLocalizedMetricName(metric) : key\n      };\n    });\n  };\n\n  handleColorChange = ({ value }: { value: BadgeColors }) => {\n    this.props.updateOptions({ color: value });\n  };\n\n  handleFormatChange = ({ value }: { value: BadgeFormats }) => {\n    this.props.updateOptions({ format: value });\n  };\n\n  handleMetricChange = ({ value }: { value: string }) => {\n    this.props.updateOptions({ metric: value });\n  };\n\n  renderBadgeType = (type: BadgeType, options: BadgeOptions) => {\n    if (type === BadgeType.marketing) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-color\">\n            {translate('color')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            name=\"badge-color\"\n            onChange={this.handleColorChange}\n            options={this.getColorOptions()}\n            searchable={false}\n            value={options.color}\n          />\n        </>\n      );\n    } else if (type === BadgeType.measure) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-metric\">\n            {translate('overview.badges.metric')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            menuStyle={{ maxHeight: 100 }}\n            name=\"badge-metric\"\n            onChange={this.handleMetricChange}\n            options={this.getMetricOptions()}\n            searchable={false}\n            value={options.metric}\n          />\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const { className, options, type } = this.props;\n    return (\n      <div className={className}>\n        {this.renderBadgeType(type, options)}\n\n        <label\n          className={classNames('spacer-right', {\n            'spacer-top': type !== BadgeType.qualityGate\n          })}\n          htmlFor=\"badge-format\">\n          {translate('format')}:\n        </label>\n        <Select\n          className=\"input-medium\"\n          clearable={false}\n          name=\"badge-format\"\n          onChange={this.handleFormatChange}\n          options={this.getFormatOptions()}\n          searchable={false}\n          value={this.props.options.format || 'md'}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CodeSnippet from '../../../../../../components/common/CodeSnippet';\nimport { getBranchLikeQuery } from '../../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../../types/branch-like';\nimport { MetricKey } from '../../../../../../types/metrics';\nimport BadgeButton from './BadgeButton';\nimport BadgeParams from './BadgeParams';\nimport './styles.css';\nimport { BadgeOptions, BadgeType, getBadgeSnippet, getBadgeUrl } from './utils';\n\ninterface Props {\n  branchLike?: BranchLike;\n  metrics: T.Dict<T.Metric>;\n  project: string;\n  qualifier: string;\n}\n\ninterface State {\n  selectedType: BadgeType;\n  badgeOptions: BadgeOptions;\n}\n\nexport default class ProjectBadges extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedType: BadgeType.measure,\n    badgeOptions: { color: 'white', metric: MetricKey.alert_status }\n  };\n\n  handleSelectBadge = (selectedType: BadgeType) => {\n    this.setState({ selectedType });\n  };\n\n  handleUpdateOptions = (options: Partial<BadgeOptions>) => {\n    this.setState(state => ({ badgeOptions: { ...state.badgeOptions, ...options } }));\n  };\n\n  render() {\n    const { branchLike, project, qualifier } = this.props;\n    const { selectedType, badgeOptions } = this.state;\n    const fullBadgeOptions = { project, ...badgeOptions, ...getBranchLikeQuery(branchLike) };\n\n    return (\n      <div className=\"display-flex-column\">\n        <h3>{translate('overview.badges.get_badge', qualifier)}</h3>\n        <p className=\"big-spacer-bottom\">{translate('overview.badges.description', qualifier)}</p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.measure === selectedType}\n          type={BadgeType.measure}\n          url={getBadgeUrl(BadgeType.measure, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.measure, 'description', qualifier)}\n        </p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.qualityGate === selectedType}\n          type={BadgeType.qualityGate}\n          url={getBadgeUrl(BadgeType.qualityGate, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.qualityGate, 'description', qualifier)}\n        </p>\n        <BadgeParams\n          className=\"big-spacer-bottom display-flex-column\"\n          metrics={this.props.metrics}\n          options={badgeOptions}\n          type={selectedType}\n          updateOptions={this.handleUpdateOptions}\n        />\n        <CodeSnippet isOneLine={true} snippet={getBadgeSnippet(selectedType, fullBadgeOptions)} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport BackIcon from 'sonar-ui-common/components/icons/BackIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface InfoDrawerPageProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onPageChange: () => void;\n}\n\nexport default function InfoDrawerPage(props: InfoDrawerPageProps) {\n  const { children, displayed, onPageChange } = props;\n  return (\n    <div\n      className={classNames(\n        'info-drawer-page info-drawer-pane display-flex-column overflow-hidden',\n        {\n          open: displayed\n        }\n      )}>\n      <h2 className=\"back-button big-padded bordered-bottom\" onClick={() => onPageChange()}>\n        <BackIcon className=\"little-spacer-right\" />\n        {translate('back')}\n      </h2>\n\n      {displayed && <div className=\"overflow-y-auto big-padded\">{children}</div>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from '../../../../../../apps/account/notifications/NotificationsList';\nimport {\n  withNotifications,\n  WithNotificationsProps\n} from '../../../../../../components/hoc/withNotifications';\n\ninterface Props {\n  className?: string;\n  component: T.Component;\n}\n\nexport function ProjectNotifications(props: WithNotificationsProps & Props) {\n  const { channels, component, loading, notifications, perProjectTypes } = props;\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ project: component.key, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      project: component.key,\n      channel,\n      type\n    });\n  };\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${component.key}-${type}-${channel}`;\n  };\n\n  const projectNotifications = notifications.filter(n => n.project && n.project === component.key);\n\n  return (\n    <>\n      <h3>{translate('project.info.notifications')}</h3>\n\n      <Alert className=\"spacer-top\" variant=\"info\">\n        {translate('notification.dispatcher.information')}\n      </Alert>\n\n      <DeferredSpinner loading={loading}>\n        <table className=\"data zebra notifications-table\">\n          <thead>\n            <tr>\n              <th aria-label={translate('project')} />\n              {channels.map(channel => (\n                <th className=\"text-center\" key={channel}>\n                  <h4>{translate('notification.channel', channel)}</h4>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <NotificationsList\n            channels={channels}\n            checkboxId={getCheckboxId}\n            notifications={projectNotifications}\n            onAdd={handleAddNotification}\n            onRemove={handleRemoveNotification}\n            project={true}\n            types={perProjectTypes}\n          />\n        </table>\n      </DeferredSpinner>\n    </>\n  );\n}\n\nexport default withNotifications(ProjectNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ProjectInformationPages {\n  main,\n  badges,\n  notifications\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\n\nexport interface DrawerLinkProps<P> {\n  label: string;\n  onPageChange: (page: P) => void;\n  to: P;\n}\n\nexport function DrawerLink<P>(props: DrawerLinkProps<P>) {\n  const { label, to } = props;\n\n  return (\n    <a\n      className=\"display-flex-space-between bordered-bottom big-padded\"\n      onClick={() => props.onPageChange(to)}\n      role=\"link\"\n      tabIndex={0}>\n      {label}\n      <ChevronRightIcon />\n    </a>\n  );\n}\n\nexport default React.memo(DrawerLink);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  componentKey: string;\n  qualifier: string;\n}\n\nexport default function MetaKey({ componentKey, qualifier }: Props) {\n  return (\n    <>\n      <h3>{translate('overview.project_key', qualifier)}</h3>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" readOnly={true} type=\"text\" value={componentKey} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={componentKey} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectLinks } from '../../../../../../api/projectLinks';\nimport { orderLinks } from '../../../../../../helpers/projectLinks';\nimport MetaLink from './MetaLink';\n\ninterface Props {\n  component: T.LightComponent;\n}\n\ninterface State {\n  links?: T.ProjectLink[];\n}\n\nexport default class MetaLinks extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.loadLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLinks = () =>\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links });\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { links } = this.state;\n\n    if (!links || links.length === 0) {\n      return null;\n    }\n\n    const orderedLinks = orderLinks(links);\n\n    return (\n      <>\n        <div className=\"big-padded bordered-bottom\">\n          <h3>{translate('overview.external_links')}</h3>\n          <ul className=\"project-info-list\">\n            {orderedLinks.map(link => (\n              <MetaLink key={link.id} link={link} />\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityGateUrl } from '../../../../../../helpers/urls';\n\ninterface Props {\n  qualityGate: { isDefault?: boolean; key: string; name: string };\n}\n\nexport default function MetaQualityGate({ qualityGate }: Props) {\n  return (\n    <>\n      <h3>{translate('project.info.quality_gate')}</h3>\n\n      <ul className=\"project-info-list\">\n        <li>\n          {qualityGate.isDefault && (\n            <span className=\"note spacer-right\">({translate('default')})</span>\n          )}\n          <Link to={getQualityGateUrl(qualityGate.key)}>{qualityGate.name}</Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { searchRules } from '../../../../../../api/rules';\nimport { getQualityProfileUrl } from '../../../../../../helpers/urls';\nimport { getLanguages, Store } from '../../../../../../store/rootReducer';\n\ninterface StateProps {\n  languages: T.Languages;\n}\n\ninterface OwnProps {\n  headerClassName?: string;\n  profiles: T.ComponentQualityProfile[];\n}\n\ninterface State {\n  deprecatedByKey: T.Dict<number>;\n}\n\nexport class MetaQualityProfiles extends React.PureComponent<StateProps & OwnProps, State> {\n  mounted = false;\n  state: State = { deprecatedByKey: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadDeprecatedRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadDeprecatedRules() {\n    const existingProfiles = this.props.profiles.filter(p => !p.deleted);\n    const requests = existingProfiles.map(profile =>\n      this.loadDeprecatedRulesForProfile(profile.key)\n    );\n    Promise.all(requests).then(\n      responses => {\n        if (this.mounted) {\n          const deprecatedByKey: T.Dict<number> = {};\n          responses.forEach((count, i) => {\n            const profileKey = existingProfiles[i].key;\n            deprecatedByKey[profileKey] = count;\n          });\n          this.setState({ deprecatedByKey });\n        }\n      },\n      () => {}\n    );\n  }\n\n  loadDeprecatedRulesForProfile(profileKey: string) {\n    const data = {\n      activation: 'true',\n      organization: undefined,\n      ps: 1,\n      qprofile: profileKey,\n      statuses: 'DEPRECATED'\n    };\n    return searchRules(data).then(r => r.total);\n  }\n\n  getDeprecatedRulesCount(profile: { key: string }) {\n    const count = this.state.deprecatedByKey[profile.key];\n    return count || 0;\n  }\n\n  renderProfile(profile: T.ComponentQualityProfile) {\n    const languageFromStore = this.props.languages[profile.language];\n    const languageName = languageFromStore ? languageFromStore.name : profile.language;\n\n    const inner = (\n      <div className=\"text-ellipsis\">\n        <span className=\"note spacer-right\">({languageName})</span>\n        {profile.deleted ? (\n          profile.name\n        ) : (\n          <Link to={getQualityProfileUrl(profile.name, profile.language)}>{profile.name}</Link>\n        )}\n      </div>\n    );\n\n    if (profile.deleted) {\n      const tooltip = translateWithParameters('overview.deleted_profile', profile.name);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deleted-profile\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    const count = this.getDeprecatedRulesCount(profile);\n\n    if (count > 0) {\n      const tooltip = translateWithParameters('overview.deprecated_profile', count);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deprecated-rules\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    return <li key={profile.key}>{inner}</li>;\n  }\n\n  render() {\n    const { headerClassName, profiles } = this.props;\n\n    return (\n      <>\n        <h3 className={headerClassName}>{translate('overview.quality_profiles')}</h3>\n\n        <ul className=\"project-info-list\">\n          {profiles.map(profile => this.renderProfile(profile))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(mapStateToProps)(MetaQualityProfiles);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure, localizeMetric } from 'sonar-ui-common/helpers/measures';\nimport DrilldownLink from '../../../../../../components/shared/DrilldownLink';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport { MetricKey } from '../../../../../../types/metrics';\n\nexport interface MetaSizeProps {\n  component: T.Component;\n  measures: T.Measure[];\n}\n\nexport default function MetaSize({ component, measures }: MetaSizeProps) {\n  const isApp = component.qualifier === ComponentQualifier.Application;\n  const ncloc = measures.find(measure => measure.metric === MetricKey.ncloc);\n  const projects = isApp\n    ? measures.find(measure => measure.metric === MetricKey.projects)\n    : undefined;\n\n  return (\n    <>\n      <h3>{localizeMetric(MetricKey.ncloc)}</h3>\n      <div className=\"display-flex-center\">\n        {ncloc ? (\n          <>\n            <DrilldownLink className=\"huge\" component={component.key} metric={MetricKey.ncloc}>\n              {formatMeasure(ncloc.value, 'SHORT_INT')}\n            </DrilldownLink>\n\n            <span className=\"spacer-left\">\n              <SizeRating value={Number(ncloc.value)} />\n            </span>\n          </>\n        ) : (\n          <span>0</span>\n        )}\n\n        {isApp && (\n          <span className=\"huge-spacer-left display-inline-flex-center\">\n            {projects ? (\n              <DrilldownLink component={component.key} metric={MetricKey.projects}>\n                <span className=\"big\">{formatMeasure(projects.value, 'SHORT_INT')}</span>\n              </DrilldownLink>\n            ) : (\n              <span className=\"big\">0</span>\n            )}\n            <span className=\"little-spacer-left text-muted\">\n              {translate('metric.projects.name')}\n            </span>\n          </span>\n        )}\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference, without } from 'lodash';\nimport * as React from 'react';\nimport { searchProjectTags } from '../../../../../../api/components';\nimport TagsSelector from '../../../../../../components/tags/TagsSelector';\n\ninterface Props {\n  project: string;\n  selectedTags: string[];\n  setProjectTags: (tags: string[]) => void;\n}\n\ninterface State {\n  searchResult: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class MetaTagsSelector extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { searchResult: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onSearch = (query: string) => {\n    return searchProjectTags({\n      q: query,\n      ps: Math.min(this.props.selectedTags.length - 1 + LIST_SIZE, 100)\n    }).then(\n      ({ tags }) => {\n        if (this.mounted) {\n          this.setState({ searchResult: tags });\n        }\n      },\n      () => {}\n    );\n  };\n\n  onSelect = (tag: string) => {\n    this.props.setProjectTags([...this.props.selectedTags, tag]);\n  };\n\n  onUnselect = (tag: string) => {\n    this.props.setProjectTags(without(this.props.selectedTags, tag));\n  };\n\n  render() {\n    const availableTags = difference(this.state.searchResult, this.props.selectedTags);\n    return (\n      <TagsSelector\n        listSize={LIST_SIZE}\n        onSearch={this.onSearch}\n        onSelect={this.onSelect}\n        onUnselect={this.onUnselect}\n        selectedTags={this.props.selectedTags}\n        tags={availableTags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setApplicationTags, setProjectTags } from '../../../../../../api/components';\nimport TagsList from '../../../../../../components/tags/TagsList';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport MetaTagsSelector from './MetaTagsSelector';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\nexport default class MetaTags extends React.PureComponent<Props> {\n  card?: HTMLDivElement | null;\n  tagsList?: HTMLElement | null;\n  tagsSelector?: HTMLDivElement | null;\n\n  canUpdateTags = () => {\n    const { configuration } = this.props.component;\n    return configuration && configuration.showSettings;\n  };\n\n  getPopupPos = (eltPos: ClientRect, containerPos: ClientRect) => ({\n    top: eltPos.height,\n    right: containerPos.width - eltPos.width\n  });\n\n  setTags = (values: string[]) => {\n    const { component } = this.props;\n\n    if (component.qualifier === ComponentQualifier.Application) {\n      return setApplicationTags({\n        application: component.key,\n        tags: values.join(',')\n      });\n    } else {\n      return setProjectTags({\n        project: component.key,\n        tags: values.join(',')\n      });\n    }\n  };\n\n  handleSetProjectTags = (values: string[]) => {\n    this.setTags(values).then(\n      () => this.props.onComponentChange({ tags: values }),\n      () => {}\n    );\n  };\n\n  render() {\n    const { key } = this.props.component;\n    const tags = this.props.component.tags || [];\n\n    if (this.canUpdateTags()) {\n      return (\n        <div className=\"big-spacer-top project-info-tags\" ref={card => (this.card = card)}>\n          <Dropdown\n            closeOnClick={false}\n            closeOnClickOutside={true}\n            overlay={\n              <MetaTagsSelector\n                project={key}\n                selectedTags={tags}\n                setProjectTags={this.handleSetProjectTags}\n              />\n            }\n            overlayPlacement={PopupPlacement.BottomLeft}>\n            <ButtonLink innerRef={tagsList => (this.tagsList = tagsList)} stopPropagation={true}>\n              <TagsList allowUpdate={true} tags={tags.length ? tags : [translate('no_tags')]} />\n            </ButtonLink>\n          </Dropdown>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"big-spacer-top project-info-tags\">\n          <TagsList\n            allowUpdate={false}\n            className=\"note\"\n            tags={tags.length ? tags : [translate('no_tags')]}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport PrivacyBadgeContainer from '../../../../../components/common/PrivacyBadgeContainer';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport DrawerLink from './DrawerLink';\nimport MetaKey from './meta/MetaKey';\nimport MetaLinks from './meta/MetaLinks';\nimport MetaQualityGate from './meta/MetaQualityGate';\nimport MetaQualityProfiles from './meta/MetaQualityProfiles';\nimport MetaSize from './meta/MetaSize';\nimport MetaTags from './meta/MetaTags';\nimport { ProjectInformationPages } from './ProjectInformationPages';\n\nexport interface ProjectInformationRendererProps {\n  canConfigureNotifications: boolean;\n  canUseBadges: boolean;\n  component: T.Component;\n  measures?: T.Measure[];\n  onComponentChange: (changes: {}) => void;\n  onPageChange: (page: ProjectInformationPages) => void;\n}\n\nexport function ProjectInformationRenderer(props: ProjectInformationRendererProps) {\n  const { canConfigureNotifications, canUseBadges, component, measures = [] } = props;\n\n  const isApp = component.qualifier === ComponentQualifier.Application;\n\n  return (\n    <>\n      <div>\n        <h2 className=\"big-padded bordered-bottom\">\n          {translate(isApp ? 'application' : 'project', 'info.title')}\n        </h2>\n      </div>\n\n      <div className=\"overflow-y-auto\">\n        <div className=\"big-padded bordered-bottom\">\n          <div className=\"display-flex-center\">\n            <h3 className=\"spacer-right\">{translate('project.info.description')}</h3>\n            {component.visibility && (\n              <PrivacyBadgeContainer\n                organization={undefined}\n                qualifier={component.qualifier}\n                tooltipProps={{ projectKey: component.key }}\n                visibility={component.visibility}\n              />\n            )}\n          </div>\n\n          {component.description && <p>{component.description}</p>}\n\n          <MetaTags component={component} onComponentChange={props.onComponentChange} />\n        </div>\n\n        <div className=\"big-padded bordered-bottom it__project-loc-value\">\n          <MetaSize component={component} measures={measures} />\n        </div>\n\n        {!isApp &&\n          (component.qualityGate ||\n            (component.qualityProfiles && component.qualityProfiles.length > 0)) && (\n            <>\n              <div className=\"big-padded bordered-bottom\">\n                {component.qualityGate && <MetaQualityGate qualityGate={component.qualityGate} />}\n\n                {component.qualityProfiles && component.qualityProfiles.length > 0 && (\n                  <MetaQualityProfiles\n                    headerClassName={component.qualityGate ? 'big-spacer-top' : undefined}\n                    profiles={component.qualityProfiles}\n                  />\n                )}\n              </div>\n            </>\n          )}\n\n        {!isApp && <MetaLinks component={component} />}\n\n        <div className=\"big-padded bordered-bottom\">\n          <MetaKey componentKey={component.key} qualifier={component.qualifier} />\n        </div>\n\n        {canUseBadges && (\n          <DrawerLink\n            label={translate('overview.badges.get_badge', component.qualifier)}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.badges}\n          />\n        )}\n        {canConfigureNotifications && (\n          <DrawerLink\n            label={translate('project.info.to_notifications')}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.notifications}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(ProjectInformationRenderer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getMeasures } from '../../../../../api/measures';\nimport { isLoggedIn } from '../../../../../helpers/users';\nimport { fetchMetrics } from '../../../../../store/rootActions';\nimport { getCurrentUser, getMetrics, Store } from '../../../../../store/rootReducer';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { MetricKey } from '../../../../../types/metrics';\nimport ProjectBadges from './badges/ProjectBadges';\nimport InfoDrawerPage from './InfoDrawerPage';\nimport ProjectNotifications from './notifications/ProjectNotifications';\nimport './ProjectInformation.css';\nimport { ProjectInformationPages } from './ProjectInformationPages';\nimport ProjectInformationRenderer from './ProjectInformationRenderer';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  currentUser: T.CurrentUser;\n  fetchMetrics: () => void;\n  onComponentChange: (changes: {}) => void;\n  metrics: T.Dict<T.Metric>;\n}\n\ninterface State {\n  measures?: T.Measure[];\n  page: ProjectInformationPages;\n}\n\nexport class ProjectInformation extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    page: ProjectInformationPages.main\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.loadMeasures();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  setPage = (page: ProjectInformationPages = ProjectInformationPages.main) => {\n    this.setState({ page });\n  };\n\n  loadMeasures = () => {\n    const {\n      component: { key }\n    } = this.props;\n\n    return getMeasures({\n      component: key,\n      metricKeys: [MetricKey.ncloc, MetricKey.projects].join()\n    }).then(measures => {\n      if (this.mounted) {\n        this.setState({ measures });\n      }\n    });\n  };\n\n  render() {\n    const { branchLike, component, currentUser, metrics } = this.props;\n    const { measures, page } = this.state;\n\n    const canConfigureNotifications =\n      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;\n    const canUseBadges =\n      metrics !== undefined &&\n      component.visibility !== 'private' &&\n      (component.qualifier === ComponentQualifier.Application ||\n        component.qualifier === ComponentQualifier.Project);\n\n    return (\n      <>\n        <ProjectInformationRenderer\n          canConfigureNotifications={canConfigureNotifications}\n          canUseBadges={canUseBadges}\n          component={component}\n          measures={measures}\n          onComponentChange={this.props.onComponentChange}\n          onPageChange={this.setPage}\n        />\n        {canUseBadges && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.badges}\n            onPageChange={this.setPage}>\n            <ProjectBadges\n              branchLike={branchLike}\n              metrics={metrics}\n              project={component.key}\n              qualifier={component.qualifier}\n            />\n          </InfoDrawerPage>\n        )}\n        {canConfigureNotifications && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.notifications}\n            onPageChange={this.setPage}>\n            <ProjectNotifications component={component} />\n          </InfoDrawerPage>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  metrics: getMetrics(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ContextNavBar from 'sonar-ui-common/components/ui/ContextNavBar';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { rawSizes } from '../../../theme';\nimport RecentHistory from '../../RecentHistory';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport Header from './Header';\nimport HeaderMeta from './HeaderMeta';\nimport Menu from './Menu';\nimport InfoDrawer from './projectInformation/InfoDrawer';\nimport ProjectInformation from './projectInformation/ProjectInformation';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  currentBranchLike: BranchLike | undefined;\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onComponentChange: (changes: Partial<T.Component>) => void;\n  warnings: string[];\n}\n\nexport default function ComponentNav(props: Props) {\n  const {\n    branchLikes,\n    component,\n    currentBranchLike,\n    currentTask,\n    currentTaskOnSameBranch,\n    isInProgress,\n    isPending,\n    warnings\n  } = props;\n  const { contextNavHeightRaw, globalNavHeightRaw } = rawSizes;\n\n  const [displayProjectInfo, setDisplayProjectInfo] = React.useState(false);\n\n  React.useEffect(() => {\n    const { breadcrumbs, key, name, organization } = component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (\n      [\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application,\n        ComponentQualifier.Developper\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      RecentHistory.add(key, name, qualifier.toLowerCase(), organization);\n    }\n  }, [component, component.key]);\n\n  let notifComponent;\n  if (isInProgress || isPending || (currentTask && currentTask.status === STATUSES.FAILED)) {\n    notifComponent = (\n      <ComponentNavBgTaskNotif\n        component={component}\n        currentTask={currentTask}\n        currentTaskOnSameBranch={currentTaskOnSameBranch}\n        isInProgress={isInProgress}\n        isPending={isPending}\n      />\n    );\n  }\n\n  const contextNavHeight = notifComponent ? contextNavHeightRaw + 30 : contextNavHeightRaw;\n\n  return (\n    <ContextNavBar height={contextNavHeight} id=\"context-navigation\" notif={notifComponent}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between little-padded-top', {\n          'padded-bottom': warnings.length === 0\n        })}>\n        <Header\n          branchLikes={branchLikes}\n          component={component}\n          currentBranchLike={currentBranchLike}\n        />\n        <HeaderMeta branchLike={currentBranchLike} component={component} warnings={warnings} />\n      </div>\n      <Menu\n        branchLike={currentBranchLike}\n        component={component}\n        onToggleProjectInfo={() => setDisplayProjectInfo(!displayProjectInfo)}\n      />\n      <InfoDrawer\n        displayed={displayProjectInfo}\n        onClose={() => setDisplayProjectInfo(false)}\n        top={globalNavHeightRaw + contextNavHeightRaw}>\n        <ProjectInformation\n          branchLike={currentBranchLike}\n          component={component}\n          onComponentChange={props.onComponentChange}\n        />\n      </InfoDrawer>\n    </ContextNavBar>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getAnalysisStatus, getTasksForComponent } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport { STATUSES } from '../../apps/background-tasks/constants';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport {\n  getBranchLikeQuery,\n  isBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../helpers/branch-like';\nimport { getPortfolioUrl } from '../../helpers/urls';\nimport {\n  fetchOrganization,\n  registerBranchStatus,\n  requireAuthorization\n} from '../../store/rootActions';\nimport { BranchLike } from '../../types/branch-like';\nimport { isPortfolioLike } from '../../types/component';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport { ComponentContext } from './ComponentContext';\nimport ComponentNav from './nav/component/ComponentNav';\n\ninterface Props {\n  children: React.ReactElement;\n  fetchOrganization: (organization: string) => void;\n  location: Pick<Location, 'query' | 'pathname'>;\n  registerBranchStatus: (branchLike: BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: BranchLike;\n  branchLikes: BranchLike[];\n  component?: T.Component;\n  currentTask?: T.Task;\n  isPending: boolean;\n  loading: boolean;\n  tasksInProgress?: T.Task[];\n  warnings: string[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent() {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (response?: Response) => {\n      if (this.mounted) {\n        if (response && response.status === 403) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ component: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ])\n      .then(([nav, { component }]) => {\n        const componentWithQualifier = this.addQualifier({ ...nav, ...component });\n\n        /*\n         * This redirect was moved from overview/App.tsx, where it was triggered too soon\n         * (i.e. before the new component was fetched)\n         */\n        if (\n          this.props.location.pathname.match('dashboard') &&\n          isPortfolioLike(componentWithQualifier.qualifier)\n        ) {\n          this.props.router.replace(getPortfolioUrl(component.key));\n        }\n\n        return componentWithQualifier;\n      }, onError)\n      .then(this.fetchBranches)\n      .then(\n        ({ branchLike, branchLikes, component }) => {\n          if (this.mounted) {\n            this.setState({\n              branchLike,\n              branchLikes,\n              component,\n              loading: false\n            });\n            this.fetchStatus(component);\n            this.fetchWarnings(component, branchLike);\n          }\n        },\n        () => {}\n      );\n  }\n\n  fetchBranches = (\n    component: T.Component\n  ): Promise<{\n    branchLike?: BranchLike;\n    branchLikes: BranchLike[];\n    component: T.Component;\n  }> => {\n    const breadcrumb = component.breadcrumbs.find(({ qualifier }) => {\n      return ['APP', 'TRK'].includes(qualifier);\n    });\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      return Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === 'APP' ? Promise.resolve([]) : getPullRequests(key)\n      ]).then(([branches, pullRequests]) => {\n        const branchLikes = [...branches, ...pullRequests];\n        const branchLike = this.getCurrentBranchLike(branchLikes);\n\n        this.registerBranchStatuses(branchLikes, component);\n\n        return { branchLike, branchLikes, component };\n      });\n    } else {\n      return Promise.resolve({ branchLikes: [], component });\n    }\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === STATUSES.IN_PROGRESS\n              );\n\n              const currentTaskChanged =\n                currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id;\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === STATUSES.PENDING);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: BranchLike) => {\n    if (component.qualifier === 'TRK') {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  getCurrentBranchLike = (branchLikes: BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: T.Task, branchLike?: BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === STATUSES.FAILED || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: T.Task[], branchLike?: BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (task: Pick<T.Task, 'branch' | 'pullRequest'>, branchLike?: BranchLike) => {\n    if (branchLike && !isMainBranch(branchLike)) {\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isBranch(branchLike)) {\n        return branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    const { branchLike, branchLikes, currentTask, isPending, tasksInProgress } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component && !['FIL', 'UTS'].includes(component.qualifier) && (\n          <ComponentNav\n            branchLikes={branchLikes}\n            component={component}\n            currentBranchLike={branchLike}\n            currentTask={currentTask}\n            currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n            isInProgress={isInProgress}\n            isPending={isPending}\n            onComponentChange={this.handleComponentChange}\n            warnings={this.state.warnings}\n          />\n        )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization, registerBranchStatus, requireAuthorization };\n\nexport default withRouter(connect(null, mapDispatchToProps)(ComponentContainer));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function getWrappedDisplayName<P>(\n  WrappedComponent: React.ComponentType<P>,\n  hocName: string\n) {\n  const wrappedDisplayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return `${hocName}(${wrappedDisplayName})`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoadComponent(() => import('./DocMarkdownBlock'), 'DocMarkdownBlock');\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nexport enum ComponentQualifier {\n  Application = 'APP',\n  Directory = 'DIR',\n  Developper = 'DEV',\n  File = 'FIL',\n  Portfolio = 'VW',\n  Project = 'TRK',\n  SubPortfolio = 'SVW',\n  SubProject = 'BRC',\n  TestFile = 'UTS'\n}\n\nexport function isPortfolioLike(componentQualifier?: string | ComponentQualifier) {\n  return (\n    !!componentQualifier &&\n    [ComponentQualifier.Portfolio.toString(), ComponentQualifier.SubPortfolio.toString()].includes(\n      componentQualifier\n    )\n  );\n}\n\nexport enum Visibility {\n  Public = 'public',\n  Private = 'private'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    if (start < end) {\n      newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    } else {\n      // When conditional tags are incorrectly used we log an error, strip them out and pass to the next pair of tags\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          `Documentation - incorrect usage of conditional formatting tags here: \"${newContent.substring(\n            end,\n            start + beginning.length\n          )}\"`\n        )\n      );\n      newContent =\n        newContent.substring(0, end) +\n        newContent.substring(end + ending.length, start) +\n        newContent.substring(start + beginning.length);\n    }\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: T.Dict<T.RuleActivation[]>;\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: T.Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: T.RuleActivation[]; rule: T.RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    response => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (response && response.status === 409) {\n        return Promise.reject(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span\n      aria-label={translateWithParameters('tags_list_x', tags.join(', '))}\n      className={classNames('tags-list', className)}>\n      <TagsIcon className=\"text-middle\" />\n      <span aria-hidden={true} className=\"text-ellipsis text-middle\" title={tags.join(', ')}>\n        {tags.join(', ')}\n      </span>\n      {allowUpdate && <DropdownIcon className=\"text-middle\" />}\n    </span>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tags-list{white-space:nowrap;line-height:16px}.tags-list i:before{font-size:12px}.tags-list span{display:inline-block;vertical-align:middle;text-align:left;max-width:220px;padding-left:4px;padding-right:4px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\nimport './TagsList.css';\n\ninterface Props {\n  listSize: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  selectedTags: string[];\n  tags: string[];\n}\n\nexport default function TagsSelector(props: Props) {\n  return (\n    <MultiSelect\n      elements={props.tags}\n      listSize={props.listSize}\n      onSearch={props.onSearch}\n      onSelect={props.onSelect}\n      onUnselect={props.onUnselect}\n      placeholder={translate('search.search_for_tags')}\n      selectedElements={props.selectedTags}\n      validateSearchInput={validateTag}\n    />\n  );\n}\n\nexport function validateTag(value: string) {\n  // Allow only a-z, 0-9, '+', '-', '#', '.'\n  return value.toLowerCase().replace(/[^-a-z0-9+#.]/gi, '');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport './CodeSnippet.css';\n\ninterface Props {\n  className?: string;\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  render?: () => JSX.Element;\n  snippet: string | (string | undefined)[];\n  wrap?: boolean;\n}\n\n// keep this \"useless\" concatentation for the readability reason\n// eslint-disable-next-line no-useless-concat\nconst s = ' \\\\' + '\\n  ';\n\nexport default function CodeSnippet({\n  className,\n  isOneLine,\n  noCopy,\n  render,\n  snippet,\n  wrap\n}: Props) {\n  const snippetArray = Array.isArray(snippet)\n    ? snippet.filter(line => line !== undefined)\n    : [snippet];\n  const finalSnippet = isOneLine ? snippetArray.join(' ') : snippetArray.join(s);\n  return (\n    <div\n      className={classNames(\n        'code-snippet',\n        { 'code-snippet-oneline': isOneLine, 'code-snippet-wrap': wrap },\n        className\n      )}>\n      <pre>{render ? render() : finalSnippet}</pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(\n    () => getTask(id),\n    () => getTask(id)\n  );\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nclass HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const checked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const tooltip = checked ? translate('homepage.current') : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {checked ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={checked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={this.handleClick}>\n            <HomeIcon filled={checked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component &&\n    (a as any).organization === (b as any).organization\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst PROVIDED_TYPES = ['homepage', 'ci', 'issue', 'scm', 'scm_dev'];\ntype NameAndType = Pick<T.ProjectLink, 'name' | 'type'>;\n\nexport function isProvided(link: Pick<T.ProjectLink, 'type'>) {\n  return PROVIDED_TYPES.includes(link.type);\n}\n\nexport function orderLinks<T extends NameAndType>(links: T[]) {\n  const [provided, unknown] = partition<T>(links, isProvided);\n  return [\n    ...sortBy(provided, link => PROVIDED_TYPES.indexOf(link.type)),\n    ...sortBy(unknown, link => link.name && link.name.toLowerCase())\n  ];\n}\n\nexport function getLinkName(link: NameAndType) {\n  return isProvided(link) ? translate('project_links', link.type) : link.name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getBranchLikeQuery } from '../../helpers/branch-like';\nimport { getComponentDrilldownUrl, getComponentIssuesUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\n\nconst ISSUE_MEASURES = [\n  'violations',\n  'new_violations',\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'new_blocker_violations',\n  'new_critical_violations',\n  'new_major_violations',\n  'new_minor_violations',\n  'new_info_violations',\n  'open_issues',\n  'reopened_issues',\n  'confirmed_issues',\n  'false_positive_issues',\n  'code_smells',\n  'new_code_smells',\n  'bugs',\n  'new_bugs',\n  'vulnerabilities',\n  'new_vulnerabilities'\n];\n\nconst issueParamsPerMetric: T.Dict<T.Dict<string>> = {\n  blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  new_blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  new_critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  major_violations: { resolved: 'false', severities: 'MAJOR' },\n  new_major_violations: { resolved: 'false', severities: 'MAJOR' },\n  minor_violations: { resolved: 'false', severities: 'MINOR' },\n  new_minor_violations: { resolved: 'false', severities: 'MINOR' },\n  info_violations: { resolved: 'false', severities: 'INFO' },\n  new_info_violations: { resolved: 'false', severities: 'INFO' },\n  open_issues: { resolved: 'false', statuses: 'OPEN' },\n  reopened_issues: { resolved: 'false', statuses: 'REOPENED' },\n  confirmed_issues: { resolved: 'false', statuses: 'CONFIRMED' },\n  false_positive_issues: { resolutions: 'FALSE-POSITIVE' },\n  code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  new_code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  bugs: { resolved: 'false', types: 'BUG' },\n  new_bugs: { resolved: 'false', types: 'BUG' },\n  vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' },\n  new_vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' }\n};\n\ninterface Props {\n  branchLike?: BranchLike;\n  children?: React.ReactNode;\n  className?: string;\n  component: string;\n  metric: string;\n  sinceLeakPeriod?: boolean;\n}\n\nexport default class DrilldownLink extends React.PureComponent<Props> {\n  isIssueMeasure = () => {\n    return ISSUE_MEASURES.indexOf(this.props.metric) !== -1;\n  };\n\n  propsToIssueParams = () => {\n    const params: T.Dict<string | boolean> = {\n      ...(issueParamsPerMetric[this.props.metric] || { resolved: 'false' })\n    };\n\n    if (this.props.sinceLeakPeriod) {\n      params.sinceLeakPeriod = true;\n    }\n\n    return params;\n  };\n\n  renderIssuesLink = () => {\n    const url = getComponentIssuesUrl(this.props.component, {\n      ...this.propsToIssueParams(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    });\n\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  };\n\n  render() {\n    if (this.isIssueMeasure()) {\n      return this.renderIssuesLink();\n    }\n\n    const url = getComponentDrilldownUrl({\n      componentKey: this.props.component,\n      metric: this.props.metric,\n      branchLike: this.props.branchLike,\n      listView: true\n    });\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n"],"sourceRoot":""}