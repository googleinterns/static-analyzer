{"version":3,"sources":["webpack:///./src/main/js/apps/projectActivity/utils.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/api/projectActivity.ts","webpack:///./src/main/js/components/activity-graph/styles.css?935f","webpack:///./src/main/js/apps/projectActivity/components/DefinitionChangeEventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/RichQualityGateEventInner.tsx","webpack:///./src/main/js/api/time-machine.ts","webpack:///./src/main/js/components/activity-graph/styles.css","webpack:///./src/main/js/components/activity-graph/GraphsLegendItem.tsx","webpack:///./src/main/js/components/activity-graph/GraphsLegendCustom.tsx","webpack:///./src/main/js/components/activity-graph/GraphsLegendStatic.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContent.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContentCoverage.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContentDuplication.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContentEvents.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContentIssues.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltips.tsx","webpack:///./src/main/js/components/activity-graph/GraphHistory.tsx","webpack:///./src/main/js/components/activity-graph/GraphsHistory.tsx","webpack:///./src/main/js/apps/projectActivity/components/EventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/ChangeEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/RemoveEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/Event.tsx","webpack:///./src/main/js/apps/projectActivity/components/Events.tsx","webpack:///./src/main/js/components/activity-graph/AddGraphMetricPopup.tsx","webpack:///./src/main/js/components/activity-graph/AddGraphMetric.tsx","webpack:///./src/main/js/components/activity-graph/GraphsHeader.tsx","webpack:///./src/main/js/apps/projectActivity/components/projectActivity.css?580f","webpack:///./src/main/js/apps/projectActivity/components/projectActivity.css","webpack:///./src/main/js/apps/projectActivity/components/forms/AddEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/RemoveAnalysisForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityAnalysis.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityAnalysesList.tsx","webpack:///./src/main/js/components/activity-graph/GraphsZoom.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityGraphs.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityDateInput.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityEventSelectOption.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityEventSelectValue.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityPageHeader.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityApp.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityAppContainer.tsx","webpack:///./src/main/js/apps/projectActivity/actions.ts","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/types/component.ts","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/components/activity-graph/utils.ts","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/types/project-activity.ts","webpack:///./src/main/js/components/controls/DateInput.tsx","webpack:///./src/main/js/components/controls/DayPicker.css?d7e1","webpack:///./src/main/js/components/controls/DayPicker.css","webpack:///./src/main/js/components/controls/styles.css?5633","webpack:///./src/main/js/components/controls/styles.css","webpack:///./src/main/js/components/controls/DateRangeInput.tsx"],"names":["EVENT_TYPES","APPLICATION_EVENT_TYPES","activityQueryChanged","prevQuery","nextQuery","category","datesQueryChanged","customMetricsChanged","customMetrics","from","to","historyQueryChanged","graph","getAnalysesByVersionByDay","analyses","query","reduce","acc","analysis","currentVersion","length","versionEvent","events","find","event","newVersion","version","name","key","byDay","Object","keys","push","day","date","getTime","toString","matchFilters","isAfterFrom","isBeforeTo","hasSelectedCategoryEvents","parseQuery","urlQuery","value","includes","project","selectedDate","serializeQuery","serializeUrlQuery","custom_metrics","undefined","id","selected_date","ComponentContext","branchLike","component","getProjectActivity","data","catch","createEvent","description","then","r","deleteEvent","changeEvent","deleteAnalysis","api","content","__esModule","default","module","i","options","exported","locals","exports","isDefinitionChangeEvent","definitionChange","state","expanded","stopPropagation","toggleProjectsList","setState","renderProjectLink","branch","onClick","title","renderBranch","className","renderProjectChange","mainBranch","this","props","changeType","message","defaultMessage","values","newBranch","oldBranch","render","turned","projects","map","isRichQualityGateEvent","qualityGate","stillFailing","status","level","small","failing","getTimeMachineData","getAllTimeMachineData","prev","ps","result","measures","measure","idx","history","concat","paging","pageIndex","pageSize","total","p","___CSS_LOADER_API_IMPORT___","handleClick","removeMetric","metric","isActionable","legendClass","showWarning","index","iconProps","size","GraphsLegendCustom","series","serie","hasData","legendItem","translatedName","overlay","GraphsLegendStatic","GraphsTooltipsContent","GraphsTooltipsContentCoverage","addSeparator","measuresHistory","tooltipIdx","uncovered","coverage","uncoveredValue","coverageValue","colSpan","GraphsTooltipsContentDuplication","duplicationDensity","duplicationDensityValue","GraphsTooltipsContentEvents","METRIC_RATING","bugs","vulnerabilities","code_smells","GraphsTooltipsContentIssues","rating","ratingValue","renderContent","point","y","formatValue","left","tooltipPos","placement","RightTop","graphWidth","LeftTop","tooltipContent","filter","style","top","width","tick","metricsType","formatTooltipValue","updateTooltip","tooltipXPos","graphEndDate","graphStartDate","isCustom","leakPeriodDate","showAreas","removeCustomMetric","AutoSizer","height","endDate","formatYTick","metricType","startDate","updateSelectedDate","updateZoom","updateGraphZoom","getSelectedDateEvents","a","valueOf","componentWillReceiveProps","nextProps","loading","alt","src","maxWidth","duplications","graphs","graphSeries","EventInner","RichQualityGateEventInner","Consumer","DefinitionChangeEventInner","changeInput","target","handleSubmit","confirmButtonText","confirmDisable","header","onClose","onConfirm","autoFocus","onChange","type","RemoveEventForm","analysisKey","removeEventQuestion","isDestructive","canAdmin","isFirst","changing","setChanging","deleting","setDeleting","isOther","isVersion","canChange","canDelete","onDelete","showActions","sortedEvents","AddGraphMetricPopup","elements","metricsTypeFilter","footerNode","selectedElements","Alert","variant","sort","join","MultiSelect","allowNewElements","allowSelection","filterSelected","onSearch","onSelect","item","onUnselect","placeholder","renderLabel","metrics","selectedMetrics","element","getLocalizedMetricNameFromKey","toLowerCase","filterMetricsElements","hidden","getSelectedMetricsElements","selected","Promise","resolve","addMetric","filteredMetrics","handleGraphChange","option","updateGraph","addCustomMetric","selectOptions","label","clearable","searchable","handleNameChange","addEvent","addEventButtonText","RemoveAnalysisForm","confirmData","node","isBaseline","canCreateVersion","parentScrollContainer","bottomOffset","topOffset","parent","smooth","addEventForm","setAddEventForm","addVersionForm","setAddVersionForm","removeAnalysisForm","setRemoveAnalysisForm","parsedDate","hasVersion","canAddVersion","canAddEvent","canDeleteAnalyses","manualNewCodePeriodBaseline","ref","long","formattedTime","dateTime","toISOString","buildString","overlayPlacement","BottomRight","toggleClassName","ActionsDropdown","destructive","addVersion","addCustomEvent","Events","handleScroll","updateStickyBadges","resetScrollTop","newScrollTop","forceBadgeAlignement","scrollContainer","scrollTop","badges","removeAttribute","classList","remove","badge","originOffsetTop","getAttribute","String","offsetTop","setAttribute","Number","contains","add","updateQuery","componentDidMount","document","getElementsByClassName","componentDidUpdate","prevProps","shouldRenderBaselineMarker","Boolean","renderAnalysis","firstAnalysisKey","qualifier","Project","byVersionByDay","hasFilteredData","onScroll","paddingTop","days","first","mouseEnterDelay","analysesLoading","initializing","GraphsZoom","disableHeight","padding","getStateZoomDates","newSeries","newDates","firstValid","lastValid","x","getMetricsTypeFilter","PROJECT_ACTIVITY_GRAPH","custom","removedMetric","customGraphs","Math","abs","updateQueryDateRange","dates","sortedDates","newGraphs","newState","GraphsHeader","GraphsHistory","handleChange","handleResetClick","DateRangeInput","disabled","handleMouseDown","preventDefault","handleMouseEnter","onFocus","handleMouseMove","isFocused","onMouseDown","onMouseEnter","onMouseMove","role","tabIndex","children","ProjectActivityEventSelectValue","handleCategoryChange","isApp","optionComponent","valueComponent","ProjectActivityApp","configuration","showHistory","Suggestions","suggestions","defer","A11ySkipTarget","anchor","graphLoading","mounted","eventItem","updateGraphData","fetchActivity","additional","parameters","fetchMeasuresHistory","fetchAllActivities","topLevelComponent","loadAllActivities","prevResult","nextPage","getTopLevelComponent","current","breadcrumbs","graphMetrics","newQuery","router","pathname","location","shouldRedirect","locationQuery","filtered","some","emptyCustomGraph","initialized","replace","firstLoadData","componentWillUnmount","filterMetrics","all","addSuggestions","removeSuggestions","SuggestionsInner","ComponentQualifier","Visibility","isPortfolioLike","componentQualifier","Portfolio","SubPortfolio","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","DEFAULT_GRAPH","issues","GRAPHS_METRICS_DISPLAYED","lines_to_cover","uncovered_lines","ncloc","duplicated_lines","GRAPHS_METRICS","reliability_rating","security_rating","sqale_rating","duplicated_lines_density","isCustomGraph","getGraphTypes","ignoreCustom","hasDataValues","hasHistoryData","getSeriesMetricType","getDisplayedHistoryMetrics","getHistoryMetrics","splitSeriesInGraphs","maxGraph","maxSeries","slice","generateSeries","displayedMetrics","indexOf","uncoveredLines","linesToCover","generateCoveredLinesMetric","Array","isArray","findMetric","saveActivityGraph","namespace","getActivityGraph","split","MultiSelectOption","active","onHover","onMouseOver","checked","onCheck","onSelectChange","handleSelectChange","onSelectItem","onUnselectItem","handleSearchChange","onSearchQuery","validateSearchInput","handleElementHover","prevState","activeIdx","getAllElements","handleKeyboard","evt","keyCode","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","updateSelectedElements","updateUnselectedElements","listSize","unselectedElements","setElementActive","allElements","container","addEventListener","totalElements","searchInput","focus","removeEventListener","activeElement","showNewElement","infiniteList","listClasses","div","defaultProps","GraphType","DayPicker","input","openCalendar","closeCalendar","currentMonth","Date","lastHovered","open","handleDayClick","modifiers","handleDayMouseEnter","handleCurrentMonthChange","handleCurrentYearChange","handlePreviousMonthClick","handleNextMonthClick","highlightFrom","highlightTo","minDate","after","maxDate","months","years","getFullYear","selectedDays","lastHoveredOrValue","highlighted","weekdaysLong","weekdaysShort","onClickOutside","InputWrapper","inputClassName","innerRef","readOnly","fill","month","getMonth","year","captionElement","NullComponent","disabledDays","before","firstDayOfWeek","navbarElement","onDayClick","onDayMouseEnter","intl","formattedValue","formatDate","other","handleFromChange","setTimeout","toDateInput","handleToChange"],"mappings":"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","file":"js/316.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as startOfDay from 'date-fns/start_of_day';\nimport { isEqual } from 'lodash';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsDate,\n  parseAsString,\n  serializeDate,\n  serializeString,\n  serializeStringArray\n} from 'sonar-ui-common/helpers/query';\nimport { DEFAULT_GRAPH } from '../../components/activity-graph/utils';\nimport { GraphType } from '../../types/project-activity';\n\nexport interface Query {\n  category: string;\n  customMetrics: string[];\n  from?: Date;\n  graph: GraphType;\n  project: string;\n  selectedDate?: Date;\n  to?: Date;\n}\n\nexport const EVENT_TYPES = ['VERSION', 'QUALITY_GATE', 'QUALITY_PROFILE', 'OTHER'];\nexport const APPLICATION_EVENT_TYPES = ['QUALITY_GATE', 'DEFINITION_CHANGE', 'OTHER'];\n\nexport function activityQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.category !== nextQuery.category || datesQueryChanged(prevQuery, nextQuery);\n}\n\nexport function customMetricsChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.customMetrics, nextQuery.customMetrics);\n}\n\nexport function datesQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.from, nextQuery.from) || !isEqual(prevQuery.to, nextQuery.to);\n}\n\nexport function historyQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.graph !== nextQuery.graph;\n}\n\nexport function selectedDateQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.selectedDate, nextQuery.selectedDate);\n}\n\ninterface AnalysesByDay {\n  byDay: T.Dict<T.ParsedAnalysis[]>;\n  version: string | null;\n  key: string | null;\n}\n\nexport function getAnalysesByVersionByDay(\n  analyses: T.ParsedAnalysis[],\n  query: Pick<Query, 'category' | 'from' | 'to'>\n) {\n  return analyses.reduce<AnalysesByDay[]>((acc, analysis) => {\n    let currentVersion = acc[acc.length - 1];\n    const versionEvent = analysis.events.find(event => event.category === 'VERSION');\n    if (versionEvent) {\n      const newVersion = { version: versionEvent.name, key: versionEvent.key, byDay: {} };\n      if (!currentVersion || Object.keys(currentVersion.byDay).length > 0) {\n        acc.push(newVersion);\n      } else {\n        acc[acc.length - 1] = newVersion;\n      }\n      currentVersion = newVersion;\n    } else if (!currentVersion) {\n      // APPs don't have version events, so let's create a fake one\n      currentVersion = { version: null, key: null, byDay: {} };\n      acc.push(currentVersion);\n    }\n\n    const day = startOfDay(parseDate(analysis.date))\n      .getTime()\n      .toString();\n\n    let matchFilters = true;\n    if (query.category || query.from || query.to) {\n      const isAfterFrom = !query.from || analysis.date >= query.from;\n      const isBeforeTo = !query.to || analysis.date <= query.to;\n      const hasSelectedCategoryEvents =\n        !query.category || analysis.events.find(event => event.category === query.category) != null;\n      matchFilters = isAfterFrom && isBeforeTo && hasSelectedCategoryEvents;\n    }\n\n    if (matchFilters) {\n      if (!currentVersion.byDay[day]) {\n        currentVersion.byDay[day] = [];\n      }\n      currentVersion.byDay[day].push(analysis);\n    }\n    return acc;\n  }, []);\n}\n\nexport function parseQuery(urlQuery: T.RawQuery): Query {\n  return {\n    category: parseAsString(urlQuery['category']),\n    customMetrics: parseAsArray(urlQuery['custom_metrics'], parseAsString),\n    from: parseAsDate(urlQuery['from']),\n    graph: parseGraph(urlQuery['graph']),\n    project: parseAsString(urlQuery['id']),\n    to: parseAsDate(urlQuery['to']),\n    selectedDate: parseAsDate(urlQuery['selected_date'])\n  };\n}\n\nexport function serializeQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    from: serializeDate(query.from),\n    project: serializeString(query.project),\n    to: serializeDate(query.to)\n  });\n}\n\nexport function serializeUrlQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    custom_metrics: serializeStringArray(query.customMetrics),\n    from: serializeDate(query.from),\n    graph: serializeGraph(query.graph),\n    id: serializeString(query.project),\n    to: serializeDate(query.to),\n    selected_date: serializeDate(query.selectedDate)\n  });\n}\n\nfunction parseGraph(value?: string) {\n  const graph = parseAsString(value);\n  return Object.keys(GraphType).includes(graph) ? (graph as GraphType) : DEFAULT_GRAPH;\n}\n\nfunction serializeGraph(value?: GraphType) {\n  return value === DEFAULT_GRAPH ? undefined : value;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getProjectActivity(\n  data: {\n    project: string;\n    category?: string;\n    from?: string;\n    p?: number;\n    ps?: number;\n  } & BranchParameters\n): Promise<{ analyses: T.Analysis[]; paging: T.Paging }> {\n  return getJSON('/api/project_analyses/search', data).catch(throwGlobalError);\n}\n\ninterface CreateEventResponse {\n  analysis: string;\n  key: string;\n  name: string;\n  category: string;\n  description?: string;\n}\n\nexport function createEvent(\n  analysis: string,\n  name: string,\n  category?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { analysis, name };\n  if (category) {\n    data.category = category;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/create_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteEvent(event: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete_event', { event }).catch(throwGlobalError);\n}\n\nexport function changeEvent(\n  event: string,\n  name?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { event };\n  if (name) {\n    data.name = name;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/update_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteAnalysis(analysis: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete', { analysis }).catch(throwGlobalError);\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { limitComponentName } from 'sonar-ui-common/helpers/path';\nimport { isMainBranch } from '../../../helpers/branch-like';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BranchLike } from '../../../types/branch-like';\n\nexport type DefinitionChangeEvent = T.AnalysisEvent &\n  Required<Pick<T.AnalysisEvent, 'definitionChange'>>;\n\nexport function isDefinitionChangeEvent(event: T.AnalysisEvent): event is DefinitionChangeEvent {\n  return event.category === 'DEFINITION_CHANGE' && event.definitionChange !== undefined;\n}\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  event: DefinitionChangeEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class DefinitionChangeEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  renderProjectLink = (project: { key: string; name: string }, branch: string | undefined) => (\n    <Link\n      onClick={this.stopPropagation}\n      title={project.name}\n      to={getProjectUrl(project.key, branch)}>\n      {limitComponentName(project.name, 28)}\n    </Link>\n  );\n\n  renderBranch = (branch = translate('branches.main_branch')) => (\n    <span className=\"nowrap\" title={branch}>\n      <BranchIcon className=\"little-spacer-left text-text-top\" />\n      {branch}\n    </span>\n  );\n\n  renderProjectChange(project: {\n    changeType: string;\n    key: string;\n    name: string;\n    branch?: string;\n    newBranch?: string;\n    oldBranch?: string;\n  }) {\n    const mainBranch = !this.props.branchLike || isMainBranch(this.props.branchLike);\n\n    if (project.changeType === 'ADDED') {\n      const message = mainBranch\n        ? 'event.definition_change.added'\n        : 'event.definition_change.branch_added';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'REMOVED') {\n      const message = mainBranch\n        ? 'event.definition_change.removed'\n        : 'event.definition_change.branch_removed';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'BRANCH_CHANGED') {\n      return (\n        <FormattedMessage\n          defaultMessage={translate('event.definition_change.branch_replaced')}\n          id=\"event.definition_change.branch_replaced\"\n          values={{\n            project: this.renderProjectLink(project, project.newBranch),\n            oldBranch: this.renderBranch(project.oldBranch),\n            newBranch: this.renderBranch(project.newBranch)\n          }}\n        />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <>\n        <span className=\"note\">{translate('event.category', event.category)}:</span>\n\n        <div>\n          <ResetButtonLink\n            className=\"project-activity-event-inner-more-link\"\n            onClick={this.toggleProjectsList}\n            stopPropagation={true}>\n            {expanded ? translate('hide') : translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n          </ResetButtonLink>\n        </div>\n\n        {expanded && (\n          <ul className=\"spacer-left spacer-top\">\n            {event.definitionChange.projects.map(project => (\n              <li className=\"display-flex-center spacer-top\" key={project.key}>\n                {this.renderProjectChange(project)}\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\n\nexport type RichQualityGateEvent = T.AnalysisEvent & Required<Pick<T.AnalysisEvent, 'qualityGate'>>;\n\nexport function isRichQualityGateEvent(event: T.AnalysisEvent): event is RichQualityGateEvent {\n  return event.category === 'QUALITY_GATE' && event.qualityGate !== undefined;\n}\n\ninterface Props {\n  event: RichQualityGateEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class RichQualityGateEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <>\n        <span className=\"note spacer-right\">{translate('event.category', event.category)}:</span>\n        {event.qualityGate.stillFailing ? (\n          <FormattedMessage\n            defaultMessage={translate('event.quality_gate.still_x')}\n            id=\"event.quality_gate.still_x\"\n            values={{ status: <Level level={event.qualityGate.status} small={true} /> }}\n          />\n        ) : (\n          <Level level={event.qualityGate.status} small={true} />\n        )}\n\n        <div>\n          {event.qualityGate.failing.length > 0 && (\n            <ResetButtonLink\n              className=\"project-activity-event-inner-more-link\"\n              onClick={this.toggleProjectsList}\n              stopPropagation={true}>\n              {expanded ? translate('hide') : translate('more')}\n              <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n            </ResetButtonLink>\n          )}\n        </div>\n\n        {expanded && (\n          <ul className=\"spacer-left spacer-top\">\n            {event.qualityGate.failing.map(project => (\n              <li className=\"display-flex-center spacer-top\" key={project.key}>\n                <Level\n                  aria-label={translate('quality_gates.status')}\n                  className=\"spacer-right\"\n                  level={event.qualityGate.status}\n                  small={true}\n                />\n                <div className=\"flex-1 text-ellipsis\">\n                  <Link\n                    onClick={this.stopPropagation}\n                    title={project.name}\n                    to={getProjectUrl(project.key, project.branch)}>\n                    <span aria-label={translateWithParameters('project_x', project.name)}>\n                      {project.name}\n                    </span>\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\ninterface TimeMachineResponse {\n  measures: {\n    metric: string;\n    history: Array<{ date: string; value?: string }>;\n  }[];\n  paging: T.Paging;\n}\n\nexport function getTimeMachineData(\n  data: {\n    component: string;\n    from?: string;\n    metrics: string;\n    p?: number;\n    ps?: number;\n    to?: string;\n  } & BranchParameters\n): Promise<TimeMachineResponse> {\n  return getJSON('/api/measures/search_history', data).catch(throwGlobalError);\n}\n\nexport function getAllTimeMachineData(\n  data: {\n    component: string;\n    metrics: string;\n    from?: string;\n    p?: number;\n    to?: string;\n  } & BranchParameters,\n  prev?: TimeMachineResponse\n): Promise<TimeMachineResponse> {\n  return getTimeMachineData({ ...data, ps: 1000 }).then(r => {\n    const result = prev\n      ? {\n          measures: prev.measures.map((measure, idx) => ({\n            ...measure,\n            history: measure.history.concat(r.measures[idx].history)\n          })),\n          paging: r.paging\n        }\n      : r;\n\n    if (result.paging.pageIndex * result.paging.pageSize >= result.paging.total) {\n      return result;\n    }\n    return getAllTimeMachineData({ ...data, p: result.paging.pageIndex + 1 }, result);\n  });\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".activity-graph-container{padding:10px 0}.activity-graph-tooltip{padding:8px}.activity-graph-tooltip-line{height:20px}.activity-graph-tooltip-line+.activity-graph-tooltip-line{padding-top:4px}.activity-graph-tooltip-issues-line{height:26px;padding-bottom:4px}.activity-graph-tooltip-separator{padding-left:16px;padding-right:16px}.activity-graph-tooltip-separator hr{margin-top:8px;margin-bottom:8px}.activity-graph-tooltip-title,.activity-graph-tooltip-value{font-weight:700}.activity-graph-legends{flex-grow:0;padding-bottom:16px;text-align:center}.activity-graph-legend-actionable{display:inline-block;padding:4px 8px 4px 12px;border-width:1px;border-style:solid;border-radius:12px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertWarnIcon from 'sonar-ui-common/components/icons/AlertWarnIcon';\nimport ChartLegendIcon from 'sonar-ui-common/components/icons/ChartLegendIcon';\n\ninterface Props {\n  className?: string;\n  index: number;\n  metric: string;\n  name: string;\n  showWarning?: boolean;\n  removeMetric?: (metric: string) => void;\n}\n\nexport default class GraphsLegendItem extends React.PureComponent<Props> {\n  handleClick = () => {\n    if (this.props.removeMetric) {\n      this.props.removeMetric(this.props.metric);\n    }\n  };\n\n  render() {\n    const isActionable = this.props.removeMetric != null;\n    const legendClass = classNames(\n      { 'activity-graph-legend-actionable': isActionable },\n      this.props.className\n    );\n    return (\n      <span className={legendClass}>\n        {this.props.showWarning ? (\n          <AlertWarnIcon className=\"spacer-right\" />\n        ) : (\n          <ChartLegendIcon className=\"text-middle spacer-right\" index={this.props.index} />\n        )}\n        <span className=\"text-middle\">{this.props.name}</span>\n        {isActionable && (\n          <ClearButton\n            className=\"button-tiny spacer-left text-middle\"\n            iconProps={{ size: 12 }}\n            onClick={this.handleClick}\n          />\n        )}\n      </span>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Serie } from '../../types/project-activity';\nimport GraphsLegendItem from './GraphsLegendItem';\nimport { hasDataValues } from './utils';\n\ninterface Props {\n  removeMetric: (metric: string) => void;\n  series: Serie[];\n}\n\nexport default function GraphsLegendCustom({ removeMetric, series }: Props) {\n  return (\n    <div className=\"activity-graph-legends\">\n      {series.map((serie, idx) => {\n        const hasData = hasDataValues(serie);\n        const legendItem = (\n          <GraphsLegendItem\n            index={idx}\n            metric={serie.name}\n            name={serie.translatedName}\n            removeMetric={removeMetric}\n            showWarning={!hasData}\n          />\n        );\n        if (!hasData) {\n          return (\n            <Tooltip\n              key={serie.name}\n              overlay={translate('project_activity.graphs.custom.metric_no_history')}>\n              <span className=\"spacer-left spacer-right\">{legendItem}</span>\n            </Tooltip>\n          );\n        }\n        return (\n          <span className=\"spacer-left spacer-right\" key={serie.name}>\n            {legendItem}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Serie } from '../../types/project-activity';\nimport GraphsLegendItem from './GraphsLegendItem';\n\ninterface Props {\n  series: Array<Pick<Serie, 'name' | 'translatedName'>>;\n}\n\nexport default function GraphsLegendStatic({ series }: Props) {\n  return (\n    <div className=\"activity-graph-legends\">\n      {series.map((serie, idx) => (\n        <GraphsLegendItem\n          className=\"big-spacer-left big-spacer-right\"\n          index={idx}\n          key={serie.name}\n          metric={serie.name}\n          name={serie.translatedName}\n        />\n      ))}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChartLegendIcon from 'sonar-ui-common/components/icons/ChartLegendIcon';\n\ninterface Props {\n  name: string;\n  index: number;\n  translatedName: string;\n  value: string;\n}\n\nexport default function GraphsTooltipsContent({ name, index, translatedName, value }: Props) {\n  return (\n    <tr className=\"activity-graph-tooltip-line\" key={name}>\n      <td className=\"thin\">\n        <ChartLegendIcon className=\"spacer-right\" index={index} />\n      </td>\n      <td className=\"activity-graph-tooltip-value text-right spacer-right thin\">{value}</td>\n      <td>{translatedName}</td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { MeasureHistory } from '../../types/project-activity';\n\nexport interface GraphsTooltipsContentCoverageProps {\n  addSeparator: boolean;\n  measuresHistory: MeasureHistory[];\n  tooltipIdx: number;\n}\n\nexport default function GraphsTooltipsContentCoverage({\n  addSeparator,\n  measuresHistory,\n  tooltipIdx\n}: GraphsTooltipsContentCoverageProps) {\n  const uncovered = measuresHistory.find(measure => measure.metric === 'uncovered_lines');\n  const coverage = measuresHistory.find(measure => measure.metric === 'coverage');\n  if (!uncovered || !uncovered.history[tooltipIdx] || !coverage || !coverage.history[tooltipIdx]) {\n    return null;\n  }\n  const uncoveredValue = uncovered.history[tooltipIdx].value;\n  const coverageValue = coverage.history[tooltipIdx].value;\n  return (\n    <tbody>\n      {addSeparator && (\n        <tr>\n          <td className=\"activity-graph-tooltip-separator\" colSpan={3}>\n            <hr />\n          </td>\n        </tr>\n      )}\n      {uncoveredValue && (\n        <tr className=\"activity-graph-tooltip-line\">\n          <td className=\"activity-graph-tooltip-value text-right spacer-right thin\" colSpan={2}>\n            {formatMeasure(uncoveredValue, 'SHORT_INT')}\n          </td>\n          <td>{translate('metric.uncovered_lines.name')}</td>\n        </tr>\n      )}\n      {coverageValue && (\n        <tr className=\"activity-graph-tooltip-line\">\n          <td className=\"activity-graph-tooltip-value text-right spacer-right thin\" colSpan={2}>\n            {formatMeasure(coverageValue, 'PERCENT')}\n          </td>\n          <td>{translate('metric.coverage.name')}</td>\n        </tr>\n      )}\n    </tbody>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { MeasureHistory } from '../../types/project-activity';\n\nexport interface GraphsTooltipsContentDuplicationProps {\n  addSeparator: boolean;\n  measuresHistory: MeasureHistory[];\n  tooltipIdx: number;\n}\n\nexport default function GraphsTooltipsContentDuplication({\n  addSeparator,\n  measuresHistory,\n  tooltipIdx\n}: GraphsTooltipsContentDuplicationProps) {\n  const duplicationDensity = measuresHistory.find(\n    measure => measure.metric === 'duplicated_lines_density'\n  );\n  if (!duplicationDensity || !duplicationDensity.history[tooltipIdx]) {\n    return null;\n  }\n  const duplicationDensityValue = duplicationDensity.history[tooltipIdx].value;\n  if (!duplicationDensityValue) {\n    return null;\n  }\n  return (\n    <tbody>\n      {addSeparator && (\n        <tr>\n          <td className=\"activity-graph-tooltip-separator\" colSpan={3}>\n            <hr />\n          </td>\n        </tr>\n      )}\n      <tr className=\"activity-graph-tooltip-line\">\n        <td className=\"activity-graph-tooltip-value text-right spacer-right thin\" colSpan={2}>\n          {formatMeasure(duplicationDensityValue, 'PERCENT')}\n        </td>\n        <td>{translate('metric.duplicated_lines_density.name')}</td>\n      </tr>\n    </tbody>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  addSeparator: boolean;\n  events: T.AnalysisEvent[];\n}\n\nexport default function GraphsTooltipsContentEvents({ addSeparator, events }: Props) {\n  return (\n    <tbody>\n      {addSeparator && (\n        <tr>\n          <td className=\"activity-graph-tooltip-separator\" colSpan={3}>\n            <hr />\n          </td>\n        </tr>\n      )}\n      <tr className=\"activity-graph-tooltip-line\">\n        <td colSpan={3}>\n          <span>{translate('events')}:</span>\n          {events.map(event => (\n            <span className=\"spacer-left\" key={event.key}>\n              <ProjectEventIcon\n                className={classNames('project-activity-event-icon', event.category)}\n              />\n            </span>\n          ))}\n        </td>\n      </tr>\n    </tbody>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChartLegendIcon from 'sonar-ui-common/components/icons/ChartLegendIcon';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { MeasureHistory } from '../../types/project-activity';\n\nexport interface GraphsTooltipsContentIssuesProps {\n  index: number;\n  measuresHistory: MeasureHistory[];\n  name: string;\n  tooltipIdx: number;\n  translatedName: string;\n  value: string;\n}\n\nconst METRIC_RATING: T.Dict<string> = {\n  bugs: 'reliability_rating',\n  vulnerabilities: 'security_rating',\n  code_smells: 'sqale_rating'\n};\n\nexport default function GraphsTooltipsContentIssues(props: GraphsTooltipsContentIssuesProps) {\n  const rating = props.measuresHistory.find(\n    measure => measure.metric === METRIC_RATING[props.name]\n  );\n  if (!rating || !rating.history[props.tooltipIdx]) {\n    return null;\n  }\n  const ratingValue = rating.history[props.tooltipIdx].value;\n  return (\n    <tr className=\"activity-graph-tooltip-issues-line\" key={props.name}>\n      <td className=\"thin\">\n        <ChartLegendIcon className=\"spacer-right\" index={props.index} />\n      </td>\n      <td className=\"text-right spacer-right\">\n        <span className=\"activity-graph-tooltip-value\">{props.value}</span>\n        {ratingValue && <Rating className=\"spacer-left\" small={true} value={ratingValue} />}\n      </td>\n      <td>{props.translatedName}</td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { Popup, PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { MeasureHistory, Serie } from '../../types/project-activity';\nimport GraphsTooltipsContent from './GraphsTooltipsContent';\nimport GraphsTooltipsContentCoverage from './GraphsTooltipsContentCoverage';\nimport GraphsTooltipsContentDuplication from './GraphsTooltipsContentDuplication';\nimport GraphsTooltipsContentEvents from './GraphsTooltipsContentEvents';\nimport GraphsTooltipsContentIssues from './GraphsTooltipsContentIssues';\nimport { DEFAULT_GRAPH } from './utils';\n\ninterface Props {\n  events: T.AnalysisEvent[];\n  formatValue: (tick: number | string) => string;\n  graph: string;\n  graphWidth: number;\n  measuresHistory: MeasureHistory[];\n  selectedDate: Date;\n  series: Serie[];\n  tooltipIdx: number;\n  tooltipPos: number;\n}\n\nconst TOOLTIP_WIDTH = 250;\n\nexport default class GraphsTooltips extends React.PureComponent<Props> {\n  renderContent() {\n    const { tooltipIdx } = this.props;\n\n    return this.props.series.map((serie, idx) => {\n      const point = serie.data[tooltipIdx];\n      if (!point || (!point.y && point.y !== 0)) {\n        return null;\n      }\n      if (this.props.graph === DEFAULT_GRAPH) {\n        return (\n          <GraphsTooltipsContentIssues\n            index={idx}\n            key={serie.name}\n            measuresHistory={this.props.measuresHistory}\n            name={serie.name}\n            tooltipIdx={tooltipIdx}\n            translatedName={serie.translatedName}\n            value={this.props.formatValue(point.y)}\n          />\n        );\n      } else {\n        return (\n          <GraphsTooltipsContent\n            index={idx}\n            key={serie.name}\n            name={serie.name}\n            translatedName={serie.translatedName}\n            value={this.props.formatValue(point.y)}\n          />\n        );\n      }\n    });\n  }\n\n  render() {\n    const { events, measuresHistory, tooltipIdx } = this.props;\n    const top = 30;\n    let left = this.props.tooltipPos + 60;\n    let placement = PopupPlacement.RightTop;\n    if (left > this.props.graphWidth - TOOLTIP_WIDTH - 50) {\n      left -= TOOLTIP_WIDTH;\n      placement = PopupPlacement.LeftTop;\n    }\n    const tooltipContent = this.renderContent().filter(isDefined);\n    const addSeparator = tooltipContent.length > 0;\n    return (\n      <Popup\n        className=\"disabled-pointer-events\"\n        placement={placement}\n        style={{ top, left, width: TOOLTIP_WIDTH }}>\n        <div className=\"activity-graph-tooltip\">\n          <div className=\"activity-graph-tooltip-title spacer-bottom\">\n            <DateTimeFormatter date={this.props.selectedDate} />\n          </div>\n          <table className=\"width-100\">\n            <tbody>{tooltipContent}</tbody>\n            {this.props.graph === 'coverage' && (\n              <GraphsTooltipsContentCoverage\n                addSeparator={addSeparator}\n                measuresHistory={measuresHistory}\n                tooltipIdx={tooltipIdx}\n              />\n            )}\n            {this.props.graph === 'duplications' && (\n              <GraphsTooltipsContentDuplication\n                addSeparator={addSeparator}\n                measuresHistory={measuresHistory}\n                tooltipIdx={tooltipIdx}\n              />\n            )}\n            {events && events.length > 0 && (\n              <GraphsTooltipsContentEvents addSeparator={addSeparator} events={events} />\n            )}\n          </table>\n        </div>\n      </Popup>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized/dist/commonjs/AutoSizer';\nimport AdvancedTimeline from 'sonar-ui-common/components/charts/AdvancedTimeline';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getShortType } from '../../helpers/measures';\nimport { MeasureHistory, Serie } from '../../types/project-activity';\nimport GraphsLegendCustom from './GraphsLegendCustom';\nimport GraphsLegendStatic from './GraphsLegendStatic';\nimport GraphsTooltips from './GraphsTooltips';\n\ninterface Props {\n  events: T.AnalysisEvent[];\n  graph: string;\n  graphEndDate?: Date;\n  graphStartDate?: Date;\n  leakPeriodDate?: Date;\n  isCustom?: boolean;\n  measuresHistory: MeasureHistory[];\n  metricsType: string;\n  removeCustomMetric?: (metric: string) => void;\n  showAreas: boolean;\n  series: Serie[];\n  selectedDate?: Date;\n  updateGraphZoom?: (from?: Date, to?: Date) => void;\n  updateSelectedDate?: (selectedDate?: Date) => void;\n  updateTooltip: (selectedDate?: Date) => void;\n}\n\ninterface State {\n  tooltipIdx?: number;\n  tooltipXPos?: number;\n}\n\nexport default class GraphHistory extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  formatValue = (tick: string | number) => {\n    return formatMeasure(tick, getShortType(this.props.metricsType));\n  };\n\n  formatTooltipValue = (tick: string | number) => {\n    return formatMeasure(tick, this.props.metricsType);\n  };\n\n  updateTooltip = (selectedDate?: Date, tooltipXPos?: number, tooltipIdx?: number) => {\n    this.props.updateTooltip(selectedDate);\n    this.setState({ tooltipXPos, tooltipIdx });\n  };\n\n  render() {\n    const {\n      events,\n      graph,\n      graphEndDate,\n      graphStartDate,\n      isCustom,\n      leakPeriodDate,\n      measuresHistory,\n      metricsType,\n      selectedDate,\n      series,\n      showAreas\n    } = this.props;\n    const { tooltipIdx, tooltipXPos } = this.state;\n\n    return (\n      <div className=\"activity-graph-container flex-grow display-flex-column display-flex-stretch display-flex-justify-center\">\n        {isCustom && this.props.removeCustomMetric ? (\n          <GraphsLegendCustom removeMetric={this.props.removeCustomMetric} series={series} />\n        ) : (\n          <GraphsLegendStatic series={series} />\n        )}\n        <div className=\"flex-1\">\n          <AutoSizer>\n            {({ height, width }) => (\n              <div>\n                <AdvancedTimeline\n                  endDate={graphEndDate}\n                  formatYTick={this.formatValue}\n                  height={height}\n                  leakPeriodDate={leakPeriodDate}\n                  metricType={metricsType}\n                  selectedDate={selectedDate}\n                  series={series}\n                  showAreas={showAreas}\n                  startDate={graphStartDate}\n                  updateSelectedDate={this.props.updateSelectedDate}\n                  updateTooltip={this.updateTooltip}\n                  updateZoom={this.props.updateGraphZoom}\n                  width={width}\n                />\n                {selectedDate !== undefined &&\n                  tooltipIdx !== undefined &&\n                  tooltipXPos !== undefined && (\n                    <GraphsTooltips\n                      events={events}\n                      formatValue={this.formatTooltipValue}\n                      graph={graph}\n                      graphWidth={width}\n                      measuresHistory={measuresHistory}\n                      selectedDate={selectedDate}\n                      series={series}\n                      tooltipIdx={tooltipIdx}\n                      tooltipPos={tooltipXPos}\n                    />\n                  )}\n              </div>\n            )}\n          </AutoSizer>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual } from 'lodash';\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { GraphType, MeasureHistory, Serie } from '../../types/project-activity';\nimport GraphHistory from './GraphHistory';\nimport './styles.css';\nimport { getSeriesMetricType, hasHistoryData, isCustomGraph } from './utils';\n\ninterface Props {\n  analyses: T.ParsedAnalysis[];\n  graph: GraphType;\n  graphs: Serie[][];\n  graphEndDate?: Date;\n  graphStartDate?: Date;\n  leakPeriodDate?: Date;\n  loading: boolean;\n  measuresHistory: MeasureHistory[];\n  removeCustomMetric?: (metric: string) => void;\n  selectedDate?: Date;\n  series: Serie[];\n  updateGraphZoom?: (from?: Date, to?: Date) => void;\n  updateSelectedDate?: (selectedDate?: Date) => void;\n}\n\ninterface State {\n  selectedDate?: Date;\n}\n\nexport default class GraphsHistory extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectedDate: props.selectedDate\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (!isEqual(nextProps.selectedDate, this.props.selectedDate)) {\n      this.setState({ selectedDate: nextProps.selectedDate });\n    }\n  }\n\n  getSelectedDateEvents = () => {\n    const { selectedDate } = this.state;\n    const { analyses } = this.props;\n    if (analyses && selectedDate) {\n      const analysis = analyses.find(a => a.date.valueOf() === selectedDate.valueOf());\n      if (analysis) {\n        return analysis.events;\n      }\n    }\n    return [];\n  };\n\n  updateTooltip = (selectedDate?: Date) => {\n    this.setState({ selectedDate });\n  };\n\n  render() {\n    const { graph, loading, series } = this.props;\n    const isCustom = isCustomGraph(graph);\n\n    if (loading) {\n      return (\n        <div className=\"activity-graph-container flex-grow display-flex-column display-flex-stretch display-flex-justify-center\">\n          <div className=\"text-center\">\n            <DeferredSpinner loading={loading} />\n          </div>\n        </div>\n      );\n    }\n\n    if (!hasHistoryData(series)) {\n      return (\n        <div className=\"activity-graph-container flex-grow display-flex-column display-flex-stretch display-flex-justify-center\">\n          <div className=\"display-flex-center display-flex-justify-center\">\n            <img\n              alt=\"\" /* Make screen readers ignore this image; it's purely eye candy. */\n              className=\"spacer-right\"\n              height={52}\n              src={`${getBaseUrl()}/images/activity-chart.svg`}\n            />\n            <div className=\"big-spacer-left big text-muted\" style={{ maxWidth: 300 }}>\n              {translate(\n                isCustom\n                  ? 'project_activity.graphs.custom.no_history'\n                  : 'component_measures.no_history'\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    const events = this.getSelectedDateEvents();\n    const showAreas = [GraphType.coverage, GraphType.duplications].includes(graph);\n    return (\n      <div className=\"display-flex-justify-center display-flex-column display-flex-stretch flex-grow\">\n        {this.props.graphs.map((graphSeries, idx) => (\n          <GraphHistory\n            events={events}\n            graph={graph}\n            graphEndDate={this.props.graphEndDate}\n            graphStartDate={this.props.graphStartDate}\n            isCustom={isCustom}\n            key={idx}\n            leakPeriodDate={this.props.leakPeriodDate}\n            measuresHistory={this.props.measuresHistory}\n            metricsType={getSeriesMetricType(graphSeries)}\n            removeCustomMetric={this.props.removeCustomMetric}\n            selectedDate={this.state.selectedDate}\n            series={graphSeries}\n            showAreas={showAreas}\n            updateGraphZoom={this.props.updateGraphZoom}\n            updateSelectedDate={this.props.updateSelectedDate}\n            updateTooltip={this.updateTooltip}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ComponentContext } from '../../../app/components/ComponentContext';\nimport { DefinitionChangeEventInner, isDefinitionChangeEvent } from './DefinitionChangeEventInner';\nimport { isRichQualityGateEvent, RichQualityGateEventInner } from './RichQualityGateEventInner';\n\nexport interface EventInnerProps {\n  event: T.AnalysisEvent;\n}\n\nexport default function EventInner({ event }: EventInnerProps) {\n  if (isRichQualityGateEvent(event)) {\n    return <RichQualityGateEventInner event={event} />;\n  } else if (isDefinitionChangeEvent(event)) {\n    return (\n      <ComponentContext.Consumer>\n        {({ branchLike }) => <DefinitionChangeEventInner branchLike={branchLike} event={event} />}\n      </ComponentContext.Consumer>\n    );\n  } else {\n    const content = (\n      <span className=\"text-middle\">\n        <span className=\"note little-spacer-right\">\n          {translate('event.category', event.category)}:\n        </span>\n        <strong className=\"spacer-right\">{event.name}</strong>\n      </span>\n    );\n    return event.description ? <Tooltip overlay={event.description}>{content}</Tooltip> : content;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  changeEvent: (event: string, name: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  header: string;\n  onClose: () => void;\n}\n\ninterface State {\n  name: string;\n}\n\nexport default class ChangeEventForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { name: props.event.name };\n  }\n\n  changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = () => {\n    return this.props.changeEvent(this.props.event.key, this.state.name);\n  };\n\n  render() {\n    const { name } = this.state;\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('change_verb')}\n        confirmDisable={!name || name === this.props.event.name}\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}\n        size=\"small\">\n        <div className=\"modal-field\">\n          <label>{translate('name')}</label>\n          <input autoFocus={true} onChange={this.changeInput} type=\"text\" value={name} />\n        </div>\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface RemoveEventFormProps {\n  analysisKey: string;\n  event: T.AnalysisEvent;\n  header: string;\n  removeEventQuestion: string;\n  onClose: () => void;\n  onConfirm: (analysis: string, event: string) => Promise<void>;\n}\n\nexport default function RemoveEventForm(props: RemoveEventFormProps) {\n  const { analysisKey, event, header, removeEventQuestion } = props;\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      header={header}\n      isDestructive={true}\n      onClose={props.onClose}\n      onConfirm={() => props.onConfirm(analysisKey, event.key)}>\n      {removeEventQuestion}\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DeleteButton, EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport EventInner from './EventInner';\nimport ChangeEventForm from './forms/ChangeEventForm';\nimport RemoveEventForm from './forms/RemoveEventForm';\n\nexport interface EventProps {\n  analysisKey: string;\n  canAdmin?: boolean;\n  event: T.AnalysisEvent;\n  isFirst?: boolean;\n  onChange?: (event: string, name: string) => Promise<void>;\n  onDelete?: (analysisKey: string, event: string) => Promise<void>;\n}\n\nexport function Event(props: EventProps) {\n  const { analysisKey, event, canAdmin, isFirst } = props;\n\n  const [changing, setChanging] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n\n  const isOther = event.category === 'OTHER';\n  const isVersion = event.category === 'VERSION';\n  const canChange = (isOther || isVersion) && props.onChange;\n  const canDelete = (isOther || (isVersion && !isFirst)) && props.onDelete;\n  const showActions = canAdmin && (canChange || canDelete);\n\n  return (\n    <div className=\"project-activity-event\">\n      <ProjectEventIcon\n        className={classNames(\n          'project-activity-event-icon little-spacer-right text-middle',\n          event.category\n        )}\n      />\n\n      <EventInner event={event} />\n\n      {showActions && (\n        <span className=\"nowrap\">\n          {canChange && (\n            <EditButton\n              aria-label={translate('project_activity.events.tooltip.edit')}\n              className=\"button-small\"\n              data-test=\"project-activity__edit-event\"\n              onClick={() => setChanging(true)}\n              stopPropagation={true}\n            />\n          )}\n          {canDelete && (\n            <DeleteButton\n              aria-label={translate('project_activity.events.tooltip.delete')}\n              className=\"button-small\"\n              data-test=\"project-activity__delete-event\"\n              onClick={() => setDeleting(true)}\n              stopPropagation={true}\n            />\n          )}\n        </span>\n      )}\n\n      {changing && props.onChange && (\n        <ChangeEventForm\n          changeEvent={props.onChange}\n          event={event}\n          header={\n            isVersion\n              ? translate('project_activity.change_version')\n              : translate('project_activity.change_custom_event')\n          }\n          onClose={() => setChanging(false)}\n        />\n      )}\n\n      {deleting && props.onDelete && (\n        <RemoveEventForm\n          analysisKey={analysisKey}\n          event={event}\n          header={\n            isVersion\n              ? translate('project_activity.remove_version')\n              : translate('project_activity.remove_custom_event')\n          }\n          onClose={() => setDeleting(false)}\n          onConfirm={props.onDelete}\n          removeEventQuestion={translate(\n            `project_activity.${isVersion ? 'remove_version' : 'remove_custom_event'}.question`\n          )}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(Event);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Event from './Event';\n\nexport interface EventsProps {\n  analysisKey: string;\n  canAdmin?: boolean;\n  events: T.AnalysisEvent[];\n  isFirst?: boolean;\n  onChange?: (event: string, name: string) => Promise<void>;\n  onDelete?: (analysis: string, event: string) => Promise<void>;\n}\n\nexport function Events(props: EventsProps) {\n  const { analysisKey, canAdmin, events, isFirst } = props;\n\n  const sortedEvents = sortBy(\n    events,\n    // versions last\n    event => (event.category === 'VERSION' ? 1 : 0),\n    // then the rest sorted by category\n    'category'\n  );\n\n  return (\n    <div className=\"big-spacer-top\">\n      {sortedEvents.map(event => (\n        <Event\n          analysisKey={analysisKey}\n          canAdmin={canAdmin}\n          event={event}\n          isFirst={isFirst}\n          key={event.key}\n          onChange={props.onChange}\n          onDelete={props.onDelete}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default React.memo(Events);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\n\nexport interface AddGraphMetricPopupProps {\n  elements: string[];\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  metricsTypeFilter?: string[];\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  popupPosition?: any;\n  renderLabel: (element: string) => React.ReactNode;\n  selectedElements: string[];\n}\n\nexport default function AddGraphMetricPopup({\n  elements,\n  metricsTypeFilter,\n  ...props\n}: AddGraphMetricPopupProps) {\n  let footerNode: React.ReactNode = '';\n\n  if (props.selectedElements.length >= 6) {\n    footerNode = (\n      <Alert className=\"spacer-left spacer-right spacer-top\" variant=\"info\">\n        {translate('project_activity.graphs.custom.add_metric_info')}\n      </Alert>\n    );\n  } else if (metricsTypeFilter && metricsTypeFilter.length > 0) {\n    footerNode = (\n      <Alert className=\"spacer-left spacer-right spacer-top\" variant=\"info\">\n        {translateWithParameters(\n          'project_activity.graphs.custom.type_x_message',\n          metricsTypeFilter\n            .map((type: string) => translate('metric.type', type))\n            .sort()\n            .join(', ')\n        )}\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"menu abs-width-300\">\n      <MultiSelect\n        allowNewElements={false}\n        allowSelection={props.selectedElements.length < 6}\n        elements={elements}\n        filterSelected={props.filterSelected}\n        footerNode={footerNode}\n        onSearch={props.onSearch}\n        onSelect={(item: string) => elements.includes(item) && props.onSelect(item)}\n        onUnselect={props.onUnselect}\n        placeholder={translate('search.search_for_tags')}\n        renderLabel={props.renderLabel}\n        selectedElements={props.selectedElements}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { isDiffMetric } from '../../helpers/measures';\nimport AddGraphMetricPopup from './AddGraphMetricPopup';\n\ninterface Props {\n  addMetric: (metric: string) => void;\n  className?: string;\n  metrics: T.Metric[];\n  metricsTypeFilter?: string[];\n  removeMetric: (metric: string) => void;\n  selectedMetrics: string[];\n}\n\ninterface State {\n  metrics: string[];\n  query: string;\n  selectedMetrics: string[];\n}\n\nexport default class AddGraphMetric extends React.PureComponent<Props, State> {\n  state: State = {\n    metrics: [],\n    query: '',\n    selectedMetrics: []\n  };\n\n  filterSelected = (query: string, selectedElements: string[]) => {\n    return selectedElements.filter(element =>\n      this.getLocalizedMetricNameFromKey(element)\n        .toLowerCase()\n        .includes(query.toLowerCase())\n    );\n  };\n\n  filterMetricsElements = (\n    { metricsTypeFilter, metrics, selectedMetrics }: Props,\n    query: string\n  ) => {\n    return metrics\n      .filter(metric => {\n        if (\n          metric.hidden ||\n          isDiffMetric(metric.key) ||\n          ['DATA', 'DISTRIB'].includes(metric.type) ||\n          selectedMetrics.includes(metric.key) ||\n          !getLocalizedMetricName(metric)\n            .toLowerCase()\n            .includes(query.toLowerCase())\n        ) {\n          return false;\n        }\n        if (metricsTypeFilter && metricsTypeFilter.length > 0) {\n          return metricsTypeFilter.includes(metric.type);\n        }\n        return true;\n      })\n      .map(metric => metric.key);\n  };\n\n  getSelectedMetricsElements = (metrics: T.Metric[], selectedMetrics?: string[]) => {\n    const selected = selectedMetrics || this.props.selectedMetrics;\n    return metrics.filter(metric => selected.includes(metric.key)).map(metric => metric.key);\n  };\n\n  getLocalizedMetricNameFromKey = (key: string) => {\n    const metric = find(this.props.metrics, { key });\n    return metric === undefined ? key : getLocalizedMetricName(metric);\n  };\n\n  onSearch = (query: string) => {\n    this.setState({ query });\n    return Promise.resolve();\n  };\n\n  onSelect = (metric: string) => {\n    this.props.addMetric(metric);\n    this.setState(state => {\n      return {\n        selectedMetrics: sortBy([...state.selectedMetrics, metric]),\n        metrics: this.filterMetricsElements(this.props, state.query)\n      };\n    });\n  };\n\n  onUnselect = (metric: string) => {\n    this.props.removeMetric(metric);\n    this.setState(state => {\n      return {\n        metrics: sortBy([...state.metrics, metric]),\n        selectedMetrics: state.selectedMetrics.filter(selected => selected !== metric)\n      };\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n    const filteredMetrics = this.filterMetricsElements(this.props, query);\n    const selectedMetrics = this.getSelectedMetricsElements(\n      this.props.metrics,\n      this.props.selectedMetrics\n    );\n    return (\n      <Dropdown\n        className=\"display-inline-block\"\n        overlay={\n          <AddGraphMetricPopup\n            elements={filteredMetrics}\n            filterSelected={this.filterSelected}\n            metricsTypeFilter={this.props.metricsTypeFilter}\n            onSearch={this.onSearch}\n            onSelect={this.onSelect}\n            onUnselect={this.onUnselect}\n            renderLabel={element => this.getLocalizedMetricNameFromKey(element)}\n            selectedElements={selectedMetrics}\n          />\n        }>\n        <Button className=\"spacer-left\">\n          <span className=\"text-ellipsis text-middle\">\n            {translate('project_activity.graphs.custom.add')}\n          </span>\n          <DropdownIcon className=\"text-top little-spacer-left\" />\n        </Button>\n      </Dropdown>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GraphType } from '../../types/project-activity';\nimport AddGraphMetric from './AddGraphMetric';\nimport './styles.css';\nimport { getGraphTypes, isCustomGraph } from './utils';\n\ninterface Props {\n  addCustomMetric?: (metric: string) => void;\n  className?: string;\n  removeCustomMetric?: (metric: string) => void;\n  graph: GraphType;\n  metrics: T.Metric[];\n  metricsTypeFilter?: string[];\n  selectedMetrics?: string[];\n  updateGraph: (graphType: string) => void;\n}\n\nexport default class GraphsHeader extends React.PureComponent<Props> {\n  handleGraphChange = (option: { value: string }) => {\n    if (option.value !== this.props.graph) {\n      this.props.updateGraph(option.value);\n    }\n  };\n\n  render() {\n    const {\n      addCustomMetric,\n      className,\n      graph,\n      metrics,\n      metricsTypeFilter,\n      removeCustomMetric,\n      selectedMetrics = []\n    } = this.props;\n\n    const types = getGraphTypes(addCustomMetric === undefined || removeCustomMetric === undefined);\n\n    const selectOptions = types.map(type => ({\n      label: translate('project_activity.graphs', type),\n      value: type\n    }));\n\n    return (\n      <div className={classNames(className, 'position-relative')}>\n        <Select\n          className=\"pull-left input-medium\"\n          clearable={false}\n          onChange={this.handleGraphChange}\n          options={selectOptions}\n          searchable={false}\n          value={graph}\n        />\n        {isCustomGraph(graph) &&\n          addCustomMetric !== undefined &&\n          removeCustomMetric !== undefined && (\n            <AddGraphMetric\n              addMetric={addCustomMetric}\n              className=\"pull-left spacer-left\"\n              metrics={metrics}\n              metricsTypeFilter={metricsTypeFilter}\n              removeMetric={removeCustomMetric}\n              selectedMetrics={selectedMetrics}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./projectActivity.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".project-activity-page{min-height:600px;height:calc(100vh - 250px)}.project-activity-page-side-outer{position:relative;width:400px;margin-bottom:0;display:flex;flex-direction:row;align-items:stretch}.project-activity-layout-page-main{flex-grow:1;min-width:640px;padding-left:20px;display:flex}.project-activity-layout-page-main-inner{min-width:640px;max-width:880px;margin-bottom:0;flex:1;display:flex;flex-direction:column;align-items:stretch}.project-activity-versions-list{max-width:400px;box-sizing:border-box;overflow:auto;flex-grow:1;flex-shrink:0;padding:16px 16px 16px 12px}.project-activity-day{margin-top:8px;margin-bottom:24px}.project-activity-day:last-child{margin-bottom:10px}.project-activity-date{margin-bottom:16px;font-size:16px;font-weight:700}.project-activity-analysis{position:relative;min-height:20px;padding:16px;cursor:pointer}.project-activity-analysis.selected{cursor:default;background-color:#ecf6fe}.project-activity-analysis:focus{outline:none}.project-activity-analysis:hover{background-color:#ecf6fe}.project-activity-analysis+.project-activity-analysis{border-top:none}.project-activity-analysis-actions{height:20px}.project-activity-time{height:20px;line-height:20px}.project-activity-event{line-height:20px;text-indent:-20px;padding-left:20px}.project-activity-event *{text-indent:0}.project-activity-event+.project-activity-event{margin-top:8px}.project-activity-event-inner-more-link{line-height:16px}.project-activity-event-icon.VERSION{color:#4b9fd5}.project-activity-event-icon.QUALITY_GATE{color:#9139d4}.project-activity-event-icon.QUALITY_PROFILE{color:#ccc}.project-activity-event-icon.DEFINITION_CHANGE{color:#33a759}.project-activity-event-icon.OTHER{color:#442d1b}.project-activity-version-badge{margin-left:-12px;padding-top:8px;padding-bottom:8px;background-color:#fff}.project-activity-version-badge.first,.project-activity-version-badge.sticky{position:absolute;top:0;left:12px;right:16px;padding-top:24px;z-index:1}.project-activity-version-badge.sticky+.project-activity-days-list{padding-top:36px}.project-activity-version-badge .analysis-version{max-width:385px;border-radius:0 2px 2px 0;overflow:hidden;text-overflow:ellipsis}.activity-graph-tooltip-line .project-activity-event-icon,.Select .project-activity-event-icon{margin-top:1px}.baseline-marker{position:absolute;top:-10px;left:0;right:0;display:flex;flex-direction:row;align-items:center}.baseline-marker>.wedge{border:10px solid transparent;border-left-color:#f1e8cb}.baseline-marker>hr{border:none;margin:0 0 0 -11px;background-color:#f1e8cb;height:2px;flex:1 0 auto}.baseline-marker>.label{background-color:#fbf3d5;border:1px solid #f1e8cb;padding:2px 8px;font-size:10px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  addEvent: (analysis: string, name: string, category?: string) => Promise<void>;\n  addEventButtonText: string;\n  analysis: T.ParsedAnalysis;\n  onClose: () => void;\n}\n\ninterface State {\n  name: string;\n}\n\nexport default class AddEventForm extends React.PureComponent<Props, State> {\n  state: State = { name: '' };\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = () => {\n    return this.props.addEvent(this.props.analysis.key, this.state.name);\n  };\n\n  render() {\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('save')}\n        confirmDisable={!this.state.name}\n        header={translate(this.props.addEventButtonText)}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}\n        size=\"small\">\n        <div className=\"modal-field\">\n          <label>{translate('name')}</label>\n          <input\n            autoFocus={true}\n            onChange={this.handleNameChange}\n            type=\"text\"\n            value={this.state.name}\n          />\n        </div>\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  analysis: T.ParsedAnalysis;\n  deleteAnalysis: (analysis: string) => Promise<void>;\n  onClose: () => void;\n}\n\nexport default function RemoveAnalysisForm({ analysis, deleteAnalysis, onClose }: Props) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={analysis.key}\n      header={translate('project_activity.delete_analysis')}\n      isDestructive={true}\n      onClose={onClose}\n      onConfirm={deleteAnalysis}>\n      {translate('project_activity.delete_analysis.question')}\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport ClickEventBoundary from 'sonar-ui-common/components/controls/ClickEventBoundary';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport TimeFormatter from 'sonar-ui-common/components/intl/TimeFormatter';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport Events from './Events';\nimport AddEventForm from './forms/AddEventForm';\nimport RemoveAnalysisForm from './forms/RemoveAnalysisForm';\n\nexport interface ProjectActivityAnalysisProps {\n  addCustomEvent: (analysis: string, name: string, category?: string) => Promise<void>;\n  addVersion: (analysis: string, version: string) => Promise<void>;\n  analysis: T.ParsedAnalysis;\n  canAdmin?: boolean;\n  canDeleteAnalyses?: boolean;\n  canCreateVersion: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteAnalysis: (analysis: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  isBaseline: boolean;\n  isFirst: boolean;\n  parentScrollContainer?: HTMLElement | null;\n  selected: boolean;\n  updateSelectedDate: (date: Date) => void;\n}\n\nexport function ProjectActivityAnalysis(props: ProjectActivityAnalysisProps) {\n  let node: HTMLLIElement | null = null;\n\n  const {\n    analysis,\n    isBaseline,\n    isFirst,\n    canAdmin,\n    canCreateVersion,\n    parentScrollContainer,\n    selected\n  } = props;\n\n  React.useEffect(() => {\n    if (node && parentScrollContainer && selected) {\n      const { height } = node.getBoundingClientRect();\n      scrollToElement(node, {\n        bottomOffset: height + 20,\n        topOffset: 60,\n        parent: parentScrollContainer,\n        smooth: false\n      });\n    }\n  });\n\n  const [addEventForm, setAddEventForm] = React.useState(false);\n  const [addVersionForm, setAddVersionForm] = React.useState(false);\n  const [removeAnalysisForm, setRemoveAnalysisForm] = React.useState(false);\n\n  const parsedDate = parseDate(analysis.date);\n  const hasVersion = analysis.events.find(event => event.category === 'VERSION') != null;\n\n  const canAddVersion = canAdmin && !hasVersion && canCreateVersion;\n  const canAddEvent = canAdmin;\n  const canDeleteAnalyses =\n    props.canDeleteAnalyses && !isFirst && !analysis.manualNewCodePeriodBaseline;\n\n  return (\n    <li\n      className={classNames('project-activity-analysis bordered-top bordered-bottom', {\n        selected\n      })}\n      onClick={() => props.updateSelectedDate(analysis.date)}\n      ref={ref => (node = ref)}>\n      <div className=\"display-flex-center display-flex-space-between\">\n        <div className=\"project-activity-time\">\n          <TimeFormatter date={parsedDate} long={false}>\n            {formattedTime => (\n              <time className=\"text-middle\" dateTime={parsedDate.toISOString()}>\n                {formattedTime}\n              </time>\n            )}\n          </TimeFormatter>\n        </div>\n\n        {analysis.buildString && (\n          <div className=\"flex-shrink small text-muted text-ellipsis\">\n            {translateWithParameters(\n              'project_activity.analysis_build_string_X',\n              analysis.buildString\n            )}\n          </div>\n        )}\n\n        {(canAddVersion || canAddEvent || canDeleteAnalyses) && (\n          <ClickEventBoundary>\n            <div className=\"project-activity-analysis-actions big-spacer-left\">\n              <ActionsDropdown\n                overlayPlacement={PopupPlacement.BottomRight}\n                small={true}\n                toggleClassName=\"js-analysis-actions\">\n                {canAddVersion && (\n                  <ActionsDropdownItem\n                    className=\"js-add-version\"\n                    onClick={() => setAddVersionForm(true)}>\n                    {translate('project_activity.add_version')}\n                  </ActionsDropdownItem>\n                )}\n                {canAddEvent && (\n                  <ActionsDropdownItem\n                    className=\"js-add-event\"\n                    onClick={() => setAddEventForm(true)}>\n                    {translate('project_activity.add_custom_event')}\n                  </ActionsDropdownItem>\n                )}\n                {(canAddVersion || canAddEvent) && canDeleteAnalyses && <ActionsDropdownDivider />}\n                {canDeleteAnalyses && (\n                  <ActionsDropdownItem\n                    className=\"js-delete-analysis\"\n                    destructive={true}\n                    onClick={() => setRemoveAnalysisForm(true)}>\n                    {translate('project_activity.delete_analysis')}\n                  </ActionsDropdownItem>\n                )}\n              </ActionsDropdown>\n\n              {addVersionForm && (\n                <AddEventForm\n                  addEvent={props.addVersion}\n                  addEventButtonText=\"project_activity.add_version\"\n                  analysis={analysis}\n                  onClose={() => setAddVersionForm(false)}\n                />\n              )}\n\n              {addEventForm && (\n                <AddEventForm\n                  addEvent={props.addCustomEvent}\n                  addEventButtonText=\"project_activity.add_custom_event\"\n                  analysis={analysis}\n                  onClose={() => setAddEventForm(false)}\n                />\n              )}\n\n              {removeAnalysisForm && (\n                <RemoveAnalysisForm\n                  analysis={analysis}\n                  deleteAnalysis={props.deleteAnalysis}\n                  onClose={() => setRemoveAnalysisForm(false)}\n                />\n              )}\n            </div>\n          </ClickEventBoundary>\n        )}\n      </div>\n\n      {analysis.events.length > 0 && (\n        <Events\n          analysisKey={analysis.key}\n          canAdmin={canAdmin}\n          events={analysis.events}\n          isFirst={isFirst}\n          onChange={props.changeEvent}\n          onDelete={props.deleteEvent}\n        />\n      )}\n\n      {isBaseline && (\n        <div className=\"baseline-marker\">\n          <div className=\"wedge\" />\n          <hr />\n          <div className=\"label display-flex-center\">\n            {translate('project_activity.new_code_period_start')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('project_activity.new_code_period_start.help')}\n              placement=\"top\"\n            />\n          </div>\n        </div>\n      )}\n    </li>\n  );\n}\n\nexport default React.memo(ProjectActivityAnalysis);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { isEqual } from 'date-fns';\nimport { throttle } from 'lodash';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ComponentQualifier } from '../../../types/component';\nimport { activityQueryChanged, getAnalysesByVersionByDay, Query } from '../utils';\nimport ProjectActivityAnalysis from './ProjectActivityAnalysis';\n\ninterface Props {\n  addCustomEvent: (analysis: string, name: string, category?: string) => Promise<void>;\n  addVersion: (analysis: string, version: string) => Promise<void>;\n  analyses: T.ParsedAnalysis[];\n  analysesLoading: boolean;\n  canAdmin?: boolean;\n  canDeleteAnalyses?: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteAnalysis: (analysis: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  initializing: boolean;\n  leakPeriodDate?: Date;\n  project: { qualifier: string };\n  query: Query;\n  updateQuery: (changes: Partial<Query>) => void;\n}\n\nexport default class ProjectActivityAnalysesList extends React.PureComponent<Props> {\n  analyses?: HTMLCollectionOf<HTMLElement>;\n  badges?: HTMLCollectionOf<HTMLElement>;\n  scrollContainer?: HTMLUListElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleScroll = throttle(this.handleScroll, 20);\n  }\n\n  componentDidMount() {\n    this.badges = document.getElementsByClassName(\n      'project-activity-version-badge'\n    ) as HTMLCollectionOf<HTMLElement>;\n    this.analyses = document.getElementsByClassName(\n      'project-activity-analysis'\n    ) as HTMLCollectionOf<HTMLElement>;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.scrollContainer) {\n      return;\n    }\n    if (activityQueryChanged(prevProps.query, this.props.query)) {\n      this.resetScrollTop(0, true);\n    }\n  }\n\n  handleScroll = () => this.updateStickyBadges(true);\n\n  resetScrollTop = (newScrollTop: number, forceBadgeAlignement?: boolean) => {\n    if (this.scrollContainer) {\n      this.scrollContainer.scrollTop = newScrollTop;\n    }\n    if (this.badges) {\n      for (let i = 1; i < this.badges.length; i++) {\n        this.badges[i].removeAttribute('originOffsetTop');\n        this.badges[i].classList.remove('sticky');\n      }\n    }\n    this.updateStickyBadges(forceBadgeAlignement);\n  };\n\n  updateStickyBadges = (forceBadgeAlignement?: boolean) => {\n    if (!this.scrollContainer || !this.badges) {\n      return;\n    }\n\n    const { scrollTop } = this.scrollContainer;\n    if (scrollTop == null) {\n      return;\n    }\n\n    let newScrollTop;\n    for (let i = 1; i < this.badges.length; i++) {\n      const badge = this.badges[i];\n      let originOffsetTop = badge.getAttribute('originOffsetTop');\n      if (originOffsetTop == null) {\n        // Set the originOffsetTop attribute, to avoid using getBoundingClientRect\n        originOffsetTop = String(badge.offsetTop);\n        badge.setAttribute('originOffsetTop', originOffsetTop);\n      }\n      if (Number(originOffsetTop) < scrollTop + 18 + i * 2) {\n        if (forceBadgeAlignement && !badge.classList.contains('sticky')) {\n          newScrollTop = originOffsetTop;\n        }\n        badge.classList.add('sticky');\n      } else {\n        badge.classList.remove('sticky');\n      }\n    }\n\n    if (forceBadgeAlignement && newScrollTop != null) {\n      this.scrollContainer.scrollTop = Number(newScrollTop) - 6;\n    }\n  };\n\n  updateSelectedDate = (date: Date) => {\n    this.props.updateQuery({ selectedDate: date });\n  };\n\n  shouldRenderBaselineMarker(analysis: T.ParsedAnalysis): boolean {\n    return Boolean(this.props.leakPeriodDate && isEqual(this.props.leakPeriodDate, analysis.date));\n  }\n\n  renderAnalysis(analysis: T.ParsedAnalysis) {\n    const firstAnalysisKey = this.props.analyses[0].key;\n\n    const selectedDate = this.props.query.selectedDate\n      ? this.props.query.selectedDate.valueOf()\n      : null;\n\n    return (\n      <ProjectActivityAnalysis\n        addCustomEvent={this.props.addCustomEvent}\n        addVersion={this.props.addVersion}\n        analysis={analysis}\n        canAdmin={this.props.canAdmin}\n        canCreateVersion={this.props.project.qualifier === ComponentQualifier.Project}\n        canDeleteAnalyses={this.props.canDeleteAnalyses}\n        changeEvent={this.props.changeEvent}\n        deleteAnalysis={this.props.deleteAnalysis}\n        deleteEvent={this.props.deleteEvent}\n        isBaseline={this.shouldRenderBaselineMarker(analysis)}\n        isFirst={analysis.key === firstAnalysisKey}\n        key={analysis.key}\n        parentScrollContainer={this.scrollContainer}\n        selected={analysis.date.valueOf() === selectedDate}\n        updateSelectedDate={this.updateSelectedDate}\n      />\n    );\n  }\n\n  render() {\n    const byVersionByDay = getAnalysesByVersionByDay(this.props.analyses, this.props.query);\n    const hasFilteredData =\n      byVersionByDay.length > 1 ||\n      (byVersionByDay.length === 1 && Object.keys(byVersionByDay[0].byDay).length > 0);\n    if (this.props.analyses.length === 0 || !hasFilteredData) {\n      return (\n        <div className=\"boxed-group-inner\">\n          {this.props.initializing ? (\n            <div className=\"text-center\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <span className=\"note\">{translate('no_results')}</span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <ul\n        className=\"project-activity-versions-list\"\n        onScroll={this.handleScroll}\n        ref={element => (this.scrollContainer = element)}\n        style={{\n          paddingTop: this.props.project.qualifier === ComponentQualifier.Project ? 52 : undefined\n        }}>\n        {byVersionByDay.map((version, idx) => {\n          const days = Object.keys(version.byDay);\n          if (days.length <= 0) {\n            return null;\n          }\n          return (\n            <li key={version.key || 'noversion'}>\n              {version.version && (\n                <div className={classNames('project-activity-version-badge', { first: idx === 0 })}>\n                  <Tooltip\n                    mouseEnterDelay={0.5}\n                    overlay={`${translate('version')} ${version.version}`}>\n                    <span className=\"analysis-version\">{version.version}</span>\n                  </Tooltip>\n                </div>\n              )}\n              <ul className=\"project-activity-days-list\">\n                {days.map(day => (\n                  <li\n                    className=\"project-activity-day\"\n                    data-day={toShortNotSoISOString(Number(day))}\n                    key={day}>\n                    <div className=\"project-activity-date\">\n                      <DateFormatter date={Number(day)} long={true} />\n                    </div>\n                    <ul className=\"project-activity-analyses-list\">\n                      {version.byDay[day] != null &&\n                        version.byDay[day].map(analysis => this.renderAnalysis(analysis))}\n                    </ul>\n                  </li>\n                ))}\n              </ul>\n            </li>\n          );\n        })}\n        {this.props.analysesLoading && (\n          <li className=\"text-center\">\n            <i className=\"spinner\" />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized/dist/commonjs/AutoSizer';\nimport ZoomTimeLine from 'sonar-ui-common/components/charts/ZoomTimeLine';\nimport { Serie } from '../../types/project-activity';\nimport { hasHistoryData } from './utils';\n\ninterface Props {\n  graphEndDate?: Date;\n  graphStartDate?: Date;\n  leakPeriodDate?: Date;\n  loading: boolean;\n  metricsType: string;\n  series: Serie[];\n  showAreas?: boolean;\n  updateGraphZoom: (from?: Date, to?: Date) => void;\n}\n\nexport default function GraphsZoom(props: Props) {\n  if (props.loading || !hasHistoryData(props.series)) {\n    return null;\n  }\n\n  return (\n    <div className=\"activity-graph-zoom\">\n      <AutoSizer disableHeight={true}>\n        {({ width }) => (\n          <ZoomTimeLine\n            endDate={props.graphEndDate}\n            height={64}\n            leakPeriodDate={props.leakPeriodDate}\n            metricType={props.metricsType}\n            padding={[0, 10, 18, 60]}\n            series={props.series}\n            showAreas={props.showAreas}\n            startDate={props.graphStartDate}\n            updateZoom={props.updateGraphZoom}\n            width={width}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, findLast, maxBy, minBy, sortBy } from 'lodash';\nimport * as React from 'react';\nimport GraphsHeader from '../../../components/activity-graph/GraphsHeader';\nimport GraphsHistory from '../../../components/activity-graph/GraphsHistory';\nimport GraphsZoom from '../../../components/activity-graph/GraphsZoom';\nimport {\n  generateSeries,\n  getActivityGraph,\n  getDisplayedHistoryMetrics,\n  getSeriesMetricType,\n  isCustomGraph,\n  saveActivityGraph,\n  splitSeriesInGraphs\n} from '../../../components/activity-graph/utils';\nimport { GraphType, MeasureHistory, Point, Serie } from '../../../types/project-activity';\nimport { datesQueryChanged, historyQueryChanged, Query } from '../utils';\nimport { PROJECT_ACTIVITY_GRAPH } from './ProjectActivityAppContainer';\n\ninterface Props {\n  analyses: T.ParsedAnalysis[];\n  leakPeriodDate?: Date;\n  loading: boolean;\n  measuresHistory: MeasureHistory[];\n  metrics: T.Metric[];\n  project: string;\n  query: Query;\n  updateQuery: (changes: Partial<Query>) => void;\n}\n\ninterface State {\n  graphStartDate?: Date;\n  graphEndDate?: Date;\n  series: Serie[];\n  graphs: Serie[][];\n}\n\nconst MAX_GRAPH_NB = 2;\nconst MAX_SERIES_PER_GRAPH = 3;\n\nexport default class ProjectActivityGraphs extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const series = generateSeries(\n      props.measuresHistory,\n      props.query.graph,\n      props.metrics,\n      getDisplayedHistoryMetrics(props.query.graph, props.query.customMetrics)\n    );\n    this.state = {\n      series,\n      graphs: splitSeriesInGraphs(series, MAX_GRAPH_NB, MAX_SERIES_PER_GRAPH),\n      ...this.getStateZoomDates(undefined, props, series)\n    };\n    this.updateQueryDateRange = debounce(this.updateQueryDateRange, 500);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    let newSeries;\n    let newGraphs;\n    if (\n      prevProps.measuresHistory !== this.props.measuresHistory ||\n      historyQueryChanged(prevProps.query, this.props.query)\n    ) {\n      newSeries = generateSeries(\n        this.props.measuresHistory,\n        this.props.query.graph,\n        this.props.metrics,\n        getDisplayedHistoryMetrics(this.props.query.graph, this.props.query.customMetrics)\n      );\n      newGraphs = splitSeriesInGraphs(newSeries, MAX_GRAPH_NB, MAX_SERIES_PER_GRAPH);\n    }\n\n    const newDates = this.getStateZoomDates(prevProps, this.props, newSeries);\n\n    if (newSeries || newDates) {\n      let newState = {} as State;\n      if (newSeries) {\n        newState.series = newSeries;\n      }\n      if (newGraphs) {\n        newState.graphs = newGraphs;\n      }\n      if (newDates) {\n        newState = { ...newState, ...newDates };\n      }\n      this.setState(newState);\n    }\n  }\n\n  getStateZoomDates = (prevProps: Props | undefined, props: Props, newSeries?: Serie[]) => {\n    const newDates = {\n      from: props.query.from || undefined,\n      to: props.query.to || undefined\n    };\n    if (!prevProps || datesQueryChanged(prevProps.query, props.query)) {\n      return { graphEndDate: newDates.to, graphStartDate: newDates.from };\n    }\n\n    if (newDates.to === undefined && newDates.from === undefined && newSeries !== undefined) {\n      const firstValid = minBy(\n        newSeries.map(serie => serie.data.find(p => Boolean(p.y || p.y === 0))),\n        'x'\n      );\n      const lastValid = maxBy<Point>(\n        newSeries.map(serie => findLast(serie.data, p => Boolean(p.y || p.y === 0))!),\n        'x'\n      );\n      return {\n        graphEndDate: lastValid && lastValid.x,\n        graphStartDate: firstValid && firstValid.x\n      };\n    }\n    return null;\n  };\n\n  getMetricsTypeFilter = () => {\n    if (this.state.graphs.length < MAX_GRAPH_NB) {\n      return undefined;\n    }\n    return this.state.graphs\n      .filter(graph => graph.length < MAX_SERIES_PER_GRAPH)\n      .map(graph => graph[0].type);\n  };\n\n  addCustomMetric = (metric: string) => {\n    const customMetrics = [...this.props.query.customMetrics, metric];\n    saveActivityGraph(PROJECT_ACTIVITY_GRAPH, this.props.project, GraphType.custom, customMetrics);\n    this.props.updateQuery({ customMetrics });\n  };\n\n  removeCustomMetric = (removedMetric: string) => {\n    const customMetrics = this.props.query.customMetrics.filter(metric => metric !== removedMetric);\n    saveActivityGraph(PROJECT_ACTIVITY_GRAPH, this.props.project, GraphType.custom, customMetrics);\n    this.props.updateQuery({ customMetrics });\n  };\n\n  updateGraph = (graph: GraphType) => {\n    saveActivityGraph(PROJECT_ACTIVITY_GRAPH, this.props.project, graph);\n    if (isCustomGraph(graph) && this.props.query.customMetrics.length <= 0) {\n      const { customGraphs } = getActivityGraph(PROJECT_ACTIVITY_GRAPH, this.props.project);\n      this.props.updateQuery({ graph, customMetrics: customGraphs });\n    } else {\n      this.props.updateQuery({ graph, customMetrics: [] });\n    }\n  };\n\n  updateGraphZoom = (graphStartDate?: Date, graphEndDate?: Date) => {\n    if (graphEndDate !== undefined && graphStartDate !== undefined) {\n      const msDiff = Math.abs(graphEndDate.valueOf() - graphStartDate.valueOf());\n      // 12 hours minimum between the two dates\n      if (msDiff < 1000 * 60 * 60 * 12) {\n        return;\n      }\n    }\n\n    this.setState({ graphStartDate, graphEndDate });\n    this.updateQueryDateRange([graphStartDate, graphEndDate]);\n  };\n\n  updateSelectedDate = (selectedDate?: Date) => this.props.updateQuery({ selectedDate });\n\n  updateQueryDateRange = (dates: Array<Date | undefined>) => {\n    if (dates[0] === undefined || dates[1] === undefined) {\n      this.props.updateQuery({ from: dates[0], to: dates[1] });\n    } else {\n      const sortedDates = sortBy(dates);\n      this.props.updateQuery({ from: sortedDates[0], to: sortedDates[1] });\n    }\n  };\n\n  render() {\n    const { leakPeriodDate, loading, metrics, query } = this.props;\n    const { graphEndDate, graphStartDate, series } = this.state;\n\n    return (\n      <div className=\"project-activity-layout-page-main-inner boxed-group boxed-group-inner\">\n        <GraphsHeader\n          addCustomMetric={this.addCustomMetric}\n          className=\"big-spacer-bottom\"\n          graph={query.graph}\n          metrics={metrics}\n          metricsTypeFilter={this.getMetricsTypeFilter()}\n          removeCustomMetric={this.removeCustomMetric}\n          selectedMetrics={this.props.query.customMetrics}\n          updateGraph={this.updateGraph}\n        />\n        <GraphsHistory\n          analyses={this.props.analyses}\n          graph={query.graph}\n          graphEndDate={graphEndDate}\n          graphStartDate={graphStartDate}\n          graphs={this.state.graphs}\n          leakPeriodDate={leakPeriodDate}\n          loading={loading}\n          measuresHistory={this.props.measuresHistory}\n          removeCustomMetric={this.removeCustomMetric}\n          selectedDate={this.props.query.selectedDate}\n          series={series}\n          updateGraphZoom={this.updateGraphZoom}\n          updateSelectedDate={this.updateSelectedDate}\n        />\n        <GraphsZoom\n          graphEndDate={graphEndDate}\n          graphStartDate={graphStartDate}\n          leakPeriodDate={leakPeriodDate}\n          loading={loading}\n          metricsType={getSeriesMetricType(series)}\n          series={series}\n          showAreas={[GraphType.coverage, GraphType.duplications].includes(query.graph)}\n          updateGraphZoom={this.updateGraphZoom}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateRangeInput from '../../../components/controls/DateRangeInput';\nimport { Query } from '../utils';\n\ninterface Props {\n  from?: Date;\n  to?: Date;\n  onChange: (changes: Partial<Query>) => void;\n}\n\nexport default class ProjectActivityDateInput extends React.PureComponent<Props> {\n  handleChange = ({ from, to }: { from?: Date; to?: Date }) => {\n    this.props.onChange({ from, to });\n  };\n\n  handleResetClick = () => {\n    this.props.onChange({ from: undefined, to: undefined });\n  };\n\n  render() {\n    return (\n      <div>\n        <DateRangeInput\n          onChange={this.handleChange}\n          value={{ from: this.props.from, to: this.props.to }}\n        />\n        <Button\n          className=\"spacer-left\"\n          disabled={this.props.from === undefined && this.props.to === undefined}\n          onClick={this.handleResetClick}>\n          {translate('project_activity.reset_dates')}\n        </Button>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\n\nexport interface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props {\n  option: Option;\n  children?: Element | Text;\n  className?: string;\n  isFocused?: boolean;\n  onFocus: (option: Option, event: React.MouseEvent<HTMLDivElement>) => void;\n  onSelect: (option: Option, event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport default class ProjectActivityEventSelectOption extends React.PureComponent<Props> {\n  handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onSelect(this.props.option, event);\n  };\n\n  handleMouseEnter = (event: React.MouseEvent<HTMLDivElement>) => {\n    this.props.onFocus(this.props.option, event);\n  };\n\n  handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (this.props.isFocused) {\n      return;\n    }\n    this.props.onFocus(this.props.option, event);\n  };\n\n  render() {\n    const { option } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseMove={this.handleMouseMove}\n        role=\"link\"\n        tabIndex={0}\n        title={option.label}>\n        <ProjectEventIcon className={'project-activity-event-icon ' + option.value} />\n        <span className=\"little-spacer-left\">{this.props.children}</span>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { Option } from './ProjectActivityEventSelectOption';\n\ninterface Props {\n  children?: React.ReactNode;\n  value: Option;\n}\n\nexport default function ProjectActivityEventSelectValue({ children, value }: Props) {\n  return (\n    <div className=\"Select-value\" title={value.label}>\n      <div className=\"Select-value-label\">\n        <ProjectEventIcon className={'project-activity-event-icon ' + value.value} />\n        <span className=\"little-spacer-left\">{children}</span>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { APPLICATION_EVENT_TYPES, EVENT_TYPES, Query } from '../utils';\nimport ProjectActivityDateInput from './ProjectActivityDateInput';\nimport ProjectActivityEventSelectOption from './ProjectActivityEventSelectOption';\nimport ProjectActivityEventSelectValue from './ProjectActivityEventSelectValue';\n\ninterface Props {\n  category?: string;\n  from?: Date;\n  project: Pick<T.Component, 'qualifier'>;\n  to?: Date;\n  updateQuery: (changes: Partial<Query>) => void;\n}\n\nexport default class ProjectActivityPageHeader extends React.PureComponent<Props> {\n  handleCategoryChange = (option: { value: string } | null) =>\n    this.props.updateQuery({ category: option ? option.value : '' });\n\n  render() {\n    const isApp = this.props.project.qualifier === 'APP';\n    const eventTypes = isApp ? APPLICATION_EVENT_TYPES : EVENT_TYPES;\n    const options = eventTypes.map(category => ({\n      label: translate('event.category', category),\n      value: category\n    }));\n\n    return (\n      <header className=\"page-header\">\n        {!['VW', 'SVW'].includes(this.props.project.qualifier) && (\n          <Select\n            className={classNames('pull-left big-spacer-right', {\n              'input-medium': !isApp,\n              'input-large': isApp\n            })}\n            clearable={true}\n            onChange={this.handleCategoryChange}\n            optionComponent={ProjectActivityEventSelectOption}\n            options={options}\n            placeholder={translate('project_activity.filter_events') + '...'}\n            searchable={false}\n            value={this.props.category}\n            // @ts-ignore react-select typings are incorrect, they expect `props` of `valueComponent` to be exactly `Option`\n            valueComponent={ProjectActivityEventSelectValue}\n          />\n        )}\n        <ProjectActivityDateInput\n          from={this.props.from}\n          onChange={this.props.updateQuery}\n          to={this.props.to}\n        />\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { MeasureHistory } from '../../../types/project-activity';\nimport { Query } from '../utils';\nimport './projectActivity.css';\nimport ProjectActivityAnalysesList from './ProjectActivityAnalysesList';\nimport ProjectActivityGraphs from './ProjectActivityGraphs';\nimport ProjectActivityPageHeader from './ProjectActivityPageHeader';\n\ninterface Props {\n  addCustomEvent: (analysis: string, name: string, category?: string) => Promise<void>;\n  addVersion: (analysis: string, version: string) => Promise<void>;\n  analyses: T.ParsedAnalysis[];\n  analysesLoading: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteAnalysis: (analysis: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  graphLoading: boolean;\n  initializing: boolean;\n  project: Pick<T.Component, 'configuration' | 'key' | 'leakPeriodDate' | 'qualifier'>;\n  metrics: T.Metric[];\n  measuresHistory: MeasureHistory[];\n  query: Query;\n  updateQuery: (changes: Partial<Query>) => void;\n}\n\nexport default function ProjectActivityApp(props: Props) {\n  const { analyses, measuresHistory, query } = props;\n  const { configuration } = props.project;\n  const canAdmin =\n    (props.project.qualifier === 'TRK' || props.project.qualifier === 'APP') &&\n    (configuration ? configuration.showHistory : false);\n  const canDeleteAnalyses = configuration ? configuration.showHistory : false;\n  return (\n    <div className=\"page page-limited\" id=\"project-activity\">\n      <Suggestions suggestions=\"project_activity\" />\n      <Helmet defer={false} title={translate('project_activity.page')} />\n\n      <A11ySkipTarget anchor=\"activity_main\" />\n\n      <ProjectActivityPageHeader\n        category={query.category}\n        from={query.from}\n        project={props.project}\n        to={query.to}\n        updateQuery={props.updateQuery}\n      />\n\n      <div className=\"layout-page project-activity-page\">\n        <div className=\"layout-page-side-outer project-activity-page-side-outer boxed-group\">\n          <ProjectActivityAnalysesList\n            addCustomEvent={props.addCustomEvent}\n            addVersion={props.addVersion}\n            analyses={analyses}\n            analysesLoading={props.analysesLoading}\n            canAdmin={canAdmin}\n            canDeleteAnalyses={canDeleteAnalyses}\n            changeEvent={props.changeEvent}\n            deleteAnalysis={props.deleteAnalysis}\n            deleteEvent={props.deleteEvent}\n            initializing={props.initializing}\n            leakPeriodDate={\n              props.project.leakPeriodDate ? parseDate(props.project.leakPeriodDate) : undefined\n            }\n            project={props.project}\n            query={props.query}\n            updateQuery={props.updateQuery}\n          />\n        </div>\n        <div className=\"project-activity-layout-page-main\">\n          <ProjectActivityGraphs\n            analyses={analyses}\n            leakPeriodDate={\n              props.project.leakPeriodDate ? parseDate(props.project.leakPeriodDate) : undefined\n            }\n            loading={props.graphLoading}\n            measuresHistory={measuresHistory}\n            metrics={props.metrics}\n            project={props.project.key}\n            query={query}\n            updateQuery={props.updateQuery}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Location } from 'history';\nimport * as React from 'react';\nimport { InjectedRouter } from 'react-router';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { getAllMetrics } from '../../../api/metrics';\nimport * as api from '../../../api/projectActivity';\nimport { getAllTimeMachineData } from '../../../api/time-machine';\nimport {\n  DEFAULT_GRAPH,\n  getActivityGraph,\n  getHistoryMetrics,\n  isCustomGraph\n} from '../../../components/activity-graph/utils';\nimport { getBranchLikeQuery } from '../../../helpers/branch-like';\nimport { BranchLike } from '../../../types/branch-like';\nimport { GraphType, MeasureHistory } from '../../../types/project-activity';\nimport * as actions from '../actions';\nimport {\n  customMetricsChanged,\n  parseQuery,\n  Query,\n  serializeQuery,\n  serializeUrlQuery\n} from '../utils';\nimport ProjectActivityApp from './ProjectActivityApp';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  location: Location;\n  router: Pick<InjectedRouter, 'push' | 'replace'>;\n}\n\nexport interface State {\n  analyses: T.ParsedAnalysis[];\n  analysesLoading: boolean;\n  graphLoading: boolean;\n  initialized: boolean;\n  metrics: T.Metric[];\n  measuresHistory: MeasureHistory[];\n  query: Query;\n}\n\nexport const PROJECT_ACTIVITY_GRAPH = 'sonar_project_activity.graph';\n\nexport default class ProjectActivityAppContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      analyses: [],\n      analysesLoading: false,\n      graphLoading: true,\n      initialized: false,\n      measuresHistory: [],\n      metrics: [],\n      query: parseQuery(props.location.query)\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.shouldRedirect()) {\n      const { graph, customGraphs } = getActivityGraph(\n        PROJECT_ACTIVITY_GRAPH,\n        this.props.component.key\n      );\n      const newQuery = { ...this.state.query, graph };\n      if (isCustomGraph(newQuery.graph)) {\n        newQuery.customMetrics = customGraphs;\n      }\n      this.props.router.replace({\n        pathname: this.props.location.pathname,\n        query: {\n          ...serializeUrlQuery(newQuery),\n          ...getBranchLikeQuery(this.props.branchLike)\n        }\n      });\n    } else {\n      this.firstLoadData(this.state.query, this.props.component);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.location.query !== this.props.location.query) {\n      const query = parseQuery(this.props.location.query);\n      if (query.graph !== this.state.query.graph || customMetricsChanged(this.state.query, query)) {\n        if (this.state.initialized) {\n          this.updateGraphData(query.graph || DEFAULT_GRAPH, query.customMetrics);\n        } else {\n          this.firstLoadData(query, this.props.component);\n        }\n      }\n      this.setState({ query });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  addCustomEvent = (analysis: string, name: string, category?: string) => {\n    return api.createEvent(analysis, name, category).then(({ analysis, ...event }) => {\n      if (this.mounted) {\n        this.setState(actions.addCustomEvent(analysis, event));\n      }\n    });\n  };\n\n  addVersion = (analysis: string, version: string) => {\n    return this.addCustomEvent(analysis, version, 'VERSION');\n  };\n\n  changeEvent = (event: string, name: string) => {\n    return api.changeEvent(event, name).then(({ analysis, ...event }) => {\n      if (this.mounted) {\n        this.setState(actions.changeEvent(analysis, event));\n      }\n    });\n  };\n\n  deleteAnalysis = (analysis: string) => {\n    return api.deleteAnalysis(analysis).then(() => {\n      if (this.mounted) {\n        this.updateGraphData(\n          this.state.query.graph || DEFAULT_GRAPH,\n          this.state.query.customMetrics\n        );\n        this.setState(actions.deleteAnalysis(analysis));\n      }\n    });\n  };\n\n  deleteEvent = (analysis: string, event: string) => {\n    return api.deleteEvent(event).then(() => {\n      if (this.mounted) {\n        this.setState(actions.deleteEvent(analysis, event));\n      }\n    });\n  };\n\n  fetchActivity = (project: string, p: number, ps: number, additional?: T.RawQuery) => {\n    const parameters = { project, p, ps, ...getBranchLikeQuery(this.props.branchLike) };\n    return api\n      .getProjectActivity({ ...additional, ...parameters })\n      .then(({ analyses, paging }) => ({\n        analyses: analyses.map(analysis => ({\n          ...analysis,\n          date: parseDate(analysis.date)\n        })) as T.ParsedAnalysis[],\n        paging\n      }));\n  };\n\n  fetchMeasuresHistory = (metrics: string[]): Promise<MeasureHistory[]> => {\n    if (metrics.length <= 0) {\n      return Promise.resolve([]);\n    }\n    return getAllTimeMachineData({\n      component: this.props.component.key,\n      metrics: metrics.join(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    }).then(({ measures }) =>\n      measures.map(measure => ({\n        metric: measure.metric,\n        history: measure.history.map(analysis => ({\n          date: parseDate(analysis.date),\n          value: analysis.value!\n        }))\n      }))\n    );\n  };\n\n  fetchAllActivities = (topLevelComponent: string) => {\n    this.setState({ analysesLoading: true });\n    this.loadAllActivities(topLevelComponent).then(\n      ({ analyses }) => {\n        if (this.mounted) {\n          this.setState({\n            analyses,\n            analysesLoading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ analysesLoading: false });\n        }\n      }\n    );\n  };\n\n  loadAllActivities = (\n    project: string,\n    prevResult?: { analyses: T.ParsedAnalysis[]; paging: T.Paging }\n  ): Promise<{ analyses: T.ParsedAnalysis[]; paging: T.Paging }> => {\n    if (\n      prevResult &&\n      prevResult.paging.pageIndex * prevResult.paging.pageSize >= prevResult.paging.total\n    ) {\n      return Promise.resolve(prevResult);\n    }\n    const nextPage = prevResult ? prevResult.paging.pageIndex + 1 : 1;\n    return this.fetchActivity(project, nextPage, 500).then(result => {\n      if (!prevResult) {\n        return this.loadAllActivities(project, result);\n      }\n      return this.loadAllActivities(project, {\n        analyses: prevResult.analyses.concat(result.analyses),\n        paging: result.paging\n      });\n    });\n  };\n\n  getTopLevelComponent = (component: T.Component) => {\n    let current = component.breadcrumbs.length - 1;\n    while (\n      current > 0 &&\n      !['TRK', 'VW', 'APP'].includes(component.breadcrumbs[current].qualifier)\n    ) {\n      current--;\n    }\n    return component.breadcrumbs[current].key;\n  };\n\n  filterMetrics({ qualifier }: T.Component, metrics: T.Metric[]) {\n    return ['VW', 'SVW'].includes(qualifier)\n      ? metrics\n      : metrics.filter(metric => metric.key !== 'security_review_rating');\n  }\n\n  firstLoadData(query: Query, component: T.Component) {\n    const graphMetrics = getHistoryMetrics(query.graph || DEFAULT_GRAPH, query.customMetrics);\n    const topLevelComponent = this.getTopLevelComponent(component);\n    Promise.all([\n      this.fetchActivity(topLevelComponent, 1, 100, serializeQuery(query)),\n      getAllMetrics(),\n      this.fetchMeasuresHistory(graphMetrics)\n    ]).then(\n      ([{ analyses }, metrics, measuresHistory]) => {\n        if (this.mounted) {\n          this.setState({\n            analyses,\n            graphLoading: false,\n            initialized: true,\n            measuresHistory,\n            metrics: this.filterMetrics(component, metrics)\n          });\n\n          this.fetchAllActivities(topLevelComponent);\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ initialized: true, graphLoading: false });\n        }\n      }\n    );\n  }\n\n  updateGraphData = (graph: GraphType, customMetrics: string[]) => {\n    const graphMetrics = getHistoryMetrics(graph, customMetrics);\n    this.setState({ graphLoading: true });\n    this.fetchMeasuresHistory(graphMetrics).then(\n      measuresHistory => {\n        if (this.mounted) {\n          this.setState({ graphLoading: false, measuresHistory });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ graphLoading: false, measuresHistory: [] });\n        }\n      }\n    );\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeUrlQuery({\n      ...this.state.query,\n      ...newQuery\n    });\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: {\n        ...query,\n        ...getBranchLikeQuery(this.props.branchLike),\n        id: this.props.component.key\n      }\n    });\n  };\n\n  shouldRedirect = () => {\n    const locationQuery = this.props.location.query;\n    if (!locationQuery) {\n      return false;\n    }\n    const filtered = Object.keys(locationQuery).some(\n      key => key !== 'id' && locationQuery[key] !== ''\n    );\n\n    const { graph, customGraphs } = getActivityGraph(\n      PROJECT_ACTIVITY_GRAPH,\n      this.props.component.key\n    );\n    const emptyCustomGraph = isCustomGraph(graph) && customGraphs.length <= 0;\n\n    // if there is no filter, but there are saved preferences in the localStorage\n    // also don't redirect to custom if there is no metrics selected for it\n    return !filtered && graph != null && graph !== DEFAULT_GRAPH && !emptyCustomGraph;\n  };\n\n  render() {\n    if (this.shouldRedirect()) {\n      return null;\n    }\n\n    return (\n      <ProjectActivityApp\n        addCustomEvent={this.addCustomEvent}\n        addVersion={this.addVersion}\n        analyses={this.state.analyses}\n        analysesLoading={this.state.analysesLoading}\n        changeEvent={this.changeEvent}\n        deleteAnalysis={this.deleteAnalysis}\n        deleteEvent={this.deleteEvent}\n        graphLoading={!this.state.initialized || this.state.graphLoading}\n        initializing={!this.state.initialized}\n        measuresHistory={this.state.measuresHistory}\n        metrics={this.state.metrics}\n        project={this.props.component}\n        query={this.state.query}\n        updateQuery={this.updateQuery}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { State } from './components/ProjectActivityAppContainer';\n\nexport function addCustomEvent(analysis: string, event: T.AnalysisEvent) {\n  return (state: State) => ({\n    analyses: state.analyses.map(item => {\n      if (item.key !== analysis) {\n        return item;\n      }\n      return { ...item, events: [...item.events, event] };\n    })\n  });\n}\n\nexport function deleteEvent(analysis: string, event: string) {\n  return (state: State) => ({\n    analyses: state.analyses.map(item => {\n      if (item.key !== analysis) {\n        return item;\n      }\n      return { ...item, events: item.events.filter(eventItem => eventItem.key !== event) };\n    })\n  });\n}\n\nexport function changeEvent(analysis: string, event: T.AnalysisEvent) {\n  return (state: State) => ({\n    analyses: state.analyses.map(item => {\n      if (item.key !== analysis) {\n        return item;\n      }\n      return {\n        ...item,\n        events: item.events.map(eventItem =>\n          eventItem.key === event.key ? { ...eventItem, ...event } : eventItem\n        )\n      };\n    })\n  });\n}\n\nexport function deleteAnalysis(analysis: string) {\n  return (state: State) => ({ analyses: state.analyses.filter(item => item.key !== analysis) });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nexport enum ComponentQualifier {\n  Application = 'APP',\n  Directory = 'DIR',\n  Developper = 'DEV',\n  File = 'FIL',\n  Portfolio = 'VW',\n  Project = 'TRK',\n  SubPortfolio = 'SVW',\n  SubProject = 'BRC',\n  TestFile = 'UTS'\n}\n\nexport function isPortfolioLike(componentQualifier?: string | ComponentQualifier) {\n  return (\n    !!componentQualifier &&\n    [ComponentQualifier.Portfolio.toString(), ComponentQualifier.SubPortfolio.toString()].includes(\n      componentQualifier\n    )\n  );\n}\n\nexport enum Visibility {\n  Public = 'public',\n  Private = 'private'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { chunk, flatMap, groupBy, sortBy } from 'lodash';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { get, save } from 'sonar-ui-common/helpers/storage';\nimport { localizeMetric } from '../../helpers/measures';\nimport { MetricKey } from '../../types/metrics';\nimport { GraphType, MeasureHistory, Serie } from '../../types/project-activity';\n\nexport const DEFAULT_GRAPH = GraphType.issues;\n\nconst GRAPHS_METRICS_DISPLAYED: T.Dict<string[]> = {\n  [GraphType.issues]: [MetricKey.bugs, MetricKey.code_smells, MetricKey.vulnerabilities],\n  [GraphType.coverage]: [MetricKey.lines_to_cover, MetricKey.uncovered_lines],\n  [GraphType.duplications]: [MetricKey.ncloc, MetricKey.duplicated_lines]\n};\n\nconst GRAPHS_METRICS: T.Dict<string[]> = {\n  [GraphType.issues]: GRAPHS_METRICS_DISPLAYED[GraphType.issues].concat([\n    MetricKey.reliability_rating,\n    MetricKey.security_rating,\n    MetricKey.sqale_rating\n  ]),\n  [GraphType.coverage]: [...GRAPHS_METRICS_DISPLAYED[GraphType.coverage], MetricKey.coverage],\n  [GraphType.duplications]: [\n    ...GRAPHS_METRICS_DISPLAYED[GraphType.duplications],\n    MetricKey.duplicated_lines_density\n  ]\n};\n\nexport function isCustomGraph(graph: GraphType) {\n  return graph === GraphType.custom;\n}\n\nexport function getGraphTypes(ignoreCustom = false) {\n  const graphs = [GraphType.issues, GraphType.coverage, GraphType.duplications];\n  return ignoreCustom ? graphs : [...graphs, GraphType.custom];\n}\n\nexport function hasDataValues(serie: Serie) {\n  return serie.data.some(point => Boolean(point.y || point.y === 0));\n}\n\nexport function hasHistoryData(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1);\n}\n\nexport function getSeriesMetricType(series: Serie[]) {\n  return series.length > 0 ? series[0].type : 'INT';\n}\n\nexport function getDisplayedHistoryMetrics(graph: GraphType, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS_DISPLAYED[graph];\n}\n\nexport function getHistoryMetrics(graph: GraphType, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS[graph];\n}\n\nexport function hasHistoryDataValue(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1 && hasDataValues(serie));\n}\n\nexport function splitSeriesInGraphs(series: Serie[], maxGraph: number, maxSeries: number) {\n  return flatMap(\n    groupBy(series, serie => serie.type),\n    type => chunk(type, maxSeries)\n  ).slice(0, maxGraph);\n}\n\nexport function generateCoveredLinesMetric(\n  uncoveredLines: MeasureHistory,\n  measuresHistory: MeasureHistory[]\n) {\n  const linesToCover = measuresHistory.find(measure => measure.metric === MetricKey.lines_to_cover);\n  return {\n    data: linesToCover\n      ? uncoveredLines.history.map((analysis, idx) => ({\n          x: analysis.date,\n          y: Number(linesToCover.history[idx].value) - Number(analysis.value)\n        }))\n      : [],\n    name: 'covered_lines',\n    translatedName: translate('project_activity.custom_metric.covered_lines'),\n    type: 'INT'\n  };\n}\n\nexport function generateSeries(\n  measuresHistory: MeasureHistory[],\n  graph: GraphType,\n  metrics: T.Metric[] | T.Dict<T.Metric>,\n  displayedMetrics: string[]\n): Serie[] {\n  if (displayedMetrics.length <= 0 || measuresHistory === undefined) {\n    return [];\n  }\n  return sortBy(\n    measuresHistory\n      .filter(measure => displayedMetrics.indexOf(measure.metric) >= 0)\n      .map(measure => {\n        if (measure.metric === MetricKey.uncovered_lines && !isCustomGraph(graph)) {\n          return generateCoveredLinesMetric(measure, measuresHistory);\n        }\n        const metric = findMetric(measure.metric, metrics);\n        return {\n          data: measure.history.map(analysis => ({\n            x: analysis.date,\n            y: metric && metric.type === 'LEVEL' ? analysis.value : Number(analysis.value)\n          })),\n          name: measure.metric,\n          translatedName: metric ? getLocalizedMetricName(metric) : localizeMetric(measure.metric),\n          type: metric ? metric.type : 'INT'\n        };\n      }),\n    serie =>\n      displayedMetrics.indexOf(serie.name === 'covered_lines' ? 'uncovered_lines' : serie.name)\n  );\n}\n\nexport function saveActivityGraph(\n  namespace: string,\n  project: string,\n  graph: GraphType,\n  metrics: string[] = []\n) {\n  save(namespace, graph, project);\n  if (isCustomGraph(graph)) {\n    save(`${namespace}.custom`, metrics.join(','), project);\n  }\n}\n\nexport function getActivityGraph(\n  namespace: string,\n  project: string\n): { graph: GraphType; customGraphs: string[] } {\n  const customGraphs = get(`${namespace}.custom`, project);\n  return {\n    graph: (get(namespace, project) as GraphType) || DEFAULT_GRAPH,\n    customGraphs: customGraphs ? customGraphs.split(',') : []\n  };\n}\n\nfunction findMetric(key: string, metrics: T.Metric[] | T.Dict<T.Metric>) {\n  if (Array.isArray(metrics)) {\n    return metrics.find(metric => metric.key === key);\n  }\n  return metrics[key];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum GraphType {\n  issues = 'issues',\n  coverage = 'coverage',\n  duplications = 'duplications',\n  custom = 'custom'\n}\n\nexport interface HistoryItem {\n  date: Date;\n  value?: string;\n}\n\nexport interface MeasureHistory {\n  metric: string;\n  history: HistoryItem[];\n}\n\nexport interface Serie {\n  data: Point[];\n  name: string;\n  translatedName: string;\n  type: string;\n}\n\nexport interface Point {\n  x: Date;\n  y: number | string | undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as addMonths from 'date-fns/add_months';\nimport * as setMonth from 'date-fns/set_month';\nimport * as setYear from 'date-fns/set_year';\nimport * as subMonths from 'date-fns/sub_months';\nimport { range } from 'lodash';\nimport * as React from 'react';\nimport { DayModifiers, Modifier, Modifiers } from 'react-day-picker';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { ButtonIcon, ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport CalendarIcon from 'sonar-ui-common/components/icons/CalendarIcon';\nimport ChevronLeftIcon from 'sonar-ui-common/components/icons/ChevronLeftIcon';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport {\n  getShortMonthName,\n  getShortWeekDayName,\n  getWeekDayName\n} from 'sonar-ui-common/helpers/l10n';\nimport './DayPicker.css';\nimport './styles.css';\n\nconst DayPicker = lazyLoadComponent(() => import('react-day-picker'), 'DayPicker');\n\ninterface Props {\n  className?: string;\n  currentMonth?: Date;\n  highlightFrom?: Date;\n  highlightTo?: Date;\n  inputClassName?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  name?: string;\n  onChange: (date: Date | undefined) => void;\n  placeholder: string;\n  value?: Date;\n}\n\ninterface State {\n  currentMonth: Date;\n  open: boolean;\n  lastHovered?: Date;\n}\n\ntype Week = [string, string, string, string, string, string, string];\n\nexport default class DateInput extends React.PureComponent<Props, State> {\n  input?: HTMLInputElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { currentMonth: props.value || props.currentMonth || new Date(), open: false };\n  }\n\n  focus = () => {\n    if (this.input) {\n      this.input.focus();\n    }\n    this.openCalendar();\n  };\n\n  handleResetClick = () => {\n    this.closeCalendar();\n    this.props.onChange(undefined);\n  };\n\n  openCalendar = () => {\n    this.setState({\n      currentMonth: this.props.value || this.props.currentMonth || new Date(),\n      lastHovered: undefined,\n      open: true\n    });\n  };\n\n  closeCalendar = () => {\n    this.setState({ open: false });\n  };\n\n  handleDayClick = (day: Date, modifiers: DayModifiers) => {\n    if (!modifiers.disabled) {\n      this.closeCalendar();\n      this.props.onChange(day);\n    }\n  };\n\n  handleDayMouseEnter = (day: Date, modifiers: DayModifiers) => {\n    this.setState({ lastHovered: modifiers.disabled ? undefined : day });\n  };\n\n  handleCurrentMonthChange = ({ value }: { value: number }) => {\n    this.setState((state: State) => ({ currentMonth: setMonth(state.currentMonth, value) }));\n  };\n\n  handleCurrentYearChange = ({ value }: { value: number }) => {\n    this.setState(state => ({ currentMonth: setYear(state.currentMonth, value) }));\n  };\n\n  handlePreviousMonthClick = () => {\n    this.setState(state => ({ currentMonth: subMonths(state.currentMonth, 1) }));\n  };\n\n  handleNextMonthClick = () => {\n    this.setState(state => ({ currentMonth: addMonths(state.currentMonth, 1) }));\n  };\n\n  render() {\n    const { highlightFrom, highlightTo, minDate, value } = this.props;\n    const { lastHovered } = this.state;\n\n    const after = this.props.maxDate || new Date();\n\n    const months = range(12);\n    const years = range(new Date().getFullYear() - 10, new Date().getFullYear() + 1);\n\n    const selectedDays: Modifier[] = value ? [value] : [];\n    let modifiers: Partial<Modifiers> | undefined;\n    const lastHoveredOrValue = lastHovered || value;\n\n    if (highlightFrom && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: highlightFrom, to: lastHoveredOrValue } };\n      selectedDays.push(highlightFrom);\n    }\n    if (highlightTo && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: lastHoveredOrValue, to: highlightTo } };\n      selectedDays.push(highlightTo);\n    }\n\n    const weekdaysLong = range(7).map(getWeekDayName) as Week;\n    const weekdaysShort = range(7).map(getShortWeekDayName) as Week;\n\n    return (\n      <OutsideClickHandler onClickOutside={this.closeCalendar}>\n        <span className={classNames('date-input-control', this.props.className)}>\n          <InputWrapper\n            className={classNames('date-input-control-input', this.props.inputClassName, {\n              'is-filled': this.props.value !== undefined\n            })}\n            innerRef={node => (this.input = node)}\n            name={this.props.name}\n            onFocus={this.openCalendar}\n            placeholder={this.props.placeholder}\n            readOnly={true}\n            type=\"text\"\n            value={value}\n          />\n          <CalendarIcon className=\"date-input-control-icon\" fill=\"\" />\n          {this.props.value !== undefined && (\n            <ClearButton\n              className=\"button-tiny date-input-control-reset\"\n              iconProps={{ size: 12 }}\n              onClick={this.handleResetClick}\n            />\n          )}\n          {this.state.open && (\n            <div className=\"date-input-calendar\">\n              <nav className=\"date-input-calendar-nav\">\n                <ButtonIcon className=\"button-small\" onClick={this.handlePreviousMonthClick}>\n                  <ChevronLeftIcon />\n                </ButtonIcon>\n                <div className=\"date-input-calender-month\">\n                  <Select\n                    className=\"date-input-calender-month-select\"\n                    onChange={this.handleCurrentMonthChange}\n                    options={months.map(month => ({\n                      label: getShortMonthName(month),\n                      value: month\n                    }))}\n                    value={this.state.currentMonth.getMonth()}\n                  />\n                  <Select\n                    className=\"date-input-calender-month-select spacer-left\"\n                    onChange={this.handleCurrentYearChange}\n                    options={years.map(year => ({ label: String(year), value: year }))}\n                    value={this.state.currentMonth.getFullYear()}\n                  />\n                </div>\n                <ButtonIcon className=\"button-small\" onClick={this.handleNextMonthClick}>\n                  <ChevronRightIcon />\n                </ButtonIcon>\n              </nav>\n              <DayPicker\n                captionElement={<NullComponent />}\n                disabledDays={{ after, before: minDate }}\n                firstDayOfWeek={1}\n                modifiers={modifiers}\n                month={this.state.currentMonth}\n                navbarElement={<NullComponent />}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n                selectedDays={selectedDays}\n                weekdaysLong={weekdaysLong}\n                weekdaysShort={weekdaysShort}\n              />\n            </div>\n          )}\n        </span>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nfunction NullComponent() {\n  return null;\n}\n\ntype InputWrapperProps = T.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value'> &\n  InjectedIntlProps & {\n    innerRef: React.Ref<HTMLInputElement>;\n    value: Date | undefined;\n  };\n\nconst InputWrapper = injectIntl(({ innerRef, intl, value, ...other }: InputWrapperProps) => {\n  const formattedValue =\n    value && intl.formatDate(value, { year: 'numeric', month: 'short', day: 'numeric' });\n  return <input {...other} ref={innerRef} value={formattedValue || ''} />;\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".DayPicker{display:inline-block}.DayPicker-wrapper{position:relative;-webkit-user-select:none;-ms-user-select:none;user-select:none;padding-bottom:8px;flex-direction:row}.DayPicker-Months{display:flex;flex-wrap:wrap;justify-content:center}.DayPicker-Month{display:table;border-collapse:collapse;border-spacing:0;-webkit-user-select:none;-ms-user-select:none;user-select:none;margin:8px 8px 0}.DayPicker-Weekdays{display:table-header-group}.DayPicker-WeekdaysRow{display:table-row}.DayPicker-Weekday{display:table-cell;padding:8px;font-size:12px;text-align:center;color:#999}.DayPicker-Weekday abbr[title]{border-bottom:none;text-decoration:none}.DayPicker-Body{display:table-row-group}.DayPicker-Week{display:table-row}.DayPicker-Day{display:table-cell;line-height:15px;padding:8px;text-align:center;cursor:pointer;vertical-align:top;outline:none}.DayPicker--interactionDisabled .DayPicker-Day{cursor:default}.DayPicker-Footer{padding-top:8px}.DayPicker-Day--today{font-weight:700}.DayPicker-Day--outside{cursor:default;color:#8b9898}.DayPicker-Day--disabled{color:#cdcdcd;cursor:not-allowed}.DayPicker-Day--sunday{background-color:#f7f8f8}.DayPicker-Day--sunday:not(.DayPicker-Day--today){color:#dce0e0}.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:#4b9fd5;color:#fff}.DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--highlighted):not(.DayPicker-Day--outside):hover{background-color:#f3f3f3}.DayPicker-Day--highlighted:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside){background-color:#cae3f2}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".date-input-control{position:relative;display:inline-block;cursor:pointer}.date-input-control-input{width:130px;padding-left:24px!important;cursor:pointer}.date-input-control-input.is-filled{padding-right:16px!important}.date-input-control-icon{position:absolute;top:4px;left:4px}.date-input-control-icon path{fill:#cdcdcd;transition:fill .3s ease}.date-input-control-input:focus+.date-input-control-icon path{fill:#4b9fd5}.date-input-control-reset{position:absolute;top:4px;right:4px;border:none}.date-input-calendar{position:absolute;z-index:7500;top:100%;left:0;border:1px solid #e6e6e6;background-color:#fff;box-shadow:0 6px 12px rgba(0,0,0,.175)}.date-input-calendar-nav{display:flex;justify-content:space-between;align-items:center;padding-top:8px;padding-left:8px;padding-right:8px}.date-input-calender-month-select{width:70px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateInput from './DateInput';\n\ntype DateRange = { from?: Date; to?: Date };\n\ninterface Props {\n  className?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  onChange: (date: DateRange) => void;\n  value?: DateRange;\n}\n\nexport default class DateRangeInput extends React.PureComponent<Props> {\n  toDateInput?: DateInput | null;\n\n  get from() {\n    return this.props.value && this.props.value.from;\n  }\n\n  get to() {\n    return this.props.value && this.props.value.to;\n  }\n\n  handleFromChange = (from: Date | undefined) => {\n    this.props.onChange({ from, to: this.to });\n\n    // use `setTimeout` to work around the immediate closing of the `toDateInput`\n    setTimeout(() => {\n      if (from && !this.to && this.toDateInput) {\n        this.toDateInput.focus();\n      }\n    }, 0);\n  };\n\n  handleToChange = (to: Date | undefined) => {\n    this.props.onChange({ from: this.from, to });\n  };\n\n  render() {\n    return (\n      <div className={classNames('display-inline-flex-center', this.props.className)}>\n        <DateInput\n          currentMonth={this.to}\n          data-test=\"from\"\n          highlightTo={this.to}\n          maxDate={this.to}\n          onChange={this.handleFromChange}\n          placeholder={translate('start_date')}\n          value={this.from}\n        />\n        <span className=\"note little-spacer-left little-spacer-right\">{translate('to_')}</span>\n        <DateInput\n          currentMonth={this.from}\n          data-test=\"to\"\n          highlightFrom={this.from}\n          minDate={this.from}\n          onChange={this.handleToChange}\n          placeholder={translate('end_date')}\n          ref={element => (this.toDateInput = element)}\n          value={this.to}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}