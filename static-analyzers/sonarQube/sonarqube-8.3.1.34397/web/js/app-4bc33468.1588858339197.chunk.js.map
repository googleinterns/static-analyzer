{"version":3,"sources":["webpack:///./src/main/js/store/organizations.ts","webpack:///./src/main/js/store/languages.ts","webpack:///./src/main/js/store/branches.ts","webpack:///./src/main/js/store/metrics.ts","webpack:///./src/main/js/types/editions.ts","webpack:///./src/main/js/store/utils/configureStore.ts","webpack:///./src/main/js/store/rootReducer.ts","webpack:///./src/main/js/store/globalMessages.ts","webpack:///./src/main/js/types/metrics.ts","webpack:///./src/main/js/store/rootActions.ts","webpack:///./src/main/js/store/users.ts","webpack:///./src/main/js/store/appState.ts"],"names":["receiveOrganizations","organizations","type","receiveMyOrganizations","updateOrganization","key","changes","deleteOrganization","getOrganizationByKey","state","byKey","getMyOrganizations","my","map","action","nextState","forEach","organization","onReceiveOrganizations","actions","admin","o","receiveLanguages","languages","getLanguages","getLanguageByKey","Actions","registerBranchStatusAction","branchLike","component","status","conditions","ignoredConditions","RegisterBranchStatus","getBranchStatusByBranchLike","branchLikeKey","byComponent","receiveMetrics","metrics","getMetrics","getMetricsKey","keys","getMetricByKey","f","EditionKey","middlewares","finalCreateStore","configureStore","rootReducer","initialState","getAppState","appState","getGlobalMessages","globalMessages","getCurrentUserSetting","users","getCurrentUser","areThereCustomOrganizations","organizationsEnabled","getGlobalSettingValue","settingsApp","getSettingsAppDefinition","getSettingsAppAllCategories","getSettingsAppDefaultCategory","getSettingsAppSettingsForCategory","category","getSettingsAppChangedValue","isSettingsAppLoading","getSettingsAppValidationMessage","branches","MessageLevel","closeGlobalMessage","id","closeAllGlobalMessages","addGlobalMessage","message","level","dispatch","addGlobalMessageActionCreator","setTimeout","addGlobalErrorMessage","Error","addGlobalSuccessMessage","Success","filter","MetricKey","isMetricKey","Object","values","includes","fetchLanguages","then","fetchMetrics","fetchOrganizations","join","r","fetchOrganization","Promise","all","navigation","organizationWithPermissions","fetchBranchStatus","projectKey","projectStatus","doLogin","login","password","reject","doLogout","requireAuthorization","router","returnTo","window","location","pathname","search","hash","replace","query","return_to","registerBranchStatus","receiveCurrentUser","user","ReceiveCurrentUser","skipOnboardingAction","SkipOnboardingAction","skipOnboarding","setCurrentUserSettingAction","setting","SetCurrentUserSetting","setHomePage","homepage","SetHomePageAction","setHomePageAction","setCurrentUserSetting","getState","oldSetting","value","currentUser","settings","find","usersByLogin","userLogins","isLoggedIn","showOnboardingTutorial","index","findIndex","push","setAppState","SetAppState","setAdminPages","adminPages","SetAdminPages","RequireAuthorization","defaultValue","authenticationError","authorizationError","defaultOrganization","edition","undefined","productionDatabase","qualifiers","version"],"mappings":"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,0CACA,gDACA,0BACA,gDACA,oDACA,4CACA,sCACA,sBACA,4CACA,sCACA,4BACA,wCACA,sCACA,sCACA,sDACA,wCACA,sFACA,gDACA,gDACA,oCACA,8DACA,gCACA,8CACA,gBACA,4CACA,sEACA,wBACA,oCACA,oCACA,oCACA,gFACA,4EACA,wEACA,kEACA,gFACA,sCACA,gCACA,gCACA,gBACA,kCACA,gEACA,sCACA,sCACA,gBACA,0BACA,4DACA,kDACA,4CACA,sBACA,oCACA,oDACA,8BACA,oDACA,8CACA,gDACA,8CACA,8DACA,4CACA,wCACA,wBACA,0CACA,0DACA,8CACA,8CACA,kDACA,0EACA,gDACA,kEACA,4CACA,oEACA,0DACA,8CACA,0CACA,sDACA,4CACA,kCACA,4CACA,4BACA,sBACA,0BACA,gEACA,oDACA,8CACA,sCACA,8CACA,8CACA,0CACA,wDACA,kEACA,oCACA,wCACA,0DACA,oCACA,kDACA,4DACA,kDACA,gEACA,gCACA,0CACA,sCACA,4BACA,8BACA,0BACA,4CACA,wBACA,4BACA,4CACA,gCACA,8CACA,gBACA,8CACA,oCACA,0BACA,oCACA,oCA9HF,CAAYA,MAAS,M,mqBCiBf,SAAUK,IACd,OAAO,SAACb,GACN,cAAec,MACb,SAAApE,GAAa,OAAAsD,EAAS,YAAT,OACb,gBAKA,SAAUe,IACd,OAAO,SAACf,GACN,cAAgBc,MACd,SAAArD,GAAW,OAAAuC,EAAS,YAAT,OACX,gBAKA,SAAUgB,EAAmB5F,GACjC,OAAO,SAAC4E,GACN,YAAiB,CAAE5E,cAAeA,GAAiBA,EAAc6F,SAAUH,MACzE,SAAAI,GAAK,OAAAlB,EAAS,YAAqBkB,EAA9B,mBACL,gBAKC,IAAMC,EAAoB,SAAC3F,GAAgB,gBAACwE,GACjD,OAAOoB,QAAQC,IAAI,CAAC,YAAgB7F,GAAM,YAA0BA,KAAOsF,MACzE,SAAC,G,IAAC1E,EAAA,KAAckF,EAAA,KACd,GAAIlF,EAAc,CAChB,IAAMmF,EAA8B,EAAH,KAAQnF,GAAiBkF,GAC1DtB,EAAS,YAA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","file":"js/app-4bc33468.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit, uniq, without } from 'lodash';\nimport { combineReducers } from 'redux';\nimport { ActionType } from './utils/actions';\n\ntype ReceiveOrganizationsAction =\n  | ActionType<typeof receiveOrganizations, 'RECEIVE_ORGANIZATIONS'>\n  | ActionType<typeof receiveMyOrganizations, 'RECEIVE_MY_ORGANIZATIONS'>;\n\ntype Action =\n  | ReceiveOrganizationsAction\n  | ActionType<typeof createOrganization, 'CREATE_ORGANIZATION'>\n  | ActionType<typeof updateOrganization, 'UPDATE_ORGANIZATION'>\n  | ActionType<typeof deleteOrganization, 'DELETE_ORGANIZATION'>;\n\nexport interface State {\n  byKey: T.Dict<T.Organization>;\n  my: string[];\n}\n\nexport function receiveOrganizations(organizations: T.Organization[]) {\n  return { type: 'RECEIVE_ORGANIZATIONS', organizations };\n}\n\nexport function receiveMyOrganizations(organizations: T.Organization[]) {\n  return { type: 'RECEIVE_MY_ORGANIZATIONS', organizations };\n}\n\nexport function createOrganization(organization: T.Organization) {\n  return { type: 'CREATE_ORGANIZATION', organization };\n}\n\nexport function updateOrganization(key: string, changes: T.OrganizationBase) {\n  return { type: 'UPDATE_ORGANIZATION', key, changes };\n}\n\nexport function deleteOrganization(key: string) {\n  return { type: 'DELETE_ORGANIZATION', key };\n}\n\nfunction onReceiveOrganizations(state: State['byKey'], action: ReceiveOrganizationsAction) {\n  const nextState = { ...state };\n  action.organizations.forEach(organization => {\n    nextState[organization.key] = { ...state[organization.key], ...organization };\n  });\n  return nextState;\n}\n\nfunction byKey(state: State['byKey'] = {}, action: Action): State['byKey'] {\n  switch (action.type) {\n    case 'RECEIVE_ORGANIZATIONS':\n    case 'RECEIVE_MY_ORGANIZATIONS':\n      return onReceiveOrganizations(state, action);\n    case 'CREATE_ORGANIZATION':\n      return {\n        ...state,\n        [action.organization.key]: {\n          ...action.organization,\n          actions: { ...(action.organization.actions || {}), admin: true }\n        }\n      };\n    case 'UPDATE_ORGANIZATION':\n      return {\n        ...state,\n        [action.key]: {\n          ...state[action.key],\n          key: action.key,\n          ...action.changes\n        }\n      };\n    case 'DELETE_ORGANIZATION':\n      return omit(state, action.key);\n    default:\n      return state;\n  }\n}\n\nfunction my(state: State['my'] = [], action: Action): State['my'] {\n  switch (action.type) {\n    case 'RECEIVE_MY_ORGANIZATIONS':\n      return uniq([...state, ...action.organizations.map(o => o.key)]);\n    case 'CREATE_ORGANIZATION':\n      return uniq([...state, action.organization.key]);\n    case 'DELETE_ORGANIZATION':\n      return without(state, action.key);\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({ byKey, my });\n\nexport function getOrganizationByKey(state: State, key: string) {\n  return state.byKey[key];\n}\n\nexport function getMyOrganizations(state: State) {\n  return state.my.map(key => getOrganizationByKey(state, key));\n}\n\nexport function areThereCustomOrganizations(state: State) {\n  return Object.keys(state.byKey).length > 1;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy } from 'lodash';\nimport { ActionType } from './utils/actions';\n\nexport function receiveLanguages(languages: Array<{ key: string; name: string }>) {\n  return { type: 'RECEIVE_LANGUAGES', languages };\n}\n\ntype Action = ActionType<typeof receiveLanguages, 'RECEIVE_LANGUAGES'>;\n\nexport default function(state: T.Languages = {}, action: Action): T.Languages {\n  if (action.type === 'RECEIVE_LANGUAGES') {\n    return keyBy(action.languages, 'key');\n  }\n\n  return state;\n}\n\nexport function getLanguages(state: T.Languages) {\n  return state;\n}\n\nexport function getLanguageByKey(state: T.Languages, key: string) {\n  return state[key];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBranchLikeKey } from '../helpers/branch-like';\nimport { BranchLike } from '../types/branch-like';\nimport { QualityGateStatusCondition } from '../types/quality-gates';\nimport { ActionType } from './utils/actions';\n\nexport interface BranchStatusData {\n  conditions?: QualityGateStatusCondition[];\n  ignoredConditions?: boolean;\n  status?: T.Status;\n}\n\nexport interface State {\n  byComponent: T.Dict<T.Dict<BranchStatusData>>;\n}\n\nconst enum Actions {\n  RegisterBranchStatus = 'REGISTER_BRANCH_STATUS'\n}\n\ntype Action = ActionType<typeof registerBranchStatusAction, Actions.RegisterBranchStatus>;\n\nexport function registerBranchStatusAction(\n  branchLike: BranchLike,\n  component: string,\n  status: T.Status,\n  conditions?: QualityGateStatusCondition[],\n  ignoredConditions?: boolean\n) {\n  return {\n    type: Actions.RegisterBranchStatus,\n    branchLike,\n    component,\n    conditions,\n    ignoredConditions,\n    status\n  };\n}\n\nexport default function(state: State = { byComponent: {} }, action: Action): State {\n  if (action.type === Actions.RegisterBranchStatus) {\n    const { component, conditions, branchLike, ignoredConditions, status } = action;\n    const branchLikeKey = getBranchLikeKey(branchLike);\n    return {\n      byComponent: {\n        ...state.byComponent,\n        [component]: {\n          ...(state.byComponent[component] || {}),\n          [branchLikeKey]: {\n            conditions,\n            ignoredConditions,\n            status\n          }\n        }\n      }\n    };\n  }\n\n  return state;\n}\n\nexport function getBranchStatusByBranchLike(\n  state: State,\n  component: string,\n  branchLike: BranchLike\n): BranchStatusData {\n  const branchLikeKey = getBranchLikeKey(branchLike);\n  return state.byComponent[component] && state.byComponent[component][branchLikeKey];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy } from 'lodash';\nimport { combineReducers } from 'redux';\nimport { ActionType } from './utils/actions';\n\nexport function receiveMetrics(metrics: T.Metric[]) {\n  return { type: 'RECEIVE_METRICS', metrics };\n}\n\ntype Action = ActionType<typeof receiveMetrics, 'RECEIVE_METRICS'>;\n\nexport type State = { byKey: T.Dict<T.Metric>; keys: string[] };\n\nconst byKey = (state: State['byKey'] = {}, action: Action) => {\n  if (action.type === 'RECEIVE_METRICS') {\n    return keyBy(action.metrics, 'key');\n  }\n  return state;\n};\n\nconst keys = (state: State['keys'] = [], action: Action) => {\n  if (action.type === 'RECEIVE_METRICS') {\n    return action.metrics.map(f => f.key);\n  }\n\n  return state;\n};\n\nexport default combineReducers({ byKey, keys });\n\nexport function getMetrics(state: State) {\n  return state.byKey;\n}\n\nexport function getMetricsKey(state: State) {\n  return state.keys;\n}\n\nexport function getMetricByKey(state: State, key: string) {\n  return state.byKey[key];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { SystemUpgradeDownloadUrls } from './system';\n\nexport enum EditionKey {\n  community = 'community',\n  developer = 'developer',\n  enterprise = 'enterprise',\n  datacenter = 'datacenter'\n}\n\nexport interface Edition {\n  downloadProperty: keyof SystemUpgradeDownloadUrls;\n  homeUrl: string;\n  key: EditionKey;\n  name: string;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\n\ntype RootReducer = typeof import('../rootReducer').default;\ntype State = import('../rootReducer').Store;\n\nconst middlewares = [thunk as ThunkMiddleware<State, any>];\nconst composed = [];\n\nif (process.env.NODE_ENV === 'development') {\n  const { __REDUX_DEVTOOLS_EXTENSION__ } = window as any;\n  composed.push(__REDUX_DEVTOOLS_EXTENSION__ ? __REDUX_DEVTOOLS_EXTENSION__() : (f: Function) => f);\n}\n\nconst finalCreateStore = compose(applyMiddleware(...middlewares), ...composed)(createStore);\n\nexport default function configureStore(rootReducer: RootReducer, initialState?: State) {\n  return finalCreateStore(rootReducer, initialState);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { combineReducers } from 'redux';\nimport settingsApp, * as fromSettingsApp from '../apps/settings/store/rootReducer';\nimport { BranchLike } from '../types/branch-like';\nimport appState from './appState';\nimport branches, * as fromBranches from './branches';\nimport globalMessages, * as fromGlobalMessages from './globalMessages';\nimport languages, * as fromLanguages from './languages';\nimport metrics, * as fromMetrics from './metrics';\nimport organizations, * as fromOrganizations from './organizations';\nimport users, * as fromUsers from './users';\n\nexport type Store = {\n  appState: T.AppState;\n  branches: fromBranches.State;\n  globalMessages: fromGlobalMessages.State;\n  languages: T.Languages;\n  metrics: fromMetrics.State;\n  organizations: fromOrganizations.State;\n  users: fromUsers.State;\n\n  // apps\n  settingsApp: any;\n};\n\nexport default combineReducers<Store>({\n  appState,\n  branches,\n  globalMessages,\n  languages,\n  metrics,\n  organizations,\n  users,\n\n  // apps\n  settingsApp\n});\n\nexport function getAppState(state: Store) {\n  return state.appState;\n}\n\nexport function getGlobalMessages(state: Store) {\n  return fromGlobalMessages.getGlobalMessages(state.globalMessages);\n}\n\nexport function getLanguages(state: Store) {\n  return fromLanguages.getLanguages(state.languages);\n}\n\nexport function getCurrentUserSetting(state: Store, key: T.CurrentUserSettingNames) {\n  return fromUsers.getCurrentUserSetting(state.users, key);\n}\n\nexport function getCurrentUser(state: Store) {\n  return fromUsers.getCurrentUser(state.users);\n}\n\nexport function getMetrics(state: Store) {\n  return fromMetrics.getMetrics(state.metrics);\n}\n\nexport function getMetricsKey(state: Store) {\n  return fromMetrics.getMetricsKey(state.metrics);\n}\n\nexport function getMetricByKey(state: Store, key: string) {\n  return fromMetrics.getMetricByKey(state.metrics, key);\n}\n\nexport function getOrganizationByKey(state: Store, key: string) {\n  return fromOrganizations.getOrganizationByKey(state.organizations, key);\n}\n\nexport function getMyOrganizations(state: Store) {\n  return fromOrganizations.getMyOrganizations(state.organizations);\n}\n\nexport function areThereCustomOrganizations(state: Store) {\n  return getAppState(state).organizationsEnabled;\n}\n\nexport function getGlobalSettingValue(state: Store, key: string) {\n  return fromSettingsApp.getValue(state.settingsApp, key);\n}\n\nexport function getSettingsAppDefinition(state: Store, key: string) {\n  return fromSettingsApp.getDefinition(state.settingsApp, key);\n}\n\nexport function getSettingsAppAllCategories(state: Store) {\n  return fromSettingsApp.getAllCategories(state.settingsApp);\n}\n\nexport function getSettingsAppDefaultCategory(state: Store) {\n  return fromSettingsApp.getDefaultCategory(state.settingsApp);\n}\n\nexport function getSettingsAppSettingsForCategory(\n  state: Store,\n  category: string,\n  component?: string\n) {\n  return fromSettingsApp.getSettingsForCategory(state.settingsApp, category, component);\n}\n\nexport function getSettingsAppChangedValue(state: Store, key: string) {\n  return fromSettingsApp.getChangedValue(state.settingsApp, key);\n}\n\nexport function isSettingsAppLoading(state: Store, key: string) {\n  return fromSettingsApp.isLoading(state.settingsApp, key);\n}\n\nexport function getSettingsAppValidationMessage(state: Store, key: string) {\n  return fromSettingsApp.getValidationMessage(state.settingsApp, key);\n}\n\nexport function getBranchStatusByBranchLike(\n  state: Store,\n  component: string,\n  branchLike: BranchLike\n) {\n  return fromBranches.getBranchStatusByBranchLike(state.branches, component, branchLike);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqueId } from 'lodash';\nimport { Dispatch } from 'redux';\nimport { requireAuthorization } from './appState';\nimport { ActionType } from './utils/actions';\n\nenum MessageLevel {\n  Error = 'ERROR',\n  Success = 'SUCCESS'\n}\n\ninterface Message {\n  id: string;\n  message: string;\n  level: MessageLevel;\n}\n\nfunction addGlobalMessageActionCreator(id: string, message: string, level: MessageLevel) {\n  return { type: 'ADD_GLOBAL_MESSAGE', message, level, id };\n}\n\nexport function closeGlobalMessage(id: string) {\n  return { type: 'CLOSE_GLOBAL_MESSAGE', id };\n}\n\nexport function closeAllGlobalMessages() {\n  return { type: 'CLOSE_ALL_GLOBAL_MESSAGES' };\n}\n\ntype Action =\n  | ActionType<typeof addGlobalMessageActionCreator, 'ADD_GLOBAL_MESSAGE'>\n  | ActionType<typeof closeGlobalMessage, 'CLOSE_GLOBAL_MESSAGE'>\n  | ActionType<typeof closeAllGlobalMessages, 'CLOSE_ALL_GLOBAL_MESSAGES'>\n  | ActionType<typeof requireAuthorization, 'REQUIRE_AUTHORIZATION'>;\n\nfunction addGlobalMessage(message: string, level: MessageLevel) {\n  return (dispatch: Dispatch) => {\n    const id = uniqueId('global-message-');\n    dispatch(addGlobalMessageActionCreator(id, message, level));\n    setTimeout(() => dispatch(closeGlobalMessage(id)), 5000);\n  };\n}\n\nexport function addGlobalErrorMessage(message: string) {\n  return addGlobalMessage(message, MessageLevel.Error);\n}\n\nexport function addGlobalSuccessMessage(message: string) {\n  return addGlobalMessage(message, MessageLevel.Success);\n}\n\nexport type State = Message[];\n\nexport default function(state: State = [], action: Action): State {\n  switch (action.type) {\n    case 'ADD_GLOBAL_MESSAGE':\n      return [{ id: action.id, message: action.message, level: action.level }];\n\n    case 'REQUIRE_AUTHORIZATION':\n      // FIXME l10n\n      return [\n        {\n          id: uniqueId('global-message-'),\n          message:\n            'You are not authorized to access this page. ' +\n            'Please log in with more privileges and try again.',\n          level: MessageLevel.Error\n        }\n      ];\n\n    case 'CLOSE_GLOBAL_MESSAGE':\n      return state.filter(message => message.id !== action.id);\n\n    case 'CLOSE_ALL_GLOBAL_MESSAGES':\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport function getGlobalMessages(state: State) {\n  return state;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum MetricKey {\n  alert_status = 'alert_status',\n  blocker_violations = 'blocker_violations',\n  branch_coverage = 'branch_coverage',\n  bugs = 'bugs',\n  burned_budget = 'burned_budget',\n  business_value = 'business_value',\n  class_complexity = 'class_complexity',\n  classes = 'classes',\n  code_smells = 'code_smells',\n  cognitive_complexity = 'cognitive_complexity',\n  comment_lines = 'comment_lines',\n  comment_lines_data = 'comment_lines_data',\n  comment_lines_density = 'comment_lines_density',\n  complexity = 'complexity',\n  complexity_in_classes = 'complexity_in_classes',\n  complexity_in_functions = 'complexity_in_functions',\n  conditions_to_cover = 'conditions_to_cover',\n  confirmed_issues = 'confirmed_issues',\n  coverage = 'coverage',\n  critical_violations = 'critical_violations',\n  development_cost = 'development_cost',\n  directories = 'directories',\n  duplicated_blocks = 'duplicated_blocks',\n  duplicated_files = 'duplicated_files',\n  duplicated_lines = 'duplicated_lines',\n  duplicated_lines_density = 'duplicated_lines_density',\n  duplications_data = 'duplications_data',\n  effort_to_reach_maintainability_rating_a = 'effort_to_reach_maintainability_rating_a',\n  executable_lines_data = 'executable_lines_data',\n  false_positive_issues = 'false_positive_issues',\n  file_complexity = 'file_complexity',\n  file_complexity_distribution = 'file_complexity_distribution',\n  filename_size = 'filename_size',\n  filename_size_rating = 'filename_size_rating',\n  files = 'files',\n  function_complexity = 'function_complexity',\n  function_complexity_distribution = 'function_complexity_distribution',\n  functions = 'functions',\n  generated_lines = 'generated_lines',\n  generated_ncloc = 'generated_ncloc',\n  info_violations = 'info_violations',\n  last_change_on_maintainability_rating = 'last_change_on_maintainability_rating',\n  last_change_on_releasability_rating = 'last_change_on_releasability_rating',\n  last_change_on_reliability_rating = 'last_change_on_reliability_rating',\n  last_change_on_security_rating = 'last_change_on_security_rating',\n  last_change_on_security_review_rating = 'last_change_on_security_review_rating',\n  last_commit_date = 'last_commit_date',\n  leak_projects = 'leak_projects',\n  line_coverage = 'line_coverage',\n  lines = 'lines',\n  lines_to_cover = 'lines_to_cover',\n  maintainability_rating_effort = 'maintainability_rating_effort',\n  major_violations = 'major_violations',\n  minor_violations = 'minor_violations',\n  ncloc = 'ncloc',\n  ncloc_data = 'ncloc_data',\n  ncloc_language_distribution = 'ncloc_language_distribution',\n  new_blocker_violations = 'new_blocker_violations',\n  new_branch_coverage = 'new_branch_coverage',\n  new_bugs = 'new_bugs',\n  new_code_smells = 'new_code_smells',\n  new_conditions_to_cover = 'new_conditions_to_cover',\n  new_coverage = 'new_coverage',\n  new_critical_violations = 'new_critical_violations',\n  new_development_cost = 'new_development_cost',\n  new_duplicated_blocks = 'new_duplicated_blocks',\n  new_duplicated_lines = 'new_duplicated_lines',\n  new_duplicated_lines_density = 'new_duplicated_lines_density',\n  new_info_violations = 'new_info_violations',\n  new_line_coverage = 'new_line_coverage',\n  new_lines = 'new_lines',\n  new_lines_to_cover = 'new_lines_to_cover',\n  new_maintainability_rating = 'new_maintainability_rating',\n  new_major_violations = 'new_major_violations',\n  new_minor_violations = 'new_minor_violations',\n  new_reliability_rating = 'new_reliability_rating',\n  new_reliability_remediation_effort = 'new_reliability_remediation_effort',\n  new_security_hotspots = 'new_security_hotspots',\n  new_security_hotspots_reviewed = 'new_security_hotspots_reviewed',\n  new_security_rating = 'new_security_rating',\n  new_security_remediation_effort = 'new_security_remediation_effort',\n  new_security_review_rating = 'new_security_review_rating',\n  new_sqale_debt_ratio = 'new_sqale_debt_ratio',\n  new_technical_debt = 'new_technical_debt',\n  new_uncovered_conditions = 'new_uncovered_conditions',\n  new_uncovered_lines = 'new_uncovered_lines',\n  new_violations = 'new_violations',\n  new_vulnerabilities = 'new_vulnerabilities',\n  open_issues = 'open_issues',\n  projects = 'projects',\n  public_api = 'public_api',\n  public_documented_api_density = 'public_documented_api_density',\n  public_undocumented_api = 'public_undocumented_api',\n  quality_gate_details = 'quality_gate_details',\n  quality_profiles = 'quality_profiles',\n  releasability_effort = 'releasability_effort',\n  releasability_rating = 'releasability_rating',\n  reliability_rating = 'reliability_rating',\n  reliability_rating_effort = 'reliability_rating_effort',\n  reliability_remediation_effort = 'reliability_remediation_effort',\n  reopened_issues = 'reopened_issues',\n  security_hotspots = 'security_hotspots',\n  security_hotspots_reviewed = 'security_hotspots_reviewed',\n  security_rating = 'security_rating',\n  security_rating_effort = 'security_rating_effort',\n  security_remediation_effort = 'security_remediation_effort',\n  security_review_rating = 'security_review_rating',\n  security_review_rating_effort = 'security_review_rating_effort',\n  skipped_tests = 'skipped_tests',\n  sonarjava_feedback = 'sonarjava_feedback',\n  sqale_debt_ratio = 'sqale_debt_ratio',\n  sqale_index = 'sqale_index',\n  sqale_rating = 'sqale_rating',\n  statements = 'statements',\n  team_at_sonarsource = 'team_at_sonarsource',\n  team_size = 'team_size',\n  test_errors = 'test_errors',\n  test_execution_time = 'test_execution_time',\n  test_failures = 'test_failures',\n  test_success_density = 'test_success_density',\n  tests = 'tests',\n  uncovered_conditions = 'uncovered_conditions',\n  uncovered_lines = 'uncovered_lines',\n  violations = 'violations',\n  vulnerabilities = 'vulnerabilities',\n  wont_fix_issues = 'wont_fix_issues'\n}\n\nexport function isMetricKey(key: string): key is MetricKey {\n  return (Object.values(MetricKey) as string[]).includes(key);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { InjectedRouter } from 'react-router';\nimport { Dispatch } from 'redux';\nimport * as auth from '../api/auth';\nimport { getLanguages } from '../api/languages';\nimport { getAllMetrics } from '../api/metrics';\nimport { getOrganization, getOrganizationNavigation, getOrganizations } from '../api/organizations';\nimport { getQualityGateProjectStatus } from '../api/quality-gates';\nimport { getBranchLikeQuery } from '../helpers/branch-like';\nimport { extractStatusConditionsFromProjectStatus } from '../helpers/qualityGates';\nimport { BranchLike } from '../types/branch-like';\nimport { requireAuthorization as requireAuthorizationAction } from './appState';\nimport { registerBranchStatusAction } from './branches';\nimport { addGlobalErrorMessage } from './globalMessages';\nimport { receiveLanguages } from './languages';\nimport { receiveMetrics } from './metrics';\nimport { receiveOrganizations } from './organizations';\n\nexport function fetchLanguages() {\n  return (dispatch: Dispatch) => {\n    getLanguages().then(\n      languages => dispatch(receiveLanguages(languages)),\n      () => {}\n    );\n  };\n}\n\nexport function fetchMetrics() {\n  return (dispatch: Dispatch) => {\n    getAllMetrics().then(\n      metrics => dispatch(receiveMetrics(metrics)),\n      () => {}\n    );\n  };\n}\n\nexport function fetchOrganizations(organizations: string[]) {\n  return (dispatch: Dispatch) => {\n    getOrganizations({ organizations: organizations && organizations.join() }).then(\n      r => dispatch(receiveOrganizations(r.organizations)),\n      () => {}\n    );\n  };\n}\n\nexport const fetchOrganization = (key: string) => (dispatch: Dispatch) => {\n  return Promise.all([getOrganization(key), getOrganizationNavigation(key)]).then(\n    ([organization, navigation]) => {\n      if (organization) {\n        const organizationWithPermissions = { ...organization, ...navigation };\n        dispatch(receiveOrganizations([organizationWithPermissions]));\n      }\n    }\n  );\n};\n\nexport function fetchBranchStatus(branchLike: BranchLike, projectKey: string) {\n  return (dispatch: Dispatch<any>) => {\n    getQualityGateProjectStatus({ projectKey, ...getBranchLikeQuery(branchLike) }).then(\n      projectStatus => {\n        const { ignoredConditions, status } = projectStatus;\n        const conditions = extractStatusConditionsFromProjectStatus(projectStatus);\n        dispatch(\n          registerBranchStatusAction(branchLike, projectKey, status, conditions, ignoredConditions)\n        );\n      },\n      () => {\n        dispatch(addGlobalErrorMessage('Fetching Quality Gate status failed'));\n      }\n    );\n  };\n}\n\nexport function doLogin(login: string, password: string) {\n  return (dispatch: Dispatch<any>) =>\n    auth.login(login, password).then(\n      () => {\n        /* everything is fine */\n      },\n      () => {\n        dispatch(addGlobalErrorMessage('Authentication failed'));\n        return Promise.reject();\n      }\n    );\n}\n\nexport function doLogout() {\n  return (dispatch: Dispatch<any>) =>\n    auth.logout().then(\n      () => {\n        /* everything is fine */\n      },\n      () => {\n        dispatch(addGlobalErrorMessage('Logout failed'));\n        return Promise.reject();\n      }\n    );\n}\n\nexport function requireAuthorization(router: Pick<InjectedRouter, 'replace'>) {\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n  router.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n  return requireAuthorizationAction();\n}\n\nexport function registerBranchStatus(branchLike: BranchLike, component: string, status: T.Status) {\n  return (dispatch: Dispatch) => {\n    dispatch(registerBranchStatusAction(branchLike, component, status));\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq } from 'lodash';\nimport { combineReducers, Dispatch } from 'redux';\nimport * as api from '../api/users';\nimport { isLoggedIn } from '../helpers/users';\nimport { ActionType } from './utils/actions';\n\nconst enum Actions {\n  ReceiveCurrentUser = 'RECEIVE_CURRENT_USER',\n  SetCurrentUserSetting = 'SET_CURRENT_USER_SETTING',\n  SkipOnboardingAction = 'SKIP_ONBOARDING',\n  SetHomePageAction = 'SET_HOMEPAGE'\n}\n\ntype Action =\n  | ActionType<typeof receiveCurrentUser, Actions.ReceiveCurrentUser>\n  | ActionType<typeof setCurrentUserSettingAction, Actions.SetCurrentUserSetting>\n  | ActionType<typeof setHomePageAction, Actions.SetHomePageAction>\n  | ActionType<typeof skipOnboardingAction, Actions.SkipOnboardingAction>;\n\nexport interface State {\n  usersByLogin: T.Dict<any>;\n  userLogins: string[];\n  currentUser: T.CurrentUser;\n}\n\nexport function receiveCurrentUser(user: T.CurrentUser) {\n  return { type: Actions.ReceiveCurrentUser, user };\n}\n\nexport function skipOnboardingAction() {\n  return { type: Actions.SkipOnboardingAction };\n}\n\nexport function skipOnboarding() {\n  return (dispatch: Dispatch) =>\n    api.skipOnboarding().then(\n      () => dispatch(skipOnboardingAction()),\n      () => dispatch(skipOnboardingAction())\n    );\n}\n\nexport function setHomePageAction(homepage: T.HomePage) {\n  return { type: Actions.SetHomePageAction, homepage };\n}\n\nexport function setCurrentUserSettingAction(setting: T.CurrentUserSetting) {\n  return { type: Actions.SetCurrentUserSetting, setting };\n}\n\nexport function setHomePage(homepage: T.HomePage) {\n  return (dispatch: Dispatch) => {\n    api.setHomePage(homepage).then(\n      () => {\n        dispatch(setHomePageAction(homepage));\n      },\n      () => {}\n    );\n  };\n}\n\nexport function setCurrentUserSetting(setting: T.CurrentUserSetting) {\n  return (dispatch: Dispatch, getState: () => { users: State }) => {\n    const oldSetting = getCurrentUserSetting(getState().users, setting.key);\n    dispatch(setCurrentUserSettingAction(setting));\n    api.setUserSetting(setting).then(\n      () => {},\n      () => {\n        dispatch(setCurrentUserSettingAction({ ...setting, value: oldSetting || '' }));\n      }\n    );\n  };\n}\n\nfunction usersByLogin(state: State['usersByLogin'] = {}, action: Action): State['usersByLogin'] {\n  if (action.type === Actions.ReceiveCurrentUser && isLoggedIn(action.user)) {\n    return { ...state, [action.user.login]: action.user };\n  } else {\n    return state;\n  }\n}\n\nfunction userLogins(state: State['userLogins'] = [], action: Action): State['userLogins'] {\n  if (action.type === Actions.ReceiveCurrentUser && isLoggedIn(action.user)) {\n    return uniq([...state, action.user.login]);\n  } else {\n    return state;\n  }\n}\n\nfunction currentUser(\n  state: State['currentUser'] = { isLoggedIn: false },\n  action: Action\n): State['currentUser'] {\n  if (action.type === Actions.ReceiveCurrentUser) {\n    return action.user;\n  }\n  if (action.type === Actions.SkipOnboardingAction && isLoggedIn(state)) {\n    return { ...state, showOnboardingTutorial: false } as T.LoggedInUser;\n  }\n  if (action.type === Actions.SetHomePageAction && isLoggedIn(state)) {\n    return { ...state, homepage: action.homepage } as T.LoggedInUser;\n  }\n  if (action.type === Actions.SetCurrentUserSetting && isLoggedIn(state)) {\n    let settings: T.CurrentUserSetting[];\n    if (state.settings) {\n      settings = [...state.settings];\n      const index = settings.findIndex(setting => setting.key === action.setting.key);\n      if (index === -1) {\n        settings.push(action.setting);\n      } else {\n        settings[index] = action.setting;\n      }\n    } else {\n      settings = [action.setting];\n    }\n    return { ...state, settings } as T.LoggedInUser;\n  }\n  return state;\n}\n\nexport default combineReducers({ usersByLogin, userLogins, currentUser });\n\nexport function getCurrentUser(state: State) {\n  return state.currentUser;\n}\n\nexport function getCurrentUserSetting(state: State, key: T.CurrentUserSettingNames) {\n  let setting;\n  if (isLoggedIn(state.currentUser) && state.currentUser.settings) {\n    setting = state.currentUser.settings.find(setting => setting.key === key);\n  }\n  return setting && setting.value;\n}\n\nexport function getUserByLogin(state: State, login: string) {\n  return state.usersByLogin[login];\n}\n\nexport function getUsersByLogins(state: State, logins: string[]) {\n  return logins.map(login => getUserByLogin(state, login));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { ActionType } from './utils/actions';\n\nexport const enum Actions {\n  SetAppState = 'SET_APP_STATE',\n  SetAdminPages = 'SET_ADMIN_PAGES',\n  RequireAuthorization = 'REQUIRE_AUTHORIZATION'\n}\n\nexport type Action =\n  | ActionType<typeof setAppState, Actions.SetAppState>\n  | ActionType<typeof setAdminPages, Actions.SetAdminPages>\n  | ActionType<typeof requireAuthorization, Actions.RequireAuthorization>;\n\nexport function setAppState(appState: T.AppState) {\n  return { type: Actions.SetAppState, appState };\n}\n\nexport function setAdminPages(adminPages: T.Extension[]) {\n  return { type: Actions.SetAdminPages, adminPages };\n}\n\nexport function requireAuthorization() {\n  return { type: Actions.RequireAuthorization };\n}\n\nconst defaultValue: T.AppState = {\n  authenticationError: false,\n  authorizationError: false,\n  defaultOrganization: '',\n  edition: undefined,\n  organizationsEnabled: false,\n  productionDatabase: true,\n  qualifiers: [],\n  settings: {},\n  version: ''\n};\n\nexport default function(state: T.AppState = defaultValue, action: Action): T.AppState {\n  if (action.type === Actions.SetAppState) {\n    return { ...state, ...action.appState };\n  }\n  if (action.type === Actions.SetAdminPages) {\n    return { ...state, adminPages: action.adminPages };\n  }\n  if (action.type === Actions.RequireAuthorization) {\n    return { ...state, authorizationError: true };\n  }\n  return state;\n}\n"],"sourceRoot":""}