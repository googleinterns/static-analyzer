{"version":3,"sources":["webpack:///../sonar-docs/src/tooltips/quality-profiles/quality-profile-projects.md","webpack:///../sonar-docs/src/tooltips/quality-profiles/default-quality-profile.md","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionDeprecated.tsx","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionRules.tsx","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionStagnant.tsx","webpack:///./src/main/js/apps/quality-profiles/home/Evolution.tsx","webpack:///./src/main/js/apps/quality-profiles/home/CreateProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/home/RestoreProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/home/PageHeader.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesListHeader.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesListRow.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesList.tsx","webpack:///./src/main/js/apps/quality-profiles/home/HomeContainer.tsx","webpack:///./node_modules/sonar-ui-common/components/intl/DateFormatter.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./src/main/js/api/rules.ts"],"names":["getDeprecatedRulesInheritanceChain","profile","profilesWithDeprecations","rules","count","activeDeprecatedRuleCount","parentKey","parentProfile","find","p","key","parentRules","length","reduce","n","rule","concat","push","from","renderInheritedInfo","map","className","name","render","this","props","profiles","filter","sortedProfiles","ProfileLink","language","organization","languageName","to","qprofile","parseRules","actives","activations","mounted","state","startDate","Date","setFullYear","getFullYear","periodStartDate","componentDidMount","loadLatestRules","componentWillUnmount","data","asc","available_since","f","undefined","ps","s","then","total","setState","latestRules","latestRulesTotal","newRulesUrl","rule_key","langName","EvolutionStagnant","outdated","isBuiltIn","rulesUpdatedAt","date","long","formattedDate","Evolution","importers","loading","preloading","handleNameChange","event","currentTarget","value","handleLanguageChange","option","handleParentChange","parent","handleFormSubmit","preventDefault","FormData","append","onCreate","fetchImporters","header","languages","selectedLanguage","importer","includes","languageProfiles","label","contentLabel","onRequestClose","onClose","size","id","onSubmit","htmlFor","autoFocus","maxLength","onChange","required","type","clearable","options","disabled","onClick","response","ruleFailures","ruleSuccesses","onRestore","renderAlert","Alert","variant","createFormOpen","restoreFormOpen","handleCreateClick","handleCreate","updateProfiles","router","closeCreateForm","handleRestoreClick","closeRestoreForm","actions","create","target","pathname","withRouter","handleChange","replace","currentFilter","currentLanguage","l","offset","depth","activeRulesUrl","activation","deprecatedRulesUrl","statuses","style","paddingLeft","BuiltInQualityProfileBadge","isDefault","DocTooltip","doc","projectCount","overlay","activeRuleCount","ProfileDate","lastUsed","ProfileActions","fromList","renderLanguage","languageKey","renderHeader","renderProfiles","profilesCount","profilesIndex","profilesToShow","languagesToShow","Object","keys","HomeContainer","__assign","assign","t","i","arguments","prototype","hasOwnProperty","call","apply","defineProperty","exports","React","react_intl_1","dates_1","formatterOption","year","month","day","longFormatterOption","default","_a","children","createElement","FormattedDate","parseDate","baseAssignValue","createAggregator","groupBy","result","module","getRulesApp","catch","searchRules","takeFacet","property","facet","facets","values","getRuleDetails","parameters","getRuleTags","r","createRule","status","Promise","reject","deleteRule","updateRule"],"mappings":"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","file":"js/356.1588858339197.chunk.js","sourcesContent":["export default \"Projects assigned to a profile will always be analyzed with it for that language, regardless of which profile is the default. Quality Profile administrators may assign projects to a profile. Project administrators may also choose a non-default profile for each language.\\n\"","export default \"For each language there is a default profile. All projects not explicitly assigned to some other profile will be analyzed with the default.\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getDeprecatedActiveRulesUrl } from '../../../helpers/urls';\nimport ProfileLink from '../components/ProfileLink';\nimport { Profile } from '../types';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\ninterface InheritedRulesInfo {\n  count: number;\n  from: Profile;\n}\n\nexport default class EvolutionDeprecated extends React.PureComponent<Props> {\n  getDeprecatedRulesInheritanceChain = (profile: Profile, profilesWithDeprecations: Profile[]) => {\n    let rules: InheritedRulesInfo[] = [];\n    let count = profile.activeDeprecatedRuleCount;\n\n    if (count === 0) {\n      return rules;\n    }\n\n    if (profile.parentKey) {\n      const parentProfile = profilesWithDeprecations.find(p => p.key === profile.parentKey);\n      if (parentProfile) {\n        const parentRules = this.getDeprecatedRulesInheritanceChain(\n          parentProfile,\n          profilesWithDeprecations\n        );\n        if (parentRules.length) {\n          count -= parentRules.reduce((n, rule) => n + rule.count, 0);\n          rules = rules.concat(parentRules);\n        }\n      }\n    }\n\n    if (count > 0) {\n      rules.push({\n        count,\n        from: profile\n      });\n    }\n\n    return rules;\n  };\n\n  renderInheritedInfo = (profile: Profile, profilesWithDeprecations: Profile[]) => {\n    const rules = this.getDeprecatedRulesInheritanceChain(profile, profilesWithDeprecations);\n    if (rules.length) {\n      return (\n        <>\n          {rules.map(rule => {\n            if (rule.from.key === profile.key) {\n              return null;\n            }\n\n            return (\n              <div className=\"muted\" key={rule.from.key}>\n                {' '}\n                {translateWithParameters(\n                  'coding_rules.filters.inheritance.x_inherited_from_y',\n                  rule.count,\n                  rule.from.name\n                )}\n              </div>\n            );\n          })}\n        </>\n      );\n    }\n    return null;\n  };\n\n  render() {\n    const profilesWithDeprecations = this.props.profiles.filter(\n      profile => profile.activeDeprecatedRuleCount > 0\n    );\n\n    if (profilesWithDeprecations.length === 0) {\n      return null;\n    }\n\n    const sortedProfiles = sortBy(profilesWithDeprecations, p => -p.activeDeprecatedRuleCount);\n\n    return (\n      <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-deprecated\">\n        <div className=\"spacer-bottom\">\n          <strong>{translate('quality_profiles.deprecated_rules')}</strong>\n        </div>\n        <div className=\"spacer-bottom\">\n          {translateWithParameters(\n            'quality_profiles.deprecated_rules_are_still_activated',\n            profilesWithDeprecations.length\n          )}\n        </div>\n        <ul>\n          {sortedProfiles.map(profile => (\n            <li className=\"spacer-top\" key={profile.key}>\n              <div className=\"text-ellipsis\">\n                <ProfileLink\n                  className=\"link-no-underline\"\n                  language={profile.language}\n                  name={profile.name}\n                  organization={this.props.organization}>\n                  {profile.name}\n                </ProfileLink>\n              </div>\n              <div className=\"note\">\n                {profile.languageName}\n                {', '}\n                <Link\n                  className=\"text-muted\"\n                  to={getDeprecatedActiveRulesUrl(\n                    { qprofile: profile.key },\n                    this.props.organization\n                  )}>\n                  {translateWithParameters(\n                    'quality_profile.x_rules',\n                    profile.activeDeprecatedRuleCount\n                  )}\n                </Link>\n                {this.renderInheritedInfo(profile, profilesWithDeprecations)}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { searchRules } from '../../../api/rules';\nimport { getRulesUrl } from '../../../helpers/urls';\n\nconst RULES_LIMIT = 10;\n\nfunction parseRules(rules: T.Rule[], actives?: T.Dict<T.RuleActivation[]>): ExtendedRule[] {\n  return rules.map(rule => {\n    const activations = actives && actives[rule.key];\n    return { ...rule, activations: activations ? activations.length : 0 };\n  });\n}\n\ninterface Props {\n  organization: string | null;\n}\n\ninterface ExtendedRule extends T.Rule {\n  activations: number;\n}\n\ninterface State {\n  latestRules?: ExtendedRule[];\n  latestRulesTotal?: number;\n}\n\nexport default class EvolutionRules extends React.PureComponent<Props, State> {\n  periodStartDate: string;\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    const startDate = new Date();\n    startDate.setFullYear(startDate.getFullYear() - 1);\n    this.periodStartDate = toShortNotSoISOString(startDate);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLatestRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLatestRules() {\n    const data = {\n      asc: false,\n      available_since: this.periodStartDate,\n      f: 'name,langName,actives',\n      organization: this.props.organization || undefined,\n      ps: RULES_LIMIT,\n      s: 'createdAt'\n    };\n\n    searchRules(data).then(\n      ({ actives, rules, total }) => {\n        if (this.mounted) {\n          this.setState({\n            latestRules: sortBy(parseRules(rules, actives), 'langName'),\n            latestRulesTotal: total\n          });\n        }\n      },\n      () => {}\n    );\n  }\n\n  render() {\n    if (!this.state.latestRulesTotal || !this.state.latestRules) {\n      return null;\n    }\n\n    const newRulesUrl = getRulesUrl(\n      { available_since: this.periodStartDate },\n      this.props.organization\n    );\n\n    return (\n      <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-rules\">\n        <div className=\"clearfix\">\n          <strong className=\"pull-left\">{translate('quality_profiles.latest_new_rules')}</strong>\n        </div>\n        <ul>\n          {this.state.latestRules.map(rule => (\n            <li className=\"spacer-top\" key={rule.key}>\n              <div className=\"text-ellipsis\">\n                <Link\n                  className=\"link-no-underline\"\n                  to={getRulesUrl({ rule_key: rule.key }, this.props.organization)}>\n                  {' '}\n                  {rule.name}\n                </Link>\n                <div className=\"note\">\n                  {rule.activations\n                    ? translateWithParameters(\n                        'quality_profiles.latest_new_rules.activated',\n                        rule.langName!,\n                        rule.activations\n                      )\n                    : translateWithParameters(\n                        'quality_profiles.latest_new_rules.not_activated',\n                        rule.langName!\n                      )}\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n        {this.state.latestRulesTotal > RULES_LIMIT && (\n          <div className=\"spacer-top\">\n            <Link className=\"small\" to={newRulesUrl}>\n              {translate('see_all')} {formatMeasure(this.state.latestRulesTotal, 'SHORT_INT', null)}\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport ProfileLink from '../components/ProfileLink';\nimport { Profile } from '../types';\nimport { isStagnant } from '../utils';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\nexport default function EvolutionStagnant(props: Props) {\n  const outdated = props.profiles.filter(profile => !profile.isBuiltIn && isStagnant(profile));\n\n  if (outdated.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-stagnant\">\n      <div className=\"spacer-bottom\">\n        <strong>{translate('quality_profiles.stagnant_profiles')}</strong>\n      </div>\n      <div className=\"spacer-bottom\">\n        {translate('quality_profiles.not_updated_more_than_year')}\n      </div>\n      <ul>\n        {outdated.map(profile => (\n          <li className=\"spacer-top\" key={profile.key}>\n            <div className=\"text-ellipsis\">\n              <ProfileLink\n                className=\"link-no-underline\"\n                language={profile.language}\n                name={profile.name}\n                organization={props.organization}>\n                {profile.name}\n              </ProfileLink>\n            </div>\n            {profile.rulesUpdatedAt && (\n              <DateFormatter date={profile.rulesUpdatedAt} long={true}>\n                {formattedDate => (\n                  <div className=\"note\">\n                    {translateWithParameters(\n                      'quality_profiles.x_updated_on_y',\n                      profile.languageName,\n                      formattedDate\n                    )}\n                  </div>\n                )}\n              </DateFormatter>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Profile } from '../types';\nimport EvolutionDeprecated from './EvolutionDeprecated';\nimport EvolutionRules from './EvolutionRules';\nimport EvolutionStagnant from './EvolutionStagnant';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\nexport default function Evolution({ organization, profiles }: Props) {\n  return (\n    <div className=\"quality-profiles-evolution\">\n      <EvolutionDeprecated organization={organization} profiles={profiles} />\n      <EvolutionStagnant organization={organization} profiles={profiles} />\n      <EvolutionRules organization={organization} />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  changeProfileParent,\n  createQualityProfile,\n  getImporters\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  languages: Array<{ key: string; name: string }>;\n  onClose: () => void;\n  onCreate: Function;\n  organization: string | null;\n  profiles: Profile[];\n}\n\ninterface State {\n  importers: Array<{ key: string; languages: Array<string>; name: string }>;\n  language?: string;\n  loading: boolean;\n  name: string;\n  parent?: string;\n  preloading: boolean;\n}\n\nexport default class CreateProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { importers: [], loading: false, name: '', preloading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchImporters();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchImporters() {\n    getImporters().then(\n      importers => {\n        if (this.mounted) {\n          this.setState({ importers, preloading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ preloading: false });\n        }\n      }\n    );\n  }\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleLanguageChange = (option: { value: string }) => {\n    this.setState({ language: option.value });\n  };\n\n  handleParentChange = (option: { value: string } | null) => {\n    this.setState({ parent: option ? option.value : undefined });\n  };\n\n  handleFormSubmit = async (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState({ loading: true });\n\n    const data = new FormData(event.currentTarget);\n    if (this.props.organization) {\n      data.append('organization', this.props.organization);\n    }\n\n    try {\n      const { profile } = await createQualityProfile(data);\n\n      const parentProfile = this.props.profiles.find(p => p.key === this.state.parent);\n      if (parentProfile) {\n        await changeProfileParent(profile, parentProfile);\n      }\n\n      this.props.onCreate(profile);\n    } finally {\n      if (this.mounted) {\n        this.setState({ loading: false });\n      }\n    }\n  };\n\n  render() {\n    const header = translate('quality_profiles.new_profile');\n    const languages = sortBy(this.props.languages, 'name');\n    let profiles: Array<{ label: string; value: string }> = [];\n\n    const selectedLanguage = this.state.language || languages[0].key;\n    const importers = this.state.importers.filter(importer =>\n      importer.languages.includes(selectedLanguage)\n    );\n\n    if (selectedLanguage) {\n      const languageProfiles = this.props.profiles.filter(p => p.language === selectedLanguage);\n      profiles = [\n        { label: translate('none'), value: '' },\n        ...sortBy(languageProfiles, 'name').map(profile => ({\n          label: profile.isBuiltIn\n            ? `${profile.name} (${translate('quality_profiles.built_in')})`\n            : profile.name,\n          value: profile.key\n        }))\n      ];\n    }\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose} size=\"small\">\n        <form id=\"create-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          {this.state.preloading ? (\n            <div className=\"modal-body\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <div className=\"modal-body\">\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-profile-name\">\n                  {translate('name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-profile-name\"\n                  maxLength={100}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  size={50}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-profile-language\">\n                  {translate('language')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <Select\n                  clearable={false}\n                  id=\"create-profile-language\"\n                  name=\"language\"\n                  onChange={this.handleLanguageChange}\n                  options={languages.map(language => ({\n                    label: language.name,\n                    value: language.key\n                  }))}\n                  value={selectedLanguage}\n                />\n              </div>\n              {selectedLanguage && profiles.length && (\n                <div className=\"modal-field\">\n                  <label htmlFor=\"create-profile-parent\">\n                    {translate('quality_profiles.parent')}\n                  </label>\n                  <Select\n                    clearable={true}\n                    id=\"create-profile-parent\"\n                    name=\"parentKey\"\n                    onChange={this.handleParentChange}\n                    options={profiles}\n                    value={this.state.parent || ''}\n                  />\n                </div>\n              )}\n              {importers.map(importer => (\n                <div\n                  className=\"modal-field spacer-bottom js-importer\"\n                  data-key={importer.key}\n                  key={importer.key}>\n                  <label htmlFor={'create-profile-form-backup-' + importer.key}>\n                    {importer.name}\n                  </label>\n                  <input\n                    id={'create-profile-form-backup-' + importer.key}\n                    name={'backup_' + importer.key}\n                    type=\"file\"\n                  />\n                  <p className=\"note\">\n                    {translate('quality_profiles.optional_configuration_file')}\n                  </p>\n                </div>\n              ))}\n              {/* drop me when we stop supporting ie11 */}\n              <input name=\"hello-ie11\" type=\"hidden\" value=\"\" />\n            </div>\n          )}\n\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            {!this.state.preloading && (\n              <SubmitButton disabled={this.state.loading} id=\"create-profile-submit\">\n                {translate('create')}\n              </SubmitButton>\n            )}\n            <ResetButtonLink id=\"create-profile-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { restoreQualityProfile } from '../../../api/quality-profiles';\n\ninterface Props {\n  onClose: () => void;\n  onRestore: () => void;\n  organization: string | null;\n}\n\ninterface State {\n  loading: boolean;\n  profile?: { name: string };\n  ruleFailures?: number;\n  ruleSuccesses?: number;\n}\n\nexport default class RestoreProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState({ loading: true });\n\n    const data = new FormData(event.currentTarget);\n    if (this.props.organization) {\n      data.append('organization', this.props.organization);\n    }\n\n    restoreQualityProfile(data).then(\n      (response: any) => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            profile: response.profile,\n            ruleFailures: response.ruleFailures,\n            ruleSuccesses: response.ruleSuccesses\n          });\n        }\n        this.props.onRestore();\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  renderAlert(profile: { name: string }, ruleFailures = 0, ruleSuccesses: number): React.ReactNode {\n    return ruleFailures ? (\n      <Alert variant=\"warning\">\n        {translateWithParameters(\n          'quality_profiles.restore_profile.warning',\n          profile.name,\n          ruleSuccesses,\n          ruleFailures\n        )}\n      </Alert>\n    ) : (\n      <Alert variant=\"success\">\n        {translateWithParameters(\n          'quality_profiles.restore_profile.success',\n          profile.name,\n          ruleSuccesses\n        )}\n      </Alert>\n    );\n  }\n\n  render() {\n    const header = translate('quality_profiles.restore_profile');\n\n    const { loading, profile, ruleFailures, ruleSuccesses } = this.state;\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose} size=\"small\">\n        <form id=\"restore-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body\">\n            {profile != null && ruleSuccesses != null ? (\n              this.renderAlert(profile, ruleFailures, ruleSuccesses)\n            ) : (\n              <div className=\"modal-field\">\n                <label htmlFor=\"restore-profile-backup\">\n                  {translate('backup')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input id=\"restore-profile-backup\" name=\"backup\" required={true} type=\"file\" />\n              </div>\n            )}\n          </div>\n\n          {ruleSuccesses == null ? (\n            <div className=\"modal-foot\">\n              {loading && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={loading} id=\"restore-profile-submit\">\n                {translate('restore')}\n              </SubmitButton>\n              <ResetButtonLink id=\"restore-profile-cancel\" onClick={this.props.onClose}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </div>\n          ) : (\n            <div className=\"modal-foot\">\n              <ResetButtonLink id=\"restore-profile-cancel\" onClick={this.props.onClose}>\n                {translate('close')}\n              </ResetButtonLink>\n            </div>\n          )}\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Actions } from '../../../api/quality-profiles';\nimport { Router, withRouter } from '../../../components/hoc/withRouter';\nimport { Profile } from '../types';\nimport { getProfilePath } from '../utils';\nimport CreateProfileForm from './CreateProfileForm';\nimport RestoreProfileForm from './RestoreProfileForm';\n\ninterface Props {\n  actions: Actions;\n  languages: Array<{ key: string; name: string }>;\n  organization: string | null;\n  profiles: Profile[];\n  router: Pick<Router, 'push'>;\n  updateProfiles: () => Promise<void>;\n}\n\ninterface State {\n  createFormOpen: boolean;\n  restoreFormOpen: boolean;\n}\n\nexport class PageHeader extends React.PureComponent<Props, State> {\n  state: State = {\n    createFormOpen: false,\n    restoreFormOpen: false\n  };\n\n  handleCreateClick = () => {\n    this.setState({ createFormOpen: true });\n  };\n\n  handleCreate = (profile: Profile) => {\n    this.props.updateProfiles().then(\n      () => {\n        this.props.router.push(\n          getProfilePath(profile.name, profile.language, this.props.organization)\n        );\n      },\n      () => {}\n    );\n  };\n\n  closeCreateForm = () => {\n    this.setState({ createFormOpen: false });\n  };\n\n  handleRestoreClick = () => {\n    this.setState({ restoreFormOpen: true });\n  };\n\n  closeRestoreForm = () => {\n    this.setState({ restoreFormOpen: false });\n  };\n\n  render() {\n    const { actions, languages, organization, profiles } = this.props;\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('quality_profiles.page')}</h1>\n\n        {actions.create && (\n          <div className=\"page-actions\">\n            <Button\n              disabled={languages.length === 0}\n              id=\"quality-profiles-create\"\n              onClick={this.handleCreateClick}>\n              {translate('create')}\n            </Button>\n            <Button\n              className=\"little-spacer-left\"\n              id=\"quality-profiles-restore\"\n              onClick={this.handleRestoreClick}>\n              {translate('restore')}\n            </Button>\n            {languages.length === 0 && (\n              <Alert className=\"spacer-top\" variant=\"warning\">\n                {translate('quality_profiles.no_languages_available')}\n              </Alert>\n            )}\n          </div>\n        )}\n\n        <div className=\"page-description markdown\">\n          {translate('quality_profiles.intro1')}\n          <br />\n          {translate('quality_profiles.intro2')}\n          <Link\n            className=\"spacer-left\"\n            target=\"_blank\"\n            to={{\n              pathname: '/documentation/instance-administration/quality-profiles/'\n            }}>\n            {translate('learn_more')}\n          </Link>\n        </div>\n\n        {this.state.restoreFormOpen && (\n          <RestoreProfileForm\n            onClose={this.closeRestoreForm}\n            onRestore={this.props.updateProfiles}\n            organization={organization}\n          />\n        )}\n\n        {this.state.createFormOpen && (\n          <CreateProfileForm\n            languages={languages}\n            onClose={this.closeCreateForm}\n            onCreate={this.handleCreate}\n            organization={organization}\n            profiles={profiles}\n          />\n        )}\n      </header>\n    );\n  }\n}\n\nexport default withRouter(PageHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getProfilesForLanguagePath, getProfilesPath } from '../utils';\n\ninterface Props {\n  currentFilter?: string;\n  languages: Array<{ key: string; name: string }>;\n  organization: string | null;\n  router: Pick<Router, 'replace'>;\n}\n\nexport class ProfilesListHeader extends React.PureComponent<Props> {\n  handleChange = (option: { value: string } | null) => {\n    const { organization, router } = this.props;\n\n    router.replace(\n      !option\n        ? getProfilesPath(organization)\n        : getProfilesForLanguagePath(option.value, organization)\n    );\n  };\n\n  render() {\n    const { currentFilter, languages } = this.props;\n    if (languages.length < 2) {\n      return null;\n    }\n\n    const options = languages.map(language => ({\n      label: language.name,\n      value: language.key\n    }));\n\n    const currentLanguage = currentFilter && options.find(l => l.value === currentFilter);\n\n    return (\n      <header className=\"quality-profiles-list-header clearfix\">\n        <span className=\"spacer-right\">{translate('quality_profiles.filter_by')}:</span>\n        <Select\n          className=\"input-medium\"\n          clearable={true}\n          onChange={this.handleChange}\n          options={options}\n          value={currentLanguage}\n        />\n      </header>\n    );\n  }\n}\n\nexport default withRouter(ProfilesListHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../components/docs/DocTooltip';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport ProfileActions from '../components/ProfileActions';\nimport ProfileDate from '../components/ProfileDate';\nimport ProfileLink from '../components/ProfileLink';\nimport { Profile } from '../types';\n\nexport interface ProfilesListRowProps {\n  organization: string | null;\n  profile: Profile;\n  updateProfiles: () => Promise<void>;\n}\n\nexport function ProfilesListRow(props: ProfilesListRowProps) {\n  const { organization, profile } = props;\n\n  const offset = 25 * (profile.depth - 1);\n  const activeRulesUrl = getRulesUrl(\n    {\n      qprofile: profile.key,\n      activation: 'true'\n    },\n    organization\n  );\n  const deprecatedRulesUrl = getRulesUrl(\n    {\n      qprofile: profile.key,\n      activation: 'true',\n      statuses: 'DEPRECATED'\n    },\n    organization\n  );\n\n  return (\n    <tr\n      className=\"quality-profiles-table-row text-middle\"\n      data-key={profile.key}\n      data-name={profile.name}>\n      <td className=\"quality-profiles-table-name text-middle\">\n        <div className=\"display-flex-center\" style={{ paddingLeft: offset }}>\n          <div>\n            <ProfileLink\n              language={profile.language}\n              name={profile.name}\n              organization={organization}>\n              {profile.name}\n            </ProfileLink>\n          </div>\n          {profile.isBuiltIn && <BuiltInQualityProfileBadge className=\"spacer-left\" />}\n        </div>\n      </td>\n\n      <td className=\"quality-profiles-table-projects thin nowrap text-middle text-right\">\n        {profile.isDefault ? (\n          <DocTooltip\n            doc={import(\n              /* webpackMode: \"eager\" */ 'Docs/tooltips/quality-profiles/default-quality-profile.md'\n            )}>\n            <span className=\"badge\">{translate('default')}</span>\n          </DocTooltip>\n        ) : (\n          <span>{profile.projectCount}</span>\n        )}\n      </td>\n\n      <td className=\"quality-profiles-table-rules thin nowrap text-middle text-right\">\n        <div>\n          {profile.activeDeprecatedRuleCount > 0 && (\n            <span className=\"spacer-right\">\n              <Tooltip overlay={translate('quality_profiles.deprecated_rules')}>\n                <Link className=\"badge badge-error\" to={deprecatedRulesUrl}>\n                  {profile.activeDeprecatedRuleCount}\n                </Link>\n              </Tooltip>\n            </span>\n          )}\n\n          <Link to={activeRulesUrl}>{profile.activeRuleCount}</Link>\n        </div>\n      </td>\n\n      <td className=\"quality-profiles-table-date thin nowrap text-middle text-right\">\n        <ProfileDate date={profile.rulesUpdatedAt} />\n      </td>\n\n      <td className=\"quality-profiles-table-date thin nowrap text-middle text-right\">\n        <ProfileDate date={profile.lastUsed} />\n      </td>\n\n      <td className=\"quality-profiles-table-actions thin nowrap text-middle text-right\">\n        <ProfileActions\n          fromList={true}\n          organization={organization}\n          profile={profile}\n          updateProfiles={props.updateProfiles}\n        />\n      </td>\n    </tr>\n  );\n}\n\nexport default React.memo(ProfilesListRow);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Location } from 'history';\nimport { groupBy, pick, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../components/docs/DocTooltip';\nimport { Profile } from '../types';\nimport ProfilesListHeader from './ProfilesListHeader';\nimport ProfilesListRow from './ProfilesListRow';\n\ninterface Props {\n  languages: T.Language[];\n  location: Pick<Location, 'query'>;\n  organization: string | null;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default class ProfilesList extends React.PureComponent<Props> {\n  renderProfiles(profiles: Profile[]) {\n    return profiles.map(profile => (\n      <ProfilesListRow\n        key={profile.key}\n        organization={this.props.organization}\n        profile={profile}\n        updateProfiles={this.props.updateProfiles}\n      />\n    ));\n  }\n\n  renderHeader(languageKey: string, profilesCount: number) {\n    const language = this.props.languages.find(l => l.key === languageKey);\n\n    if (!language) {\n      return null;\n    }\n\n    return (\n      <thead>\n        <tr>\n          <th>\n            {language.name}\n            {', '}\n            {translateWithParameters('quality_profiles.x_profiles', profilesCount)}\n          </th>\n          <th className=\"text-right nowrap\">\n            {translate('quality_profiles.list.projects')}\n            <DocTooltip\n              className=\"table-cell-doc\"\n              doc={import(\n                /* webpackMode: \"eager\" */ 'Docs/tooltips/quality-profiles/quality-profile-projects.md'\n              )}\n            />\n          </th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.rules')}</th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.updated')}</th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.used')}</th>\n          <th>&nbsp;</th>\n        </tr>\n      </thead>\n    );\n  }\n\n  renderLanguage = (languageKey: string, profiles: Profile[] | undefined) => {\n    return (\n      <div className=\"boxed-group boxed-group-inner quality-profiles-table\" key={languageKey}>\n        <table className=\"data zebra zebra-hover\" data-language={languageKey}>\n          {profiles !== undefined && this.renderHeader(languageKey, profiles.length)}\n          <tbody>{profiles !== undefined && this.renderProfiles(profiles)}</tbody>\n        </table>\n      </div>\n    );\n  };\n\n  render() {\n    const { profiles, languages } = this.props;\n    const { language } = this.props.location.query;\n\n    const profilesIndex: T.Dict<Profile[]> = groupBy<Profile>(\n      profiles,\n      profile => profile.language\n    );\n\n    const profilesToShow = language ? pick(profilesIndex, language) : profilesIndex;\n\n    const languagesToShow = sortBy(Object.keys(profilesToShow));\n\n    return (\n      <div>\n        <ProfilesListHeader\n          currentFilter={language}\n          languages={languages}\n          organization={this.props.organization}\n        />\n\n        {Object.keys(profilesToShow).length === 0 && (\n          <Alert className=\"spacer-top\" variant=\"warning\">\n            {translate('no_results')}\n          </Alert>\n        )}\n\n        {languagesToShow.map(languageKey =>\n          this.renderLanguage(languageKey, profilesToShow[languageKey])\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Actions } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport Evolution from './Evolution';\nimport PageHeader from './PageHeader';\nimport ProfilesList from './ProfilesList';\n\ninterface Props {\n  actions: Actions;\n  languages: Array<{ key: string; name: string }>;\n  location: { query: T.Dict<string> };\n  organization: string | null;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default function HomeContainer(props: Props) {\n  return (\n    <div>\n      <PageHeader {...props} />\n\n      <div className=\"page-with-sidebar\">\n        <div className=\"page-main\">\n          <ProfilesList {...props} />\n        </div>\n        <div className=\"page-sidebar\">\n          <Evolution {...props} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_intl_1 = require(\"react-intl\");\nvar dates_1 = require(\"../../helpers/dates\");\nexports.formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\nexports.longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\nfunction DateFormatter(_a) {\n    var children = _a.children, date = _a.date, long = _a.long;\n    return (React.createElement(react_intl_1.FormattedDate, __assign({ value: dates_1.parseDate(date) }, (long ? exports.longFormatterOption : exports.formatterOption)), children));\n}\nexports.default = DateFormatter;\n//# sourceMappingURL=DateFormatter.js.map","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: T.Dict<T.RuleActivation[]>;\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: T.Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: T.RuleActivation[]; rule: T.RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    response => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (response && response.status === 409) {\n        return Promise.reject(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n"],"sourceRoot":""}