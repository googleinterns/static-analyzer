{"version":3,"sources":["webpack:///./node_modules/markdown-escapes/index.js","webpack:///./node_modules/longest-streak/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/one.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/revert.js","webpack:///./node_modules/mdast-util-toc/index.js","webpack:///./node_modules/mdast-util-toc/lib/to-expression.js","webpack:///./node_modules/mdast-util-compact/index.js","webpack:///./node_modules/mdast-util-compact/node_modules/unist-util-visit/index.js","webpack:///./node_modules/mdast-util-compact/node_modules/unist-util-visit-parents/index.js","webpack:///./node_modules/mdast-util-compact/node_modules/unist-util-is/convert.js","webpack:///./node_modules/markdown-table/index.js","webpack:///./node_modules/mdast-util-to-string/index.js","webpack:///./node_modules/mdast-util-to-hast/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/index.js","webpack:///./node_modules/mdast-util-to-hast/node_modules/unist-util-visit/index.js","webpack:///./node_modules/mdast-util-to-hast/node_modules/unist-util-visit-parents/index.js","webpack:///./node_modules/mdast-util-to-hast/node_modules/unist-util-is/convert.js","webpack:///./node_modules/mdast-util-definitions/index.js","webpack:///./node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js","webpack:///./node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js","webpack:///./node_modules/mdast-util-definitions/node_modules/unist-util-is/convert.js","webpack:///./node_modules/mdast-util-to-hast/lib/footer.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack:///./node_modules/mdast-util-toc/lib/index.js","webpack:///./node_modules/mdast-util-toc/lib/search.js","webpack:///./node_modules/mdast-util-toc/node_modules/mdast-util-to-string/index.js","webpack:///./node_modules/mdast-util-toc/node_modules/github-slugger/index.js","webpack:///./node_modules/mdast-util-toc/lib/contents.js","webpack:///./node_modules/mdast-util-to-hast/lib/all.js","webpack:///./node_modules/mdast-util-to-hast/lib/wrap.js"],"names":["module","exports","escapes","defaults","gfm","concat","commonmark","options","settings","default","value","character","expected","index","count","maximum","length","Error","String","indexOf","h","node","parent","type","fn","own","call","handlers","unknown","u","all","hasOwnProperty","data","text","augment","items","props","name","ordered","start","properties","className","wrap","footnoteOrder","identifier","push","position","id","href","label","contents","head","tail","subtype","referenceType","suffix","alt","unshift","RegExp","visit","mergeable","end","line","column","tree","child","siblings","children","prev","splice","visitParents","CONTINUE","SKIP","EXIT","test","visitor","reverse","parents","convert","is","one","subresult","result","toResult","step","Boolean","typeFactory","ok","anyFactory","matchesFactory","key","tests","checks","results","convertAll","apply","this","arguments","table","align","rule","rows","row","cells","size","spacing","before","after","delimiter","alignment","calculateStringLength","stringLength","lengthNoop","cellCount","rowIndex","rowLength","sizes","space","verticalBar","dotindex","pad","split","charAt","toLowerCase","stringify","dotRe","join","lastDotRe","Array","match","exec","toString","title","valueOf","map","dangerous","allowDangerousHTML","footnoteById","definition","definitions","xtend","toUpperCase","left","right","ctx","hName","tagName","hProperties","hChildren","generated","factory","foot","footer","cache","normalise","getterFactory","gather","def","backReference","content","listItems","url","thematicBreak","list","ignore","blockquote","break","code","delete","emphasis","footnoteReference","footnote","heading","html","imageReference","image","inlineCode","linkReference","link","listItem","paragraph","root","strong","toml","yaml","footnoteDefinition","detab","lang","depth","revert","src","normalize","undefined","collapse","container","raw","loose","spread","listItemLoose","listLoose","checked","disabled","pos","out","cell","alignLength","slice","trimLines","toExpression","search","tight","prefix","endIndex","expression","headingIndex","closingIndex","lookingForToc","maxDepth","skip","slugs","reset","slug","isClosingHeading","isOpeningHeading","values","emoji","BananaSlug","Object","whitespace","specials","slugger","string","maintainCase","trim","replace","prototype","originalSlug","occurrences","create","extend","minDepth","Infinity","insert","entry","item","last","copy","nodes"],"mappings":"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","file":"js/8.m.14151ba1.chunk.js","sourcesContent":["'use strict'\n\nmodule.exports = escapes\n\nvar defaults = [\n  '\\\\',\n  '`',\n  '*',\n  '{',\n  '}',\n  '[',\n  ']',\n  '(',\n  ')',\n  '#',\n  '+',\n  '-',\n  '.',\n  '!',\n  '_',\n  '>'\n]\n\nvar gfm = defaults.concat(['~', '|'])\n\nvar commonmark = gfm.concat([\n  '\\n',\n  '\"',\n  '$',\n  '%',\n  '&',\n  \"'\",\n  ',',\n  '/',\n  ':',\n  ';',\n  '<',\n  '=',\n  '?',\n  '@',\n  '^'\n])\n\nescapes.default = defaults\nescapes.gfm = gfm\nescapes.commonmark = commonmark\n\n// Get markdown escapes.\nfunction escapes(options) {\n  var settings = options || {}\n\n  if (settings.commonmark) {\n    return commonmark\n  }\n\n  return settings.gfm ? gfm : defaults\n}\n","'use strict'\n\nmodule.exports = longestStreak\n\n// Get the count of the longest repeating streak of `character` in `value`.\nfunction longestStreak(value, character) {\n  var count = 0\n  var maximum = 0\n  var expected\n  var index\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  value = String(value)\n  index = value.indexOf(character)\n  expected = index\n\n  while (index !== -1) {\n    count++\n\n    if (index === expected) {\n      if (count > maximum) {\n        maximum = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = value.indexOf(character, expected)\n  }\n\n  return maximum\n}\n","'use strict'\n\nmodule.exports = one\n\nvar u = require('unist-builder')\nvar all = require('./all')\n\nvar own = {}.hasOwnProperty\n\n// Transform an unknown node.\nfunction unknown(h, node) {\n  if (text(node)) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n// Visit a node.\nfunction one(h, node, parent) {\n  var type = node && node.type\n  var fn = own.call(h.handlers, type) ? h.handlers[type] : null\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n// Check if the node should be renderered as a text node.\nfunction text(node) {\n  var data = node.data || {}\n\n  if (\n    own.call(data, 'hName') ||\n    own.call(data, 'hProperties') ||\n    own.call(data, 'hChildren')\n  ) {\n    return false\n  }\n\n  return 'value' in node\n}\n","'use strict'\n\nmodule.exports = thematicBreak\n\nfunction thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","'use strict'\n\nmodule.exports = list\n\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction list(h, node) {\n  var props = {}\n  var name = node.ordered ? 'ol' : 'ul'\n  var items\n  var index = -1\n  var length\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  items = all(h, node)\n  length = items.length\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < length) {\n    if (\n      items[index].properties.className &&\n      items[index].properties.className.indexOf('task-list-item') !== -1\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","'use strict'\n\nmodule.exports = footnoteReference\n\nvar u = require('unist-builder')\n\nfunction footnoteReference(h, node) {\n  var footnoteOrder = h.footnoteOrder\n  var identifier = String(node.identifier)\n\n  if (footnoteOrder.indexOf(identifier) === -1) {\n    footnoteOrder.push(identifier)\n  }\n\n  return h(node.position, 'sup', {id: 'fnref-' + identifier}, [\n    h(node, 'a', {href: '#fn-' + identifier, className: ['footnote-ref']}, [\n      u('text', node.label || identifier)\n    ])\n  ])\n}\n","'use strict'\n\nmodule.exports = revert\n\nvar u = require('unist-builder')\nvar all = require('./all')\n\n// Return the content of a reference without definition as Markdown.\nfunction revert(h, node) {\n  var subtype = node.referenceType\n  var suffix = ']'\n  var contents\n  var head\n  var tail\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  contents = all(h, node)\n  head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nmodule.exports = toExpression\n\n// Transform a string into an applicable expression.\nfunction toExpression(value) {\n  return new RegExp('^(' + value + ')$', 'i')\n}\n","'use strict'\n\nvar visit = require('unist-util-visit')\n\nmodule.exports = compact\n\n// Make an mdast tree compact by merging adjacent text nodes.\nfunction compact(tree, commonmark) {\n  visit(tree, visitor)\n\n  return tree\n\n  function visitor(child, index, parent) {\n    var siblings = parent ? parent.children : []\n    var prev = index && siblings[index - 1]\n\n    if (\n      prev &&\n      child.type === prev.type &&\n      mergeable(prev, commonmark) &&\n      mergeable(child, commonmark)\n    ) {\n      if (child.value) {\n        prev.value += child.value\n      }\n\n      if (child.children) {\n        prev.children = prev.children.concat(child.children)\n      }\n\n      siblings.splice(index, 1)\n\n      if (prev.position && child.position) {\n        prev.position.end = child.position.end\n      }\n\n      return index\n    }\n  }\n}\n\nfunction mergeable(node, commonmark) {\n  var start\n  var end\n\n  if (node.type === 'text') {\n    if (!node.position) {\n      return true\n    }\n\n    start = node.position.start\n    end = node.position.end\n\n    // Only merge nodes which occupy the same size as their `value`.\n    return (\n      start.line !== end.line || end.column - start.column === node.value.length\n    )\n  }\n\n  return commonmark && node.type === 'blockquote'\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result = []\n    var subresult\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents))\n\n      if (result[0] === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var result\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents)\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nmodule.exports = markdownTable\n\nvar dotRe = /\\./\nvar lastDotRe = /\\.[^.]*$/\n\n// Characters.\nvar space = ' '\nvar lineFeed = '\\n'\nvar dash = '-'\nvar dot = '.'\nvar colon = ':'\nvar lowercaseC = 'c'\nvar lowercaseL = 'l'\nvar lowercaseR = 'r'\nvar verticalBar = '|'\n\nvar minCellSize = 3\n\n// Create a table from a matrix of strings.\nfunction markdownTable(table, options) {\n  var settings = options || {}\n  var delimiter = settings.delimiter\n  var start = settings.start\n  var end = settings.end\n  var alignment = settings.align\n  var calculateStringLength = settings.stringLength || lengthNoop\n  var cellCount = 0\n  var rowIndex = -1\n  var rowLength = table.length\n  var sizes = []\n  var align\n  var rule\n  var rows\n  var row\n  var cells\n  var index\n  var position\n  var size\n  var value\n  var spacing\n  var before\n  var after\n\n  alignment = alignment ? alignment.concat() : []\n\n  if (delimiter === null || delimiter === undefined) {\n    delimiter = space + verticalBar + space\n  }\n\n  if (start === null || start === undefined) {\n    start = verticalBar + space\n  }\n\n  if (end === null || end === undefined) {\n    end = space + verticalBar\n  }\n\n  while (++rowIndex < rowLength) {\n    row = table[rowIndex]\n\n    index = -1\n\n    if (row.length > cellCount) {\n      cellCount = row.length\n    }\n\n    while (++index < cellCount) {\n      position = row[index] ? dotindex(row[index]) : null\n\n      if (!sizes[index]) {\n        sizes[index] = minCellSize\n      }\n\n      if (position > sizes[index]) {\n        sizes[index] = position\n      }\n    }\n  }\n\n  if (typeof alignment === 'string') {\n    alignment = pad(cellCount, alignment).split('')\n  }\n\n  // Make sure only valid alignments are used.\n  index = -1\n\n  while (++index < cellCount) {\n    align = alignment[index]\n\n    if (typeof align === 'string') {\n      align = align.charAt(0).toLowerCase()\n    }\n\n    if (\n      align !== lowercaseL &&\n      align !== lowercaseR &&\n      align !== lowercaseC &&\n      align !== dot\n    ) {\n      align = ''\n    }\n\n    alignment[index] = align\n  }\n\n  rowIndex = -1\n  rows = []\n\n  while (++rowIndex < rowLength) {\n    row = table[rowIndex]\n\n    index = -1\n    cells = []\n\n    while (++index < cellCount) {\n      value = row[index]\n\n      value = stringify(value)\n\n      if (alignment[index] === dot) {\n        position = dotindex(value)\n\n        size =\n          sizes[index] +\n          (dotRe.test(value) ? 0 : 1) -\n          (calculateStringLength(value) - position)\n\n        cells[index] = value + pad(size - 1)\n      } else {\n        cells[index] = value\n      }\n    }\n\n    rows[rowIndex] = cells\n  }\n\n  sizes = []\n  rowIndex = -1\n\n  while (++rowIndex < rowLength) {\n    cells = rows[rowIndex]\n\n    index = -1\n\n    while (++index < cellCount) {\n      value = cells[index]\n\n      if (!sizes[index]) {\n        sizes[index] = minCellSize\n      }\n\n      size = calculateStringLength(value)\n\n      if (size > sizes[index]) {\n        sizes[index] = size\n      }\n    }\n  }\n\n  rowIndex = -1\n\n  while (++rowIndex < rowLength) {\n    cells = rows[rowIndex]\n\n    index = -1\n\n    if (settings.pad !== false) {\n      while (++index < cellCount) {\n        value = cells[index]\n\n        position = sizes[index] - (calculateStringLength(value) || 0)\n        spacing = pad(position)\n\n        if (alignment[index] === lowercaseR || alignment[index] === dot) {\n          value = spacing + value\n        } else if (alignment[index] === lowercaseC) {\n          position /= 2\n\n          if (position % 1 === 0) {\n            before = position\n            after = position\n          } else {\n            before = position + 0.5\n            after = position - 0.5\n          }\n\n          value = pad(before) + value + pad(after)\n        } else {\n          value += spacing\n        }\n\n        cells[index] = value\n      }\n    }\n\n    rows[rowIndex] = cells.join(delimiter)\n  }\n\n  if (settings.rule !== false) {\n    index = -1\n    rule = []\n\n    while (++index < cellCount) {\n      // When `pad` is false, make the rule the same size as the first row.\n      if (settings.pad === false) {\n        value = table[0][index]\n        spacing = calculateStringLength(stringify(value))\n        spacing = spacing > minCellSize ? spacing : minCellSize\n      } else {\n        spacing = sizes[index]\n      }\n\n      align = alignment[index]\n\n      // When `align` is left, don't add colons.\n      value = align === lowercaseR || align === '' ? dash : colon\n      value += pad(spacing - 2, dash)\n      value += align !== lowercaseL && align !== '' ? colon : dash\n\n      rule[index] = value\n    }\n\n    rows.splice(1, 0, rule.join(delimiter))\n  }\n\n  return start + rows.join(end + lineFeed + start) + end\n}\n\nfunction stringify(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n// Get the length of `value`.\nfunction lengthNoop(value) {\n  return String(value).length\n}\n\n// Get a string consisting of `length` `character`s.\nfunction pad(length, character) {\n  return new Array(length + 1).join(character || space)\n}\n\n// Get the position of the last dot in `value`.\nfunction dotindex(value) {\n  var match = lastDotRe.exec(value)\n\n  return match ? match.index + 1 : value.length\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.  If the node itself does not expose\n// plain-text fields, `toString` will recursivly try its children.\nfunction toString(node) {\n  return (\n    valueOf(node) ||\n    (node.children && node.children.map(toString).join('')) ||\n    ''\n  )\n}\n\n// Get the value of `node`.  Checks, `value`, `alt`, and `title`, in that order.\nfunction valueOf(node) {\n  return (\n    (node && node.value ? node.value : node.alt ? node.alt : node.title) || ''\n  )\n}\n","'use strict'\nmodule.exports = require('./lib')\n","'use strict'\n\nmodule.exports = toHast\n\nvar xtend = require('xtend')\nvar u = require('unist-builder')\nvar visit = require('unist-util-visit')\nvar position = require('unist-util-position')\nvar generated = require('unist-util-generated')\nvar definitions = require('mdast-util-definitions')\nvar one = require('./one')\nvar footer = require('./footer')\nvar handlers = require('./handlers')\n\nvar own = {}.hasOwnProperty\n\n// Factory to transform.\nfunction factory(tree, options) {\n  var settings = options || {}\n  var dangerous = settings.allowDangerousHTML\n  var footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree, settings)\n  h.footnoteById = footnoteById\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = xtend(handlers, settings.handlers || {})\n\n  visit(tree, 'footnoteDefinition', onfootnotedefinition)\n\n  return h\n\n  // Finalise the created `right`, a hast node, from `left`, an mdast node.\n  function augment(left, right) {\n    var data\n    var ctx\n\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left) {\n      data = left.data\n\n      if (right.type === 'element' && data.hName) {\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = xtend(right.properties, data.hProperties)\n      }\n\n      if (right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    ctx = left && left.position ? left : {position: left}\n\n    if (!generated(ctx)) {\n      right.position = {\n        start: position.start(ctx),\n        end: position.end(ctx)\n      }\n    }\n\n    return right\n  }\n\n  // Create an element for `node`.\n  function h(node, tagName, props, children) {\n    if (\n      (children === undefined || children === null) &&\n      typeof props === 'object' &&\n      'length' in props\n    ) {\n      children = props\n      props = {}\n    }\n\n    return augment(node, {\n      type: 'element',\n      tagName: tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n\n  function onfootnotedefinition(definition) {\n    var id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8d48e57/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  }\n}\n\n// Transform `tree`, which is an mdast node, to a hast node.\nfunction toHast(tree, options) {\n  var h = factory(tree, options)\n  var node = one(h, tree)\n  var foot = footer(h)\n\n  if (foot) {\n    node.children = node.children.concat(u('text', '\\n'), foot)\n  }\n\n  return node\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result = []\n    var subresult\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents))\n\n      if (result[0] === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var result\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents)\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nvar visit = require('unist-util-visit')\n\nmodule.exports = getDefinitionFactory\n\nvar own = {}.hasOwnProperty\n\n// Get a definition in `node` by `identifier`.\nfunction getDefinitionFactory(node, options) {\n  return getterFactory(gather(node, options))\n}\n\n// Gather all definitions in `node`\nfunction gather(node, options) {\n  var cache = {}\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', options && options.commonmark ? commonmark : normal)\n\n  return cache\n\n  function commonmark(definition) {\n    var id = normalise(definition.identifier)\n    if (!own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  function normal(definition) {\n    cache[normalise(definition.identifier)] = definition\n  }\n}\n\n// Factory to get a node from the given definition-cache.\nfunction getterFactory(cache) {\n  return getter\n\n  // Get a node from the bound definition-cache.\n  function getter(identifier) {\n    var id = identifier && normalise(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\nfunction normalise(identifier) {\n  return identifier.toUpperCase()\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result = []\n    var subresult\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents))\n\n      if (result[0] === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var result\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents)\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nmodule.exports = generateFootnotes\n\nvar thematicBreak = require('./handlers/thematic-break')\nvar list = require('./handlers/list')\nvar wrap = require('./wrap')\n\nfunction generateFootnotes(h) {\n  var footnoteById = h.footnoteById\n  var footnoteOrder = h.footnoteOrder\n  var length = footnoteOrder.length\n  var index = -1\n  var listItems = []\n  var def\n  var backReference\n  var content\n  var tail\n\n  while (++index < length) {\n    def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    content = def.children.concat()\n    tail = content[content.length - 1]\n    backReference = {\n      type: 'link',\n      url: '#fnref-' + def.identifier,\n      data: {hProperties: {className: ['footnote-backref']}},\n      children: [{type: 'text', value: '↩'}]\n    }\n\n    if (!tail || tail.type !== 'paragraph') {\n      tail = {type: 'paragraph', children: []}\n      content.push(tail)\n    }\n\n    tail.children.push(backReference)\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn-' + def.identifier}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'div',\n    {className: ['footnotes']},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","'use strict'\n\nmodule.exports = {\n  blockquote: require('./blockquote'),\n  break: require('./break'),\n  code: require('./code'),\n  delete: require('./delete'),\n  emphasis: require('./emphasis'),\n  footnoteReference: require('./footnote-reference'),\n  footnote: require('./footnote'),\n  heading: require('./heading'),\n  html: require('./html'),\n  imageReference: require('./image-reference'),\n  image: require('./image'),\n  inlineCode: require('./inline-code'),\n  linkReference: require('./link-reference'),\n  link: require('./link'),\n  listItem: require('./list-item'),\n  list: require('./list'),\n  paragraph: require('./paragraph'),\n  root: require('./root'),\n  strong: require('./strong'),\n  table: require('./table'),\n  text: require('./text'),\n  thematicBreak: require('./thematic-break'),\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","'use strict'\n\nmodule.exports = blockquote\n\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","'use strict'\n\nmodule.exports = hardBreak\n\nvar u = require('unist-builder')\n\nfunction hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","'use strict'\n\nmodule.exports = code\n\nvar detab = require('detab')\nvar u = require('unist-builder')\n\nfunction code(h, node) {\n  var value = node.value ? detab(node.value + '\\n') : ''\n  var lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  var props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  return h(node.position, 'pre', [h(node, 'code', props, [u('text', value)])])\n}\n","'use strict'\n\nmodule.exports = strikethrough\n\nvar all = require('../all')\n\nfunction strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","'use strict'\n\nmodule.exports = emphasis\n\nvar all = require('../all')\n\nfunction emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","'use strict'\n\nmodule.exports = footnote\n\nvar footnoteReference = require('./footnote-reference')\n\nfunction footnote(h, node) {\n  var footnoteById = h.footnoteById\n  var footnoteOrder = h.footnoteOrder\n  var identifier = 1\n\n  while (identifier in footnoteById) {\n    identifier++\n  }\n\n  identifier = String(identifier)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier: identifier,\n    position: node.position\n  })\n}\n","'use strict'\n\nmodule.exports = heading\n\nvar all = require('../all')\n\nfunction heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","'use strict'\n\nmodule.exports = html\n\nvar u = require('unist-builder')\n\n// Return either a `raw` node in dangerous mode, otherwise nothing.\nfunction html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","'use strict'\n\nmodule.exports = imageReference\n\nvar normalize = require('mdurl/encode')\nvar revert = require('../revert')\n\nfunction imageReference(h, node) {\n  var def = h.definition(node.identifier)\n  var props\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","'use strict'\n\nvar normalize = require('mdurl/encode')\n\nmodule.exports = image\n\nfunction image(h, node) {\n  var props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","'use strict'\n\nmodule.exports = inlineCode\n\nvar collapse = require('collapse-white-space')\nvar u = require('unist-builder')\n\nfunction inlineCode(h, node) {\n  return h(node, 'code', [u('text', collapse(node.value))])\n}\n","'use strict'\n\nmodule.exports = linkReference\n\nvar normalize = require('mdurl/encode')\nvar revert = require('../revert')\nvar all = require('../all')\n\nfunction linkReference(h, node) {\n  var def = h.definition(node.identifier)\n  var props\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","'use strict'\n\nvar normalize = require('mdurl/encode')\nvar all = require('../all')\n\nmodule.exports = link\n\nfunction link(h, node) {\n  var props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","'use strict'\n\nmodule.exports = listItem\n\nvar u = require('unist-builder')\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction listItem(h, node, parent) {\n  var children = node.children\n  var head = children[0]\n  var raw = all(h, node)\n  var loose = parent ? listLoose(parent) : listItemLoose(node)\n  var props = {}\n  var result\n  var container\n  var index\n  var length\n  var child\n\n  // Tight lists should not render `paragraph` nodes as `p` elements.\n  if (loose) {\n    result = raw\n  } else {\n    result = []\n    length = raw.length\n    index = -1\n\n    while (++index < length) {\n      child = raw[index]\n\n      if (child.tagName === 'p') {\n        result = result.concat(child.children)\n      } else {\n        result.push(child)\n      }\n    }\n  }\n\n  if (typeof node.checked === 'boolean') {\n    if (loose && (!head || head.type !== 'paragraph')) {\n      result.unshift(h(null, 'p', []))\n    }\n\n    container = loose ? result[0].children : result\n\n    if (container.length !== 0) {\n      container.unshift(u('text', ' '))\n    }\n\n    container.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  if (loose && result.length !== 0) {\n    result = wrap(result, true)\n  }\n\n  return h(node, 'li', props, result)\n}\n\nfunction listLoose(node) {\n  var loose = node.spread\n  var children = node.children\n  var length = children.length\n  var index = -1\n\n  while (!loose && ++index < length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return loose\n}\n\nfunction listItemLoose(node) {\n  var spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","'use strict'\n\nmodule.exports = paragraph\n\nvar all = require('../all')\n\nfunction paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","'use strict'\n\nmodule.exports = root\n\nvar u = require('unist-builder')\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction root(h, node) {\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","'use strict'\n\nmodule.exports = strong\n\nvar all = require('../all')\n\nfunction strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","'use strict'\n\nmodule.exports = table\n\nvar position = require('unist-util-position')\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction table(h, node) {\n  var rows = node.children\n  var index = rows.length\n  var align = node.align\n  var alignLength = align.length\n  var result = []\n  var pos\n  var row\n  var out\n  var name\n  var cell\n\n  while (index--) {\n    row = rows[index].children\n    name = index === 0 ? 'th' : 'td'\n    pos = alignLength\n    out = []\n\n    while (pos--) {\n      cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [\n        h(result[0].position, 'thead', wrap([result[0]], true)),\n        h(\n          {\n            start: position.start(result[1]),\n            end: position.end(result[result.length - 1])\n          },\n          'tbody',\n          wrap(result.slice(1), true)\n        )\n      ],\n      true\n    )\n  )\n}\n","'use strict'\n\nmodule.exports = text\n\nvar u = require('unist-builder')\nvar trimLines = require('trim-lines')\n\nfunction text(h, node) {\n  return h.augment(node, u('text', trimLines(node.value)))\n}\n","'use strict'\n\nmodule.exports = toc\n\nvar search = require('./search')\nvar contents = require('./contents')\nvar toExpression = require('./to-expression')\n\n// Get a TOC representation of `node`.\nfunction toc(node, options) {\n  var settings = options || {}\n  var heading = settings.heading ? toExpression(settings.heading) : null\n  var result = search(node, heading, settings)\n  var map = result.map\n\n  result.map =\n    map.length === 0 ? null : contents(map, settings.tight, settings.prefix)\n\n  // No given heading.\n  if (!heading) {\n    result.index = null\n    result.endIndex = null\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = search\n\nvar toString = require('mdast-util-to-string')\nvar visit = require('unist-util-visit')\nvar convert = require('unist-util-is/convert')\nvar slugs = require('github-slugger')()\nvar toExpression = require('./to-expression')\n\nvar heading = convert('heading')\n\n// Search a node for a location.\nfunction search(root, expression, settings) {\n  var length = root.children.length\n  var depth = null\n  var lookingForToc = expression !== null\n  var maxDepth = settings.maxDepth || 6\n  var skip = settings.skip ? toExpression(settings.skip) : null\n  var parents = convert(settings.parents || root)\n  var map = []\n  var headingIndex\n  var closingIndex\n\n  if (!lookingForToc) {\n    headingIndex = -1\n  }\n\n  slugs.reset()\n\n  // Visit all headings in `root`.  We `slug` all headings (to account for\n  // duplicates), but only create a TOC from top-level headings.\n  visit(root, 'heading', onheading)\n\n  if (headingIndex && !closingIndex) {\n    closingIndex = length + 1\n  }\n\n  if (headingIndex === undefined) {\n    headingIndex = -1\n    closingIndex = -1\n    map = []\n  }\n\n  return {index: headingIndex, endIndex: closingIndex, map: map}\n\n  function onheading(child, index, parent) {\n    var value = toString(child)\n    var id = child.data && child.data.hProperties && child.data.hProperties.id\n    var slug = slugs.slug(id || value)\n\n    if (!parents(parent)) {\n      return\n    }\n\n    if (lookingForToc) {\n      if (isClosingHeading(child, depth)) {\n        closingIndex = index\n        lookingForToc = false\n      }\n\n      if (isOpeningHeading(child, depth, expression)) {\n        headingIndex = index + 1\n        depth = child.depth\n      }\n    }\n\n    if (\n      !lookingForToc &&\n      value &&\n      child.depth <= maxDepth &&\n      (!skip || !skip.test(value))\n    ) {\n      map.push({\n        depth: child.depth,\n        children: child.children,\n        id: slug\n      })\n    }\n  }\n}\n\n// Check if `node` is the main heading.\nfunction isOpeningHeading(node, depth, expression) {\n  return depth === null && heading(node) && expression.test(toString(node))\n}\n\n// Check if `node` is the next heading.\nfunction isClosingHeading(node, depth) {\n  return depth && heading(node) && node.depth <= depth\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var length = values.length\n  var index = -1\n\n  while (++index < length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","var emoji = require('emoji-regex')\r\n\r\nmodule.exports = BananaSlug\r\n\r\nvar own = Object.hasOwnProperty\r\nvar whitespace = /\\s/g\r\nvar specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g\r\n\r\nfunction BananaSlug () {\r\n  var self = this\r\n\r\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\r\n\r\n  self.reset()\r\n}\r\n\r\n/**\r\n * Generate a unique slug.\r\n * @param  {string} value String of text to slugify\r\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\r\n * @return {string}       A unique slug string\r\n */\r\nBananaSlug.prototype.slug = function (value, maintainCase) {\r\n  var self = this\r\n  var slug = slugger(value, maintainCase === true)\r\n  var originalSlug = slug\r\n\r\n  while (own.call(self.occurrences, slug)) {\r\n    self.occurrences[originalSlug]++\r\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\r\n  }\r\n\r\n  self.occurrences[slug] = 0\r\n\r\n  return slug\r\n}\r\n\r\n/**\r\n * Reset - Forget all previous slugs\r\n * @return void\r\n */\r\nBananaSlug.prototype.reset = function () {\r\n  this.occurrences = Object.create(null)\r\n}\r\n\r\nfunction slugger (string, maintainCase) {\r\n  if (typeof string !== 'string') return ''\r\n  if (!maintainCase) string = string.toLowerCase()\r\n\r\n  return string.trim()\r\n    .replace(specials, '')\r\n    .replace(emoji(), '')\r\n    .replace(whitespace, '-')\r\n}\r\n\r\nBananaSlug.slug = slugger\r\n","'use strict'\n\nvar extend = require('extend')\n\nmodule.exports = contents\n\nvar LIST = 'list'\nvar LIST_ITEM = 'listItem'\nvar PARAGRAPH = 'paragraph'\nvar LINK = 'link'\nvar LINK_REFERENCE = 'linkReference'\n\n// Transform a list of heading objects to a markdown list.\nfunction contents(map, tight, prefix) {\n  var minDepth = Infinity\n  var index = -1\n  var length = map.length\n  var table\n\n  // Find minimum depth.\n  while (++index < length) {\n    if (map[index].depth < minDepth) {\n      minDepth = map[index].depth\n    }\n  }\n\n  // Normalize depth.\n  index = -1\n\n  while (++index < length) {\n    map[index].depth -= minDepth - 1\n  }\n\n  // Construct the main list.\n  table = list()\n\n  // Add TOC to list.\n  index = -1\n\n  while (++index < length) {\n    insert(map[index], table, tight, prefix)\n  }\n\n  return table\n}\n\n// Insert an entry into `parent`.\nfunction insert(entry, parent, tight, prefix) {\n  var children = parent.children\n  var length = children.length\n  var last = children[length - 1]\n  var index\n  var item\n\n  if (entry.depth === 1) {\n    item = listItem()\n\n    item.children.push({\n      type: PARAGRAPH,\n      children: [\n        {\n          type: LINK,\n          title: null,\n          url: '#' + (prefix || '') + entry.id,\n          children: all(entry.children)\n        }\n      ]\n    })\n\n    children.push(item)\n  } else if (last && last.type === LIST_ITEM) {\n    insert(entry, last, tight, prefix)\n  } else if (last && last.type === LIST) {\n    entry.depth--\n\n    insert(entry, last, tight, prefix)\n  } else if (parent.type === LIST) {\n    item = listItem()\n\n    insert(entry, item, tight, prefix)\n\n    children.push(item)\n  } else {\n    item = list()\n    entry.depth--\n\n    insert(entry, item, tight, prefix)\n\n    children.push(item)\n  }\n\n  // Properly style list-items with new lines.\n  parent.spread = !tight\n\n  if (parent.type === LIST && parent.spread) {\n    parent.spread = false\n    index = -1\n\n    while (++index < length) {\n      if (children[index].children.length > 1) {\n        parent.spread = true\n        break\n      }\n    }\n  }\n}\n\nfunction all(children) {\n  var result = []\n  var length = children.length\n  var index = -1\n\n  while (++index < length) {\n    result = result.concat(one(children[index]))\n  }\n\n  return result\n}\n\nfunction one(node) {\n  var copy\n\n  if (node.type === LINK || node.type === LINK_REFERENCE) {\n    return all(node.children)\n  }\n\n  copy = extend({}, node)\n\n  delete copy.children\n  delete copy.position\n\n  copy = extend(true, {}, copy)\n\n  if (node.children) {\n    copy.children = all(node.children)\n  }\n\n  return copy\n}\n\n// Create a list.\nfunction list() {\n  return {type: LIST, ordered: false, spread: false, children: []}\n}\n\n// Create a list item.\nfunction listItem() {\n  return {type: LIST_ITEM, spread: false, children: []}\n}\n","'use strict'\n\nmodule.exports = all\n\nvar trim = require('trim')\nvar one = require('./one')\n\nfunction all(h, parent) {\n  var nodes = parent.children || []\n  var length = nodes.length\n  var values = []\n  var index = -1\n  var result\n  var head\n\n  while (++index < length) {\n    result = one(h, nodes[index], parent)\n\n    if (result) {\n      if (index && nodes[index - 1].type === 'break') {\n        if (result.value) {\n          result.value = trim.left(result.value)\n        }\n\n        head = result.children && result.children[0]\n\n        if (head && head.value) {\n          head.value = trim.left(head.value)\n        }\n      }\n\n      values = values.concat(result)\n    }\n  }\n\n  return values\n}\n","'use strict'\n\nmodule.exports = wrap\n\nvar u = require('unist-builder')\n\n// Wrap `nodes` with line feeds between each entry.\n// Optionally adds line feeds at the start and end.\nfunction wrap(nodes, loose) {\n  var result = []\n  var index = -1\n  var length = nodes.length\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < length) {\n    if (index) {\n      result.push(u('text', '\\n'))\n    }\n\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length !== 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n"],"sourceRoot":""}