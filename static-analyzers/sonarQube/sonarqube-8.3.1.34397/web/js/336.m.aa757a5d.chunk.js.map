{"version":3,"sources":["webpack:///../sonar-docs/src/tooltips/organizations/add-organization-member.md","webpack:///./src/main/js/apps/organizations/components/OrganizationGroupCheckbox.tsx","webpack:///./src/main/js/apps/organizationMembers/ManageMemberGroupsForm.tsx","webpack:///./src/main/js/apps/organizationMembers/RemoveMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersListItem.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersList.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersListHeader.tsx","webpack:///./src/main/js/apps/users/components/UsersSelectSearch.tsx","webpack:///./src/main/js/apps/organizationMembers/AddMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/SyncMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersPageHeader.tsx","webpack:///./src/main/js/apps/organizationMembers/OrganizationMembers.tsx","webpack:///./src/main/js/apps/organizationMembers/OrganizationMembersContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/hoc/utils.ts","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/components/hoc/withCurrentUser.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/api/user_groups.ts"],"names":["onCheck","checked","group","this","props","default","name","toggleCheck","className","disabled","onClick","mounted","state","loadUserGroups","setState","loading","login","member","organization","key","then","response","userGroups","groups","isGroupSelected","groupName","status","selected","prevState","handleSubmit","updateMemberGroups","Object","keys","onClose","header","hasChanges","undefined","onSubmit","onCloseClick","onFormSubmit","submitting","organizationGroups","map","id","event","preventDefault","removeMember","contentLabel","onRequestClose","autoFocus","removeMemberForm","manageGroupsForm","handleManageGroupsClick","closeManageGroupsForm","handleRemoveMemberClick","closeRemoveMemberForm","actions","Avatar","hash","avatar","size","admin","groupCount","ActionsDropdown","destructive","currentUser","members","length","sortedMembers","MembersListHeader","handleSearch","total","minLength","onChange","placeholder","alm","membersSync","overlay","href","url","rel","target","super","filterSearchResult","users","filter","user","excludedUsers","includes","slice","filterOptions","options","search","searchUsers","Math","min","searchResult","isLoading","handleInputChange","prevProps","noResult","clearable","labelKey","noResultsText","handleValueChange","onInputChange","optionComponent","searchable","value","selectedUser","valueComponent","UsersSelectSearchValue","valueKey","handleMouseDown","evt","stopPropagation","onSelect","option","handleMouseEnter","onFocus","handleMouseMove","isFocused","onMouseDown","onMouseEnter","onMouseMove","role","title","children","open","openForm","closeForm","selectedMember","query","ps","data","q","addMember","selectedMemberChange","memberLogins","renderModal","handleConfirm","enabled","fetchOrganization","handleMemberSync","handleManualClick","handleAutoClick","refreshMembers","renderModalDescription","to","pathname","renderModalBody","hasOtherMembers","almKey","showWarning","Alert","variant","Boolean","orgMemberSync","cancelButtonText","confirmButtonText","confirmDisable","modalBody","modalHeader","modalHeaderDescription","onConfirm","buttonText","mapDispatchToProps","MembersPageHeader","isAdmin","hasMemberSync","showSyncNotif","isSyncEligible","personal","handleAddMember","DocTooltip","doc","defaultMessage","values","link","display","stopLoading","fetchMembers","paging","fetchGroups","handleSearchMembers","handleLoadMoreMembers","p","pageIndex","handleRemoveMember","updateGroup","updater","add","remove","promises","Promise","all","defer","Suggestions","suggestions","A11ySkipTarget","anchor","count","loadMore","ready","withCurrentUser","ownProps","params","organizationKey","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","getWrappedDisplayName","WrappedComponent","hocName","wrappedDisplayName","displayName","DocMarkdownBlock","content","childProps","overlayProps","isTooltip","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","label","weight","getFrontMatterPosition","lines","firstLine","lastLine","i","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","tag","beginning","ending","newContent","start","indexOf","end","substring","console","error","Error","module","exports","getFrontMatter","position","separateFrontMatter","frontmatter","join","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","replace","RegExp","Wrapper","getAlmMembersUrl","endsWith","isGithub","getUserAlmKey","externalProvider","sanitizeAlmId","hasAdvancedALMIntegration","isBitbucket","startsWith","isVSTS","searchUsersGroups","catch","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","r","deleteGroup"],"mappings":"6FAAA,OAAe,uO,mVC6BA,MAAM,UAAkC,gBAAvD,c,oBACE,KAAAA,QAAWC,IACT,MAAM,MAAEC,GAAUC,KAAKC,MAClBF,EAAMG,SACTF,KAAKC,MAAMJ,QAAQE,EAAMI,KAAML,IAInC,KAAAM,YAAc,KACZJ,KAAKH,SAASG,KAAKC,MAAMH,UAG3B,SACE,MAAM,MAAEC,GAAUC,KAAKC,MACvB,OACE,sBACEI,UAAW,EAAW,sCAAuC,CAAEC,SAAUP,EAAMG,UAC/EK,QAASP,KAAKI,aACd,gBAAC,IAAQ,CAACN,QAASE,KAAKC,MAAMH,QAASD,QAASG,KAAKH,U,IAAaE,EAAMI,O,urBCFjE,MAAM,UAA+B,gBAApD,c,oBACE,KAAAK,SAAU,EACV,KAAAC,MAAe,GAWf,KAAAC,eAAiB,KACfV,KAAKW,SAAS,CAAEC,SAAS,IACzB,YAAc,CACZC,MAAOb,KAAKC,MAAMa,OAAOD,MACzBE,aAAcf,KAAKC,MAAMc,aAAaC,MACrCC,KACDC,IACMlB,KAAKQ,SACPR,KAAKW,SAAS,CAAEC,SAAS,EAAOO,WAAY,IAAMD,EAASE,OAAQ,WAGvE,KACMpB,KAAKQ,SACPR,KAAKW,SAAS,CAAEC,SAAS,OAMjC,KAAAS,gBAAmBC,IACjB,GAAItB,KAAKS,MAAMU,WAAY,CACzB,MAAMpB,EAAQC,KAAKS,MAAMU,WAAWG,IAAc,GAClD,OAAIvB,EAAMwB,OACgB,QAAjBxB,EAAMwB,QAEa,IAAnBxB,EAAMyB,SAGjB,OAAO,GAGT,KAAA3B,QAAU,CAACyB,EAAmBxB,KAC5BE,KAAKW,SAAUc,IACb,MAAM,WAAEN,EAAa,IAAOM,EACtB1B,EAAQoB,EAAWG,IAAc,GACvC,IAAIC,EAAS,GAMb,OALIxB,EAAMyB,WAAa1B,EACrByB,EAAS,UACCxB,EAAMyB,UAAY1B,IAC5ByB,EAAS,OAEJ,CAAEJ,WAAW,EAAD,GAAOA,EAAP,CAAmB,CAACG,GAAD,KAAkBvB,EAAlB,CAAyBwB,iBAInE,KAAAG,aAAe,IACN1B,KAAKC,MACT0B,mBACC3B,KAAKC,MAAMa,OACXc,OAAOC,KAAK,IAAO7B,KAAKS,MAAMU,WAAYpB,GAA0B,QAAjBA,EAAMwB,SACzDK,OAAOC,KAAK,IAAO7B,KAAKS,MAAMU,WAAYpB,GAA0B,WAAjBA,EAAMwB,UAE1DN,KAAKjB,KAAKC,MAAM6B,SA7DrB,oBACE9B,KAAKQ,SAAU,EACfR,KAAKU,iBAGP,uBACEV,KAAKQ,SAAU,EA0DjB,SACE,MAAM,QAAEI,EAAF,WAAWO,EAAa,IAAOnB,KAAKS,MACpCsB,EAAS,oBAAU,sCACnBC,EAAa,IAAKb,EAAYpB,QAA0BkC,IAAjBlC,EAAMwB,QACnD,OACE,gBAAC,IAAW,CAACQ,OAAQA,EAAQD,QAAS9B,KAAKC,MAAM6B,QAASI,SAAUlC,KAAK0B,cACtE,EAAGS,eAAcC,eAAcC,gBAC9B,wBAAMH,SAAUE,GACd,0BAAQ/B,UAAU,cAChB,0BAAK0B,IAEP,uBAAK1B,UAAU,8BACb,yBACE,8BACG,kCACC,sCACAL,KAAKC,MAAMa,OAAOX,QAIvBS,EACC,gBAAC,IAAe,CAACP,UAAU,eAE3B,sBAAIA,UAAU,eACXL,KAAKC,MAAMqC,mBAAmBC,IAAIxC,GACjC,gBAAC,EAAyB,CACxBD,QAASE,KAAKqB,gBAAgBtB,EAAMI,MACpCJ,MAAOA,EACPiB,IAAKjB,EAAMyC,GACX3C,QAASG,KAAKH,aAOxB,0BAAQQ,UAAU,cAChB,gBAAC,IAAe,CAACA,UAAU,eAAeO,QAASyB,IACnD,gBAAC,eAAY,CAAC/B,SAAU+B,IAAeL,GAAa,oBAAU,SAC9D,gBAAC,kBAAe,CAAC1B,SAAU+B,EAAY9B,QAAS4B,GAC7C,oBAAU,e,sBC1HZ,MAAM,UAAyB,gBAA9C,c,oBACE,KAAAT,aAAgBe,IACdA,EAAMC,iBACN1C,KAAKC,MAAM0C,aAAa3C,KAAKC,MAAMa,QACnCd,KAAKC,MAAM6B,WAGb,SACE,MAAMC,EAAS,oBAAU,gBACzB,OACE,gBAAC,IAAK,CAACa,aAAcb,EAAQf,IAAI,sBAAsB6B,eAAgB7C,KAAKC,MAAM6B,SAChF,0BAAQzB,UAAU,cAChB,0BAAK0B,IAEP,wBAAMG,SAAUlC,KAAK0B,cACnB,uBAAKrB,UAAU,cACZ,kCACC,gCACAL,KAAKC,MAAMa,OAAOX,KAClBH,KAAKC,MAAMc,aAAaZ,OAG5B,0BAAQE,UAAU,cAChB,2BACE,gBAAC,eAAY,CAACyC,WAAW,EAAMzC,UAAU,cACtC,oBAAU,WAEb,gBAAC,kBAAe,CAACE,QAASP,KAAKC,MAAM6B,SAAU,oBAAU,gBCTxD,MAAM,UAAwB,gBAA7C,c,oBACE,KAAAtB,SAAU,EACV,KAAAC,MAAe,CAAEsC,kBAAkB,EAAOC,kBAAkB,GAU5D,KAAAC,wBAA0B,KACxBjD,KAAKW,SAAS,CAAEqC,kBAAkB,KAGpC,KAAAE,sBAAwB,KAClBlD,KAAKQ,SACPR,KAAKW,SAAS,CAAEqC,kBAAkB,KAItC,KAAAG,wBAA0B,KACxBnD,KAAKW,SAAS,CAAEoC,kBAAkB,KAGpC,KAAAK,sBAAwB,KAClBpD,KAAKQ,SACPR,KAAKW,SAAS,CAAEoC,kBAAkB,KAxBtC,oBACE/C,KAAKQ,SAAU,EAGjB,uBACER,KAAKQ,SAAU,EAuBjB,SACE,MAAM,OAAEM,EAAF,aAAUC,EAAV,aAAwB4B,GAAiB3C,KAAKC,OAC9C,QAAEoD,EAAU,IAAOtC,EACzB,OACE,0BACE,sBAAIV,UAAU,eACZ,gBAACiD,EAAA,EAAM,CAACC,KAAMzC,EAAO0C,OAAQrD,KAAMW,EAAOX,KAAMsD,KAxCtC,MA0CZ,sBAAIpD,UAAU,sBACZ,8BAASS,EAAOX,MAChB,wBAAME,UAAU,2BAA2BS,EAAOD,QAEnDwC,EAAQK,OACP,sBAAIrD,UAAU,0BACX,kCACC,gCACA,wBAAcS,EAAO6C,YAAc,EAAG,SAI3CN,EAAQK,OACP,gCACE,sBAAIrD,UAAU,iCACZ,gBAAC,IAAe,KACd,gBAACuD,EAAA,oBAAmB,CAACrD,QAASP,KAAKiD,yBAChC,oBAAU,uCAEZN,GACC,gCACE,gBAACiB,EAAA,uBAAsB,MACvB,gBAACA,EAAA,oBAAmB,CAACC,aAAa,EAAMtD,QAASP,KAAKmD,yBACnD,oBAAU,mCAOpBnD,KAAKS,MAAMuC,kBACV,gBAAC,EAAsB,CACrBlC,OAAQd,KAAKC,MAAMa,OACnBgB,QAAS9B,KAAKkD,sBACdnC,aAAcf,KAAKC,MAAMc,aACzBuB,mBAAoBtC,KAAKC,MAAMqC,mBAC/BX,mBAAoB3B,KAAKC,MAAM0B,qBAIlCgB,GAAgB3C,KAAKS,MAAMsC,kBAC1B,gBAAC,EAAgB,CACfjC,OAAQd,KAAKC,MAAMa,OACnBgB,QAAS9B,KAAKoD,sBACdrC,aAAcf,KAAKC,MAAMc,aACzB4B,aAAcA,OCjGf,MAAM,UAAoB,gBACvC,SACE,MAAM,YAAEmB,EAAF,QAAeC,GAAY/D,KAAKC,MAEtC,IAAK8D,EAAQC,OACX,OAAO,uBAAK3D,UAAU,QAAQ,oBAAU,eAG1C,MAAM4D,EAAgB,IACpBF,EACAjD,GAAUA,EAAOX,KACjBW,GAAUA,EAAOD,OAEnB,OACE,uBAAKR,UAAU,iCACb,yBAAOA,UAAU,cACf,6BACG4D,EAAc1B,IAAIzB,GACjB,gBAAC,EAAe,CACdE,IAAKF,EAAOD,MACZC,OAAQA,EACRC,aAAcf,KAAKC,MAAMc,aACzBuB,mBAAoBtC,KAAKC,MAAMqC,mBAC/BK,aACEmB,EAAYjD,QAAUC,EAAOD,MAAQb,KAAKC,MAAM0C,kBAAeV,EAEjEN,mBAAoB3B,KAAKC,MAAM0B,0B,iDC/BhC,SAASuC,GAAkB,aAAEC,EAAF,aAAgBpD,EAAhB,MAA8BqD,IACtE,OACE,uBAAK/D,UAAU,sDACb,gBAAC,IAAS,CACRgE,UAAW,EACXC,SAAUH,EACVI,YAAa,oBAAU,oCAEdtC,IAAVmC,GACC,wBAAM/D,UAAU,gCACd,8BAAS,wBAAc+D,EAAO,Q,IAAkB,oBAAU,gCACzDrD,EAAayD,KAAOzD,EAAayD,IAAIC,aACpC,gBAAC,IAAW,CACVpE,UAAU,cACVqE,QACE,uBAAKrE,UAAU,sCACb,yBACG,oBACC,4CACA,YAAcU,EAAayD,IAAIxD,OAGnC,2BACA,yBACE,qBACE2D,KAAM,YAAiB5D,EAAayD,IAAIxD,IAAKD,EAAayD,IAAII,KAC9DC,IAAI,sBACJC,OAAO,UACN,kCACC,4CACA,oBAAU,YAAc/D,EAAayD,IAAIxD,c,oFCdlD,MAAM,WAA0B,gBAG7C,YAAYf,GACV8E,MAAM9E,GAHR,KAAAO,SAAU,EAuBV,KAAAwE,mBAAqB,EAAGC,WACtBA,EAAMC,OAAOC,IAASnF,KAAKC,MAAMmF,cAAcC,SAASF,EAAKtE,QAAQyE,MAAM,EA5B7D,IA8BhB,KAAAC,cAAiBC,GACRA,EAGT,KAAArB,aAAgBsB,IACdzF,KAAKC,MACFyF,YAAYD,EAAQE,KAAKC,IAAI5F,KAAKC,MAAMmF,cAAcpB,OApC3C,GAoC+D,MAC1E/C,KAAKjB,KAAKgF,oBACV/D,KACC4E,IACM7F,KAAKQ,SACPR,KAAKW,SAAS,CAAEmF,WAAW,EAAOD,kBAGtC,KACM7F,KAAKQ,SACPR,KAAKW,SAAS,CAAEmF,WAAW,EAAOD,aAAc,QAM1D,KAAAE,kBAAqBN,IACL,MAAVA,GAAoC,IAAlBA,EAAOzB,OAC3BhE,KAAKW,SAAS,CAAE8E,YAEhBzF,KAAKW,SAAS,CAAEmF,WAAW,EAAML,WACjCzF,KAAKmE,aAAasB,KAjDpBzF,KAAKmE,aAAe,KAASnE,KAAKmE,aAAc,KAChDnE,KAAKS,MAAQ,CAAEoF,aAAc,GAAIC,WAAW,EAAOL,OAAQ,IAG7D,oBACEzF,KAAKQ,SAAU,EACfR,KAAKmE,aAAanE,KAAKS,MAAMgF,QAG/B,mBAAmBO,GACbhG,KAAKC,MAAMmF,gBAAkBY,EAAUZ,eACzCpF,KAAKmE,aAAanE,KAAKS,MAAMgF,QAIjC,uBACEzF,KAAKQ,SAAU,EAqCjB,SACE,MAAMyF,EACyB,IAA7BjG,KAAKS,MAAMgF,OAAOzB,OACd,kCAAwB,mBAAoB,GAC5C,oBAAU,cAChB,OACE,gBAAC,KAAM,CACLlB,UAAW9C,KAAKC,MAAM6C,UACtBzC,UAAU,aACV6F,WAAW,EACXX,cAAevF,KAAKuF,cACpBO,UAAW9F,KAAKS,MAAMqF,UACtBK,SAAS,OACTC,cAAeH,EACf3B,SAAUtE,KAAKC,MAAMoG,kBACrBC,cAAetG,KAAK+F,kBACpBQ,gBAAiB,GACjBf,QAASxF,KAAKS,MAAMoF,aACpBtB,YAAY,GACZiC,YAAY,EACZC,MAAOzG,KAAKC,MAAMyG,aAClBC,eAAgBC,GAChBC,SAAS,WAeV,MAAM,WAAgC,gBAA7C,c,oBACE,KAAAC,gBAAmBC,IACjBA,EAAIrE,iBACJqE,EAAIC,kBACJhH,KAAKC,MAAMgH,SAASjH,KAAKC,MAAMiH,OAAQH,IAGzC,KAAAI,iBAAoBJ,IAClB/G,KAAKC,MAAMmH,QAAQpH,KAAKC,MAAMiH,OAAQH,IAGxC,KAAAM,gBAAmBN,IACb/G,KAAKC,MAAMqH,WAGftH,KAAKC,MAAMmH,QAAQpH,KAAKC,MAAMiH,OAAQH,IAGxC,SACE,MAAM,OAAEG,GAAWlH,KAAKC,MACxB,OACE,uBACEI,UAAWL,KAAKC,MAAMI,UACtBkH,YAAavH,KAAK8G,gBAClBU,aAAcxH,KAAKmH,iBACnBM,YAAazH,KAAKqH,gBAClBK,KAAK,WACLC,MAAOT,EAAO/G,MACd,gBAACmD,EAAA,EAAM,CAACC,KAAM2D,EAAO1D,OAAQrD,KAAM+G,EAAO/G,KAAMsD,KA7HpC,KA8HZ,0BAAQpD,UAAU,eAAeL,KAAKC,MAAM2H,UAC5C,wBAAMvH,UAAU,2BAA2B6G,EAAOrG,SAWnD,SAAS+F,IAAuB,SAAEgB,EAAF,MAAYnB,IACjD,OACE,uBAAKpG,UAAU,eAAesH,MAAOlB,EAAQA,EAAMtG,KAAO,IACvDsG,GAASA,EAAM5F,OACd,uBAAKR,UAAU,sBACb,gBAACiD,EAAA,EAAM,CAACC,KAAMkD,EAAMjD,OAAQrD,KAAMsG,EAAMtG,KAAMsD,KA/IpC,KAgJV,0BAAQpD,UAAU,eAAeuH,GACjC,wBAAMvH,UAAU,2BAA2BoG,EAAM5F,S,wVC1J5C,MAAM,WAAsB,gBAA3C,c,oBACE,KAAAJ,MAAe,CACboH,MAAM,GAGR,KAAAC,SAAW,KACT9H,KAAKW,SAAS,CAAEkH,MAAM,KAGxB,KAAAE,UAAY,KACV/H,KAAKW,SAAS,CAAEkH,MAAM,EAAOG,oBAAgB/F,KAG/C,KAAAkC,aAAe,CAAC8D,EAA2BC,KACzC,MAAMC,EAAO,CAAEpH,aAAcf,KAAKC,MAAMc,aAAaC,IAAKkH,KAAI1G,SAAU,cACxE,OAAKyG,EAGE,Y,kWAAc,IAAKE,EAAN,CAAYC,EAAGH,KAF1B,YAAcE,IAKzB,KAAAzG,aAAgBe,IACdA,EAAMC,iBACF1C,KAAKS,MAAMuH,iBACbhI,KAAKC,MAAMoI,UAAUrI,KAAKS,MAAMuH,gBAChChI,KAAK+H,cAIT,KAAAO,qBAAwBxH,IACtBd,KAAKW,SAAS,CAAEqH,eAAgBlH,KAGlC,cACE,MAAMiB,EAAS,oBAAU,aACzB,OACE,gBAAC,IAAK,CAACa,aAAcb,EAAQf,IAAI,mBAAmB6B,eAAgB7C,KAAK+H,WACvE,0BAAQ1H,UAAU,cAChB,0BAAK0B,IAEP,wBAAMG,SAAUlC,KAAK0B,cACnB,uBAAKrB,UAAU,cACb,uBAAKA,UAAU,eACb,6BAAQ,oBAAU,6BAClB,gBAAC,GAAiB,CAChByC,WAAW,EACXsC,cAAepF,KAAKC,MAAMsI,aAC1BlC,kBAAmBrG,KAAKsI,qBACxB5C,YAAa1F,KAAKmE,aAClBuC,aAAc1G,KAAKS,MAAMuH,mBAI/B,0BAAQ3H,UAAU,cAChB,2BACE,gBAAC,eAAY,CAACC,UAAWN,KAAKS,MAAMuH,gBACjC,oBAAU,wCAEb,gBAAC,kBAAe,CAACzH,QAASP,KAAK+H,WAAY,oBAAU,eAQjE,SACE,OACE,gCACE,gBAAC,SAAM,CAAC/G,IAAI,oBAAoBT,QAASP,KAAK8H,UAC3C,oBAAU,6BAEZ9H,KAAKS,MAAMoH,MAAQ7H,KAAKwI,gB,8CClE1B,MAAM,WAAuB,gBAClC,YAAYvI,GACV8E,MAAM9E,GAMR,KAAAwI,cAAgB,KACd,MAAM,aAAE1H,GAAiBf,KAAKC,OACxB,YAAEwE,GAAgBzE,KAAKS,MAE7B,OAAO,YAA0B,CAC/BM,aAAcA,EAAaC,IAC3B0H,QAASjE,IACRxD,KAAK,KAEN,GADAjB,KAAKC,MAAM0I,kBAAkB5H,EAAaC,KACtCyD,EACF,OAAOzE,KAAK4I,sBAKlB,KAAAC,kBAAoB,KAClB7I,KAAKW,SAAS,CAAE8D,aAAa,KAG/B,KAAAqE,gBAAkB,KAChB9I,KAAKW,SAAS,CAAE8D,aAAa,KAG/B,KAAAmE,iBAAmB,IACV,YAAY5I,KAAKC,MAAMc,aAAaC,KAAKC,KAAKjB,KAAKC,MAAM8I,gBAGlE,KAAAC,uBAAyB,IAErB,qBAAG3I,UAAU,cACV,oBAAU,+CACX,gBAAC,OAAI,CACHA,UAAU,cACVyE,OAAO,SACPmE,GAAI,CAAEC,SAAU,8CACf,oBAAU,gBAMnB,KAAAC,gBAAkB,KAChB,MAAM,YAAE1E,GAAgBzE,KAAKS,OACvB,gBAAE2I,EAAF,aAAmBrI,GAAiBf,KAAKC,MACzCoJ,EAAStI,EAAayD,KAAO,YAAczD,EAAayD,IAAIxD,KAC5DsI,EAAcF,GAAmBrI,EAAayD,MAAQzD,EAAayD,IAAIC,YAC7E,OACE,uBAAKpE,UAAU,uCACb,gBAAC,KAAS,CACRE,QAASP,KAAK6I,kBACdrH,UAAWiD,EACXkD,MAAO,oBAAU,2CACjB,uBAAKtH,UAAU,eACb,sBAAIA,UAAU,wBACZ,sBAAIA,UAAU,iBACX,oBAAU,gEAEb,0BAAK,oBAAU,kEAIrB,gBAAC,KAAS,CACRE,QAASP,KAAK8I,gBACdtH,SAAUiD,EACVkD,MAAO,kCACL,4CACA,oBAAU0B,GAAU,MAEtB,uBAAKhJ,UAAU,eACb,sBAAIA,UAAU,wBACXgJ,GACC,gCACE,sBAAIhJ,UAAU,iBACX,kCACC,gEACA,oBAAU,eAAgBgJ,KAG9B,sBAAIhJ,UAAU,iBACX,oBACC,sEACAgJ,KAKR,0BAAK,oBAAU,iEAGlBA,GAAUC,GACT,gBAACC,GAAA,MAAK,CAAClJ,UAAU,iBAAiBmJ,QAAQ,WACvC,kCACC,sDACA,oBAAU,eAAgBH,QAlGtCrJ,KAAKS,MAAQ,CACXgE,YAAagF,QAAQxJ,EAAMc,aAAayD,KAAOvE,EAAMc,aAAayD,IAAIC,cA0G1E,SACE,MAAM,aAAE1D,GAAiBf,KAAKC,MACxByJ,EAAgBD,QAAQ1I,EAAayD,KAAOzD,EAAayD,IAAIC,aACnE,OACE,gBAAC,KAAa,CACZkF,iBAAkB,oBAAU,SAC5BC,kBAAmB,oBAAU,QAC7BC,eAAgB7J,KAAKS,MAAMgE,cAAgBiF,EAC3CI,UAAW9J,KAAKmJ,kBAChBY,YAAa,oBAAU,yCACvBC,uBAAwBhK,KAAKgJ,yBAC7BiB,UAAWjK,KAAKyI,cAChBhF,KAAK,UACJ,EAAGlD,aAAc,gBAAC,SAAM,CAACA,QAASA,GAAUP,KAAKC,MAAMiK,cAMhE,MAAMC,GAAqB,CAAExB,kB,OAAA,GAEd,yBAAQ,KAAMwB,GAAd,CAAkC,ICxIlC,SAASC,GAAkBnK,GACxC,MAAM,QAAE8D,EAAF,aAAWhD,EAAX,eAAyBgI,GAAmB9I,EAC5CsI,EAAexE,EAAUA,EAAQxB,IAAIzB,GAAUA,EAAOD,OAAS,GAC/DwJ,EAAUtJ,EAAasC,SAAWtC,EAAasC,QAAQK,MACvD2F,EAAStI,EAAayD,KAAO,YAAczD,EAAayD,IAAIxD,KAC5DsJ,EAAgBvJ,EAAayD,KAAOzD,EAAayD,IAAIC,YACrD8F,EAAgBF,GAAWtJ,EAAayD,MAAQ8F,EAChDE,EACJnB,GAAU,YAASA,IAAWtI,EAAayD,MAAQzD,EAAayD,IAAIiG,SAEtE,OACE,0BAAQpK,UAAU,eAChB,sBAAIA,UAAU,cACX,oBAAU,6BACX,gBAAC,IAAe,CAACA,UAAU,qBAAqBO,QAASX,EAAMW,WAGhEyJ,GACC,uBAAKhK,UAAU,2BACZmK,IAAmBD,GAClB,gBAAC,GAAc,CACbL,WAAY,oBAAU,uCACtBd,gBAAiBrF,GAAWA,EAAQC,OAAS,EAC7CjD,aAAcA,EACdgI,eAAgBA,KAGlBuB,GACA,uBAAKjK,UAAU,kDACb,gBAAC,GAAa,CACZgI,UAAWpI,EAAMyK,gBACjBnC,aAAcA,EACdxH,aAAcA,IAEhB,gBAAC4J,GAAA,EAAU,CACTtK,UAAU,cACVuK,IAAK,8CAQf,uBAAKvK,UAAU,oBACb,gBAAC,mBAAgB,CACfwK,eAAgB,oBAAU,yCAC1BrI,GAAG,wCACHsI,OAAQ,CACNC,KACE,gBAAC,OAAI,CAACjG,OAAO,SAASmE,GAAG,6CACtB,oBAAU,0CAKlBI,GAAUmB,GAAkBD,GAC3B,gBAAChB,GAAA,MAAK,CAAClJ,UAAU,aAAa2K,QAAQ,SAASxB,QAAQ,QACpD,kCACC,oDACA,oBAAU,eAAgBH,IAE5B,wBAAMhJ,UAAU,eACd,gBAAC,GAAc,CACb6J,WAAY,oBAAU,aACtBd,gBAAiBrF,GAAWA,EAAQC,OAAS,EAC7CjD,aAAcA,EACdgI,eAAgBA,Q,6rBC3DjB,MAAM,WAA4B,gBAAjD,c,oBACE,KAAAvI,SAAU,EACV,KAAAC,MAAe,CACbW,OAAQ,GACRR,SAAS,EACTqH,MAAO,IAeT,KAAAgD,YAAc,KACRjL,KAAKQ,SACPR,KAAKW,SAAS,CAAEC,SAAS,KAI7B,KAAAsK,aAAgBjD,IACdjI,KAAKW,SAAS,CAAEC,SAAS,IACzB,YAAc,CACZG,aAAcf,KAAKC,MAAMc,aAAaC,IACtCkH,GAhCY,GAiCZE,EAAGH,IACFhH,KAAK,EAAGkK,SAAQlG,YACbjF,KAAKQ,SACPR,KAAKW,SAAS,CAAEC,SAAS,EAAOmD,QAASkB,EAAOkG,YAEjDnL,KAAKiL,cAGV,KAAAG,YAAc,KACZ,YAAkB,CAAErK,aAAcf,KAAKC,MAAMc,aAAaC,MAAOC,KAC/D,EAAGG,aACGpB,KAAKQ,SACPR,KAAKW,SAAS,CAAES,YAGpB,SAIJ,KAAAiK,oBAAuBpD,IACrBjI,KAAKW,SAAS,CAAEsH,UAChBjI,KAAKkL,aAAajD,QAAShG,IAG7B,KAAAqJ,sBAAwB,KACtB,MAAM,OAAEH,EAAF,MAAUlD,GAAUjI,KAAKS,MAC1B0K,IAILnL,KAAKW,SAAS,CAAEC,SAAS,IACzB,YAAc,CACZG,aAAcf,KAAKC,MAAMc,aAAaC,IACtCuK,EAAGJ,EAAOK,UAAY,EACtBtD,GAnEY,GAoEZE,EAAGH,QAAShG,IACXhB,KAAK,EAAGkK,SAAQlG,YACbjF,KAAKQ,SACPR,KAAKW,SAAS,EAAGoD,UAAU,OAAb,CACZnD,SAAS,EACTmD,QAAS,IAAIA,KAAYkB,GACzBkG,aAGHnL,KAAKiL,eAGV,KAAAP,gBAAkB,EAAG7J,YAEnB,YAAU,CAAEA,QAAOE,aAAcf,KAAKC,MAAMc,aAAaC,MAAOC,KAC9DH,IACMd,KAAKQ,SACPR,KAAKW,SAAS,EAAGoD,UAASoH,aAAZ,CACZpH,QAASA,GAAW,IAAIA,EAASjD,GACjCqK,OAAQA,GAAM,MAASA,EAAT,CAAiB/G,MAAO+G,EAAO/G,MAAQ,QAI3D,SAIJ,KAAAqH,mBAAqB,EAAG5K,YAEtB,YAAa,CAAEA,QAAOE,aAAcf,KAAKC,MAAMc,aAAaC,MAAOC,KACjE,KACMjB,KAAKQ,SACPR,KAAKW,SAAS,EAAGoD,UAASoH,aAAZ,CACZpH,QAASA,GAAWA,EAAQmB,OAAOpE,GAAUA,EAAOD,QAAUA,GAC9DsK,OAAQA,GAAM,MAASA,EAAT,CAAiB/G,MAAO+G,EAAO/G,MAAQ,QAI3D,SAIJ,KAAA2E,eAAiB,IACR,YAAc,CACnBhI,aAAcf,KAAKC,MAAMc,aAAaC,IACtCkH,GAjHY,GAkHZE,EAAGpI,KAAKS,MAAMwH,YAAShG,IACtBhB,KAAK,EAAGkK,SAAQlG,YACbjF,KAAKQ,SACPR,KAAKW,SAAS,CAAEoD,QAASkB,EAAOkG,aAKtC,KAAAO,YAAc,CACZ7K,EACA8K,KAEA3L,KAAKW,SAAS,EAAGoD,cAAH,CACZA,QAASA,GAAWA,EAAQxB,IAAIzB,GAAWA,EAAOD,QAAUA,EAAQ8K,EAAQ7K,GAAUA,OAI1F,KAAAa,mBAAqB,EAAGd,SAA+B+K,EAAeC,KAEpE,MAAMC,EAAW,IACZF,EAAIrJ,IAAIpC,GACT,YAAe,CAAEA,OAAMU,QAAOE,aAAcf,KAAKC,MAAMc,aAAaC,UAEnE6K,EAAOtJ,IAAIpC,GACZ,YAAoB,CAAEA,OAAMU,QAAOE,aAAcf,KAAKC,MAAMc,aAAaC,QAG7E,OAAO+K,QAAQC,IAAIF,GAAU7K,KAAK,KAC5BjB,KAAKQ,SACPR,KAAK0L,YAAY7K,EAAOC,GAAM,MACzBA,EADyB,CAE5B6C,YAAa7C,EAAO6C,YAAc,GAAKiI,EAAI5H,OAAS6H,EAAO7H,aAvInE,oBACEhE,KAAKQ,SAAU,EACfR,KAAKkL,eACDlL,KAAKC,MAAMc,aAAasC,SAAWrD,KAAKC,MAAMc,aAAasC,QAAQK,OACrE1D,KAAKoL,cAIT,uBACEpL,KAAKQ,SAAU,EAoIjB,SACE,MAAM,YAAEsD,EAAF,aAAe/C,GAAiBf,KAAKC,OACrC,OAAEmB,EAAF,QAAUR,EAAV,QAAmBmD,EAAnB,OAA4BoH,GAAWnL,KAAKS,MAC5C6J,EAAgBvJ,EAAayD,KAAOzD,EAAayD,IAAIC,YAC3D,OACE,uBAAKpE,UAAU,qBACb,gBAAC,IAAM,CAAC4L,OAAO,EAAOtE,MAAO,oBAAU,+BACvC,gBAACuE,EAAA,EAAW,CAACC,YAAY,yBACzB,gBAACC,EAAA,EAAc,CAACC,OAAO,iBACvB,gBAACjC,GAAiB,CAChBM,gBAAiB1K,KAAK0K,gBACtB9J,QAASA,EACTmD,QAASA,EACThD,aAAcA,EACdgI,eAAgB/I,KAAK+I,sBAEV9G,IAAZ8B,QAAoC9B,IAAXkJ,GACxB,gCACE,gBAACjH,EAAiB,CAChBC,aAAcnE,KAAKqL,oBACnBtK,aAAcA,EACdqD,MAAO+G,EAAO/G,QAEhB,gBAAC,EAAW,CACVN,YAAaA,EACbC,QAASA,EACThD,aAAcA,EACduB,mBAAoBlB,EACpBuB,aAAc2H,OAAgBrI,EAAYjC,KAAKyL,mBAC/C9J,mBAAoB3B,KAAK2B,qBAET,IAAjBwJ,EAAO/G,OACN,gBAAC,IAAU,CACTkI,MAAOvI,EAAQC,OACfuI,SAAUvM,KAAKsL,sBACfkB,OAAQ5L,EACRwD,MAAO+G,EAAO/G,WCnMf,iBAAAqI,EAAA,GAAgB,kBAJP,CAAChM,EAAciM,KAC9B,CAAE3L,aAAc,+BAAqBN,EAAOiM,EAASC,OAAOC,mBAGtC,CAAyB,M,iCCpCxD,sDA0Be,SAASV,GAAY,YAAEC,IACpC,OACE,gBAAC,IAAmBU,SAAQ,KACzB,EAAGC,iBAAgBC,uBAClB,gBAACC,EAAgB,CACfF,eAAgBA,EAChBC,kBAAmBA,EACnBZ,YAAaA,KAavB,MAAMa,UAAyB,gBAC7B,oBACEhN,KAAKC,MAAM6M,eAAe9M,KAAKC,MAAMkM,aAGvC,mBAAmBnG,GACbA,EAAUmG,cAAgBnM,KAAKC,MAAMkM,cACvCnM,KAAKC,MAAM8M,kBAAkB/M,KAAKC,MAAMkM,aACxCnM,KAAKC,MAAM6M,eAAe9G,EAAUmG,cAIxC,uBACEnM,KAAKC,MAAM8M,kBAAkB/M,KAAKC,MAAMkM,aAG1C,SACE,OAAO,Q,iCC5CJ,SAASc,EACdC,EACAC,GAEA,MAAMC,EAAqBF,EAAiBG,aAAeH,EAAiB/M,MAAQ,YACpF,MAAM,GAAN,OAAUgN,EAAV,YAAqBC,EAArB,KAxBF,mC,iCCAA,iFAwBA,MAAME,EAAmB,4BAAkB,IAAM,2FAA8B,oBAchE,MAAM3C,UAAmB,gBAAxC,c,oBACE,KAAAnK,SAAU,EACV,KAAAC,MAAe,GAEf,oBACET,KAAKQ,SAAU,EACfR,KAAKC,MAAM2K,IAAI3J,KACb,EAAGf,QAASqN,MACNvN,KAAKQ,SACPR,KAAKW,SAAS,CAAE4M,aAGpB,QAIJ,uBACEvN,KAAKQ,SAAU,EAGjB,SACE,OAAOR,KAAKS,MAAM8M,QAChB,gBAAC,IAAW,CACVlN,UAAWL,KAAKC,MAAMI,UACtBqE,QACE,uBAAKrE,UAAU,iBACb,gBAACiN,EAAgB,CACfE,WAAYxN,KAAKC,MAAMwN,aACvBpN,UAAU,cACVkN,QAAS,wBAAcvN,KAAKS,MAAM8M,SAClCG,WAAW,MAIhB1N,KAAKC,MAAM2H,UAGd5H,KAAKC,MAAM2H,UAAY,Q,iCC3E7B,6DA6Be,SAASwE,EAAenM,GACrC,OACE,gBAAC,IAAY4M,SAAQ,KAClB,EAAGc,kBAAiBC,wBACnB,gBAACC,EAAmB,eAClBF,gBAAiBA,EACjBC,mBAAoBA,GAChB3N,KAYP,MAAM4N,UAA4B,gBAAzC,c,oBASE,KAAAC,QAAU,KACR,MAAQzB,OAAQrL,EAAV,MAAe+M,EAAQ,oBAAU,mBAAjC,OAAqDC,GAAWhO,KAAKC,MAC3E,MAAO,CAAEe,MAAK+M,QAAOC,WAVvB,oBACEhO,KAAKC,MAAM0N,gBAAgB3N,KAAK8N,WAGlC,uBACE9N,KAAKC,MAAM2N,mBAAmB5N,KAAK8N,WAQrC,SACE,MAAM,OAAEzB,GAAWrM,KAAKC,MACxB,OAAO,wBAAMuC,GAAE,uBAAkB6J,Q,iCCxBrC,SAAS4B,EAAuBC,GAC9B,IAAIC,EACAC,EACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMlK,OAAQqK,IAAK,CAErC,GAAoB,QADPH,EAAMG,GACVC,OAAkB,CACzB,QAAkBrM,IAAdkM,EAEG,CACLC,EAAWC,EACX,MAHAF,EAAYE,GAOlB,YAAoBpM,IAAbmM,EAAyB,CAAED,YAAWC,iBAAanM,EAG5D,SAASsM,EAAiBL,GACxB,MAAM/F,EAAO,GACb,IAAK,IAAIkG,EAAI,EAAGA,EAAIH,EAAMlK,OAAQqK,IAAK,CACrC,MAAMG,EAASN,EAAMG,GAAGI,MAAM,KAAKlM,IAAImM,GAAKA,EAAEJ,QACxB,IAAlBE,EAAOxK,SACTmE,EAAKqG,EAAO,IAAMA,EAAO,IAG7B,OAAOrG,EAyBT,SAASwG,EAAsBpB,EAASqB,GACtC,MAAMC,EAAS,kBAAWD,EAAX,WACTE,EAAM,mBAAYF,EAAZ,WAEZ,IAAIG,EAAaxB,EACbyB,EAAQD,EAAWE,QAAQJ,GAC3BK,EAAMH,EAAWE,QAAQH,GAC7B,MAAkB,IAAXE,IAAyB,IAATE,GACjBF,EAAQE,EACVH,EAAaA,EAAWI,UAAU,EAAGH,GAASD,EAAWI,UAAUD,EAAMJ,EAAO9K,SAIhFoL,QAAQC,MACN,IAAIC,MAAJ,gFAC2EP,EAAWI,UAClFD,EACAF,EAAQH,EAAU7K,QAHtB,OAOF+K,EACEA,EAAWI,UAAU,EAAGD,GACxBH,EAAWI,UAAUD,EAAMJ,EAAO9K,OAAQgL,GAC1CD,EAAWI,UAAUH,EAAQH,EAAU7K,SAE3CgL,EAAQD,EAAWE,QAAQJ,GAC3BK,EAAMH,EAAWE,QAAQH,GAG3B,OAAOC,EApGTQ,EAAOC,QAAU,CAAEC,eAEnB,SAAwBlC,GACtB,MAAMW,EAAQX,EAAQkB,MAAM,MACtBiB,EAAWzB,EAAuBC,GACxC,OAAOwB,EAAWnB,EAAiBL,EAAM5I,MAAMoK,EAASvB,UAAY,EAAGuB,EAAStB,WAAa,IAL5DuB,oBAQnC,SAA6BpC,GAC3B,MAAMW,EAAQX,EAAQkB,MAAM,MACtBiB,EAAWzB,EAAuBC,GACxC,GAAIwB,EAAU,CACZ,MAAME,EAAcrB,EAAiBL,EAAM5I,MAAMoK,EAASvB,UAAY,EAAGuB,EAAStB,WAC5Eb,EAAUW,EAAM5I,MAAMoK,EAAStB,SAAW,GAAGyB,KAAK,MACxD,MAAO,CAAED,cAAarC,WAEtB,MAAO,CAAEqC,YAAa,GAAIrC,YAhB0BuC,cAoDxD,SAAuBvC,GACrB,MAAMwC,EAAY,oDACZ,aAAEC,EAAF,YAAgBC,GAAgB,EAAQ,IAExCC,EAAuBvB,EADDpB,EAAQ4C,QAAQ,eAAgBF,KACY,UAIxE,OAHwBD,IACpBrB,EAAsBuB,EAAsB,aAC5CvB,EAAsBuB,EAAsB,eAE7CC,QAAQ,IAAIC,OAAJ,WAAeL,EAAf,kBAA0C,MAAO,IACzDI,QAAQ,IAAIC,OAAJ,UAAcL,GAAa,KAAM,O,iCClF9C,wEAwBO,SAAStD,EACdS,GAEA,MAAMmD,UAAgB,YAGpB,SACE,OAAO,gBAACnD,EAAgB,iBAAKlN,KAAKC,SAQtC,OAXS,EAAAoN,YAAc,YAAsBH,EAAkB,mBAWxD,mBAJP,SAAyBzM,GACvB,MAAO,CAAEqD,YAAa,yBAAerD,MAGhC,CAAyB4P,K,iCCvClC,2PAqBO,SAASC,EAAiBtP,EAAa4D,GAI5C,OAHKA,EAAI2L,SAAS,OAChB3L,GAAO,KAEL4L,EAASxP,GACJ4D,EAAIuL,QAAQ,cAAe,oBAAsB,SAEnDvL,EAAM,kBAGR,SAAS6L,EAActL,GAC5B,OAAO,YAAWA,IAASA,EAAKuL,iBAC5BC,EAAcxL,EAAKuL,uBACnBzO,EAGC,SAAS2O,EAA0BzL,GACxC,OACE,YAAWA,KAAU0L,EAAY1L,EAAKuL,mBAAqBF,EAASrL,EAAKuL,mBAItE,SAASG,EAAYxH,GAC1B,QAAOA,GAASA,EAAOyH,WAAW,aAG7B,SAASN,EAASnH,GACvB,MAAkB,WAAXA,EAGF,SAAS0H,EAAO1H,GACrB,MAAkB,cAAXA,EAGF,SAASsH,EAActH,GAC5B,OAAIwH,EAAYxH,GACP,YAEFA,I,iCC3DT,kQAsBO,SAAS2H,EAAkB7I,GAOhC,OAAO,kBAAQ,0BAA2BA,GAAM8I,MAAM,KAGjD,SAASC,EAAgB/I,GAS9B,OAAO,kBAAQ,yBAA0BA,GAAM8I,MAAM,KAGhD,SAASE,EAAehJ,GAM7B,OAAO,eAAK,4BAA6BA,GAAM8I,MAAM,KAGhD,SAASG,EAAoBjJ,GAMlC,OAAO,eAAK,+BAAgCA,GAAM8I,MAAM,KAGnD,SAASI,EAAYlJ,GAK1B,OAAO,mBAAS,0BAA2BA,GAAMlH,KAAKqQ,GAAKA,EAAEvR,MAAO,KAG/D,SAAS2L,EAAYvD,GAC1B,OAAO,eAAK,0BAA2BA,GAAM8I,MAAM,KAG9C,SAASM,EAAYpJ,GAC1B,OAAO,eAAK,0BAA2BA,GAAM8I,MAAM","file":"js/336.m.aa757a5d.chunk.js","sourcesContent":["export default \"Add new members to this organization and manage their permissions. Note that users must have signed up on the service to be able to find and add them.\\n\\n---\\n\\nSee also: [Manage a Team](/organizations/manage-team/)\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\n\ninterface Props {\n  group: T.Group;\n  checked: boolean;\n  onCheck: (name: string, checked: boolean) => void;\n}\n\nexport default class OrganizationGroupCheckbox extends React.PureComponent<Props> {\n  onCheck = (checked: boolean) => {\n    const { group } = this.props;\n    if (!group.default) {\n      this.props.onCheck(group.name, checked);\n    }\n  };\n\n  toggleCheck = () => {\n    this.onCheck(!this.props.checked);\n  };\n\n  render() {\n    const { group } = this.props;\n    return (\n      <li\n        className={classNames('capitalize list-item-checkable-link', { disabled: group.default })}\n        onClick={this.toggleCheck}>\n        <Checkbox checked={this.props.checked} onCheck={this.onCheck} /> {group.name}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy, pickBy, some } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getUserGroups, UserGroup } from '../../api/users';\nimport OrganizationGroupCheckbox from '../organizations/components/OrganizationGroupCheckbox';\n\ninterface Props {\n  onClose: () => void;\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  organizationGroups: T.Group[];\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: string[],\n    remove: string[]\n  ) => Promise<void>;\n}\n\ninterface State {\n  userGroups?: T.Dict<UserGroup & { status?: string }>;\n  loading?: boolean;\n}\n\nexport default class ManageMemberGroupsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadUserGroups();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadUserGroups = () => {\n    this.setState({ loading: true });\n    getUserGroups({\n      login: this.props.member.login,\n      organization: this.props.organization.key\n    }).then(\n      response => {\n        if (this.mounted) {\n          this.setState({ loading: false, userGroups: keyBy(response.groups, 'name') });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  isGroupSelected = (groupName: string) => {\n    if (this.state.userGroups) {\n      const group = this.state.userGroups[groupName] || {};\n      if (group.status) {\n        return group.status === 'add';\n      } else {\n        return group.selected === true;\n      }\n    }\n    return false;\n  };\n\n  onCheck = (groupName: string, checked: boolean) => {\n    this.setState((prevState: State) => {\n      const { userGroups = {} } = prevState;\n      const group = userGroups[groupName] || {};\n      let status = '';\n      if (group.selected && !checked) {\n        status = 'remove';\n      } else if (!group.selected && checked) {\n        status = 'add';\n      }\n      return { userGroups: { ...userGroups, [groupName]: { ...group, status } } };\n    });\n  };\n\n  handleSubmit = () => {\n    return this.props\n      .updateMemberGroups(\n        this.props.member,\n        Object.keys(pickBy(this.state.userGroups, group => group.status === 'add')),\n        Object.keys(pickBy(this.state.userGroups, group => group.status === 'remove'))\n      )\n      .then(this.props.onClose);\n  };\n\n  render() {\n    const { loading, userGroups = {} } = this.state;\n    const header = translate('organization.members.manage_groups');\n    const hasChanges = some(userGroups, group => group.status !== undefined);\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n            <div className=\"modal-body modal-container\">\n              <p>\n                <strong>\n                  {translateWithParameters(\n                    'organization.members.members_groups',\n                    this.props.member.name\n                  )}\n                </strong>\n              </p>\n              {loading ? (\n                <DeferredSpinner className=\"spacer-top\" />\n              ) : (\n                <ul className=\"list-spaced\">\n                  {this.props.organizationGroups.map(group => (\n                    <OrganizationGroupCheckbox\n                      checked={this.isGroupSelected(group.name)}\n                      group={group}\n                      key={group.id}\n                      onCheck={this.onCheck}\n                    />\n                  ))}\n                </ul>\n              )}\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting || !hasChanges}>{translate('save')}</SubmitButton>\n              <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  removeMember: (member: T.OrganizationMember) => void;\n}\n\nexport default class RemoveMemberForm extends React.PureComponent<Props> {\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.removeMember(this.props.member);\n    this.props.onClose();\n  };\n\n  render() {\n    const header = translate('users.remove');\n    return (\n      <Modal contentLabel={header} key=\"remove-member-modal\" onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            {translateWithParameters(\n              'organization.members.remove_x',\n              this.props.member.name,\n              this.props.organization.name\n            )}\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              <SubmitButton autoFocus={true} className=\"button-red\">\n                {translate('remove')}\n              </SubmitButton>\n              <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport Avatar from '../../components/ui/Avatar';\nimport ManageMemberGroupsForm from './ManageMemberGroupsForm';\nimport RemoveMemberForm from './RemoveMemberForm';\n\ninterface Props {\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  organizationGroups: T.Group[];\n  removeMember?: (member: T.OrganizationMember) => void;\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: string[],\n    remove: string[]\n  ) => Promise<void>;\n}\n\ninterface State {\n  removeMemberForm: boolean;\n  manageGroupsForm: boolean;\n}\n\nconst AVATAR_SIZE = 36;\n\nexport default class MembersListItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { removeMemberForm: false, manageGroupsForm: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleManageGroupsClick = () => {\n    this.setState({ manageGroupsForm: true });\n  };\n\n  closeManageGroupsForm = () => {\n    if (this.mounted) {\n      this.setState({ manageGroupsForm: false });\n    }\n  };\n\n  handleRemoveMemberClick = () => {\n    this.setState({ removeMemberForm: true });\n  };\n\n  closeRemoveMemberForm = () => {\n    if (this.mounted) {\n      this.setState({ removeMemberForm: false });\n    }\n  };\n\n  render() {\n    const { member, organization, removeMember } = this.props;\n    const { actions = {} } = organization;\n    return (\n      <tr>\n        <td className=\"thin nowrap\">\n          <Avatar hash={member.avatar} name={member.name} size={AVATAR_SIZE} />\n        </td>\n        <td className=\"nowrap text-middle\">\n          <strong>{member.name}</strong>\n          <span className=\"note little-spacer-left\">{member.login}</span>\n        </td>\n        {actions.admin && (\n          <td className=\"text-right text-middle\">\n            {translateWithParameters(\n              'organization.members.x_groups',\n              formatMeasure(member.groupCount || 0, 'INT')\n            )}\n          </td>\n        )}\n        {actions.admin && (\n          <>\n            <td className=\"nowrap text-middle text-right\">\n              <ActionsDropdown>\n                <ActionsDropdownItem onClick={this.handleManageGroupsClick}>\n                  {translate('organization.members.manage_groups')}\n                </ActionsDropdownItem>\n                {removeMember && (\n                  <>\n                    <ActionsDropdownDivider />\n                    <ActionsDropdownItem destructive={true} onClick={this.handleRemoveMemberClick}>\n                      {translate('organization.members.remove')}\n                    </ActionsDropdownItem>\n                  </>\n                )}\n              </ActionsDropdown>\n            </td>\n\n            {this.state.manageGroupsForm && (\n              <ManageMemberGroupsForm\n                member={this.props.member}\n                onClose={this.closeManageGroupsForm}\n                organization={this.props.organization}\n                organizationGroups={this.props.organizationGroups}\n                updateMemberGroups={this.props.updateMemberGroups}\n              />\n            )}\n\n            {removeMember && this.state.removeMemberForm && (\n              <RemoveMemberForm\n                member={this.props.member}\n                onClose={this.closeRemoveMemberForm}\n                organization={this.props.organization}\n                removeMember={removeMember}\n              />\n            )}\n          </>\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MembersListItem from './MembersListItem';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  members: T.OrganizationMember[];\n  organizationGroups: T.Group[];\n  organization: T.Organization;\n  removeMember?: (member: T.OrganizationMember) => void;\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: Array<string>,\n    remove: Array<string>\n  ) => Promise<void>;\n}\n\nexport default class MembersList extends React.PureComponent<Props> {\n  render() {\n    const { currentUser, members } = this.props;\n\n    if (!members.length) {\n      return <div className=\"note\">{translate('no_results')}</div>;\n    }\n\n    const sortedMembers = sortBy(\n      members,\n      member => member.name,\n      member => member.login\n    );\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <table className=\"data zebra\">\n          <tbody>\n            {sortedMembers.map(member => (\n              <MembersListItem\n                key={member.login}\n                member={member}\n                organization={this.props.organization}\n                organizationGroups={this.props.organizationGroups}\n                removeMember={\n                  currentUser.login !== member.login ? this.props.removeMember : undefined\n                }\n                updateMemberGroups={this.props.updateMemberGroups}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getAlmMembersUrl, sanitizeAlmId } from '../../helpers/almIntegrations';\n\nexport interface Props {\n  handleSearch: (query?: string) => void;\n  organization: T.Organization;\n  total?: number;\n}\n\nexport default function MembersListHeader({ handleSearch, organization, total }: Props) {\n  return (\n    <div className=\"panel panel-vertical bordered-bottom spacer-bottom\">\n      <SearchBox\n        minLength={2}\n        onChange={handleSearch}\n        placeholder={translate('search.search_for_members')}\n      />\n      {total !== undefined && (\n        <span className=\"pull-right little-spacer-top\">\n          <strong>{formatMeasure(total, 'INT')}</strong> {translate('organization.members.members')}\n          {organization.alm && organization.alm.membersSync && (\n            <HelpTooltip\n              className=\"spacer-left\"\n              overlay={\n                <div className=\"abs-width-300 markdown cut-margins\">\n                  <p>\n                    {translate(\n                      'organization.members.auto_sync_total_help',\n                      sanitizeAlmId(organization.alm.key)\n                    )}\n                  </p>\n                  <hr />\n                  <p>\n                    <a\n                      href={getAlmMembersUrl(organization.alm.key, organization.alm.url)}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {translateWithParameters(\n                        'organization.members.see_all_members_on_x',\n                        translate(sanitizeAlmId(organization.alm.key))\n                      )}\n                    </a>\n                  </p>\n                </div>\n              }\n            />\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\n\ninterface Option {\n  login: string;\n  name: string;\n  avatar?: string;\n}\n\ninterface Props {\n  autoFocus?: boolean;\n  excludedUsers: string[];\n  handleValueChange: (option: Option) => void;\n  searchUsers: (query: string, ps: number) => Promise<{ users: Option[] }>;\n  selectedUser?: Option;\n}\n\ninterface State {\n  isLoading: boolean;\n  search: string;\n  searchResult: Option[];\n}\n\nconst LIST_SIZE = 10;\nconst AVATAR_SIZE = 16;\n\nexport default class UsersSelectSearch extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleSearch = debounce(this.handleSearch, 250);\n    this.state = { searchResult: [], isLoading: false, search: '' };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.handleSearch(this.state.search);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.excludedUsers !== prevProps.excludedUsers) {\n      this.handleSearch(this.state.search);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  filterSearchResult = ({ users }: { users: Option[] }) =>\n    users.filter(user => !this.props.excludedUsers.includes(user.login)).slice(0, LIST_SIZE);\n\n  filterOptions = (options: Option[]) => {\n    return options; // We don't filter anything, this is done by the WS\n  };\n\n  handleSearch = (search: string) => {\n    this.props\n      .searchUsers(search, Math.min(this.props.excludedUsers.length + LIST_SIZE, 500))\n      .then(this.filterSearchResult)\n      .then(\n        searchResult => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, searchResult });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, searchResult: [] });\n          }\n        }\n      );\n  };\n\n  handleInputChange = (search: string) => {\n    if (search == null || search.length === 1) {\n      this.setState({ search });\n    } else {\n      this.setState({ isLoading: true, search });\n      this.handleSearch(search);\n    }\n  };\n\n  render() {\n    const noResult =\n      this.state.search.length === 1\n        ? translateWithParameters('select2.tooShort', 2)\n        : translate('no_results');\n    return (\n      <Select\n        autoFocus={this.props.autoFocus}\n        className=\"Select-big\"\n        clearable={false}\n        filterOptions={this.filterOptions}\n        isLoading={this.state.isLoading}\n        labelKey=\"name\"\n        noResultsText={noResult}\n        onChange={this.props.handleValueChange}\n        onInputChange={this.handleInputChange}\n        optionComponent={UsersSelectSearchOption}\n        options={this.state.searchResult}\n        placeholder=\"\"\n        searchable={true}\n        value={this.props.selectedUser}\n        valueComponent={UsersSelectSearchValue}\n        valueKey=\"login\"\n      />\n    );\n  }\n}\n\ninterface OptionProps {\n  children?: React.ReactNode;\n  className?: string;\n  isFocused?: boolean;\n  onFocus: (option: Option, evt: React.MouseEvent<HTMLDivElement>) => void;\n  onSelect: (option: Option, evt: React.MouseEvent<HTMLDivElement>) => void;\n  option: Option;\n}\n\nexport class UsersSelectSearchOption extends React.PureComponent<OptionProps> {\n  handleMouseDown = (evt: React.MouseEvent<HTMLDivElement>) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.props.onSelect(this.props.option, evt);\n  };\n\n  handleMouseEnter = (evt: React.MouseEvent<HTMLDivElement>) => {\n    this.props.onFocus(this.props.option, evt);\n  };\n\n  handleMouseMove = (evt: React.MouseEvent<HTMLDivElement>) => {\n    if (this.props.isFocused) {\n      return;\n    }\n    this.props.onFocus(this.props.option, evt);\n  };\n\n  render() {\n    const { option } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseMove={this.handleMouseMove}\n        role=\"listitem\"\n        title={option.name}>\n        <Avatar hash={option.avatar} name={option.name} size={AVATAR_SIZE} />\n        <strong className=\"spacer-left\">{this.props.children}</strong>\n        <span className=\"note little-spacer-left\">{option.login}</span>\n      </div>\n    );\n  }\n}\n\ninterface ValueProps {\n  value?: Option;\n  children?: React.ReactNode;\n}\n\nexport function UsersSelectSearchValue({ children, value }: ValueProps) {\n  return (\n    <div className=\"Select-value\" title={value ? value.name : ''}>\n      {value && value.login && (\n        <div className=\"Select-value-label\">\n          <Avatar hash={value.avatar} name={value.name} size={AVATAR_SIZE} />\n          <strong className=\"spacer-left\">{children}</strong>\n          <span className=\"note little-spacer-left\">{value.login}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { searchMembers } from '../../api/organizations';\nimport UsersSelectSearch from '../users/components/UsersSelectSearch';\n\ninterface Props {\n  addMember: (member: T.OrganizationMember) => void;\n  organization: T.Organization;\n  memberLogins: string[];\n}\n\ninterface State {\n  open: boolean;\n  selectedMember?: T.OrganizationMember;\n}\n\nexport default class AddMemberForm extends React.PureComponent<Props, State> {\n  state: State = {\n    open: false\n  };\n\n  openForm = () => {\n    this.setState({ open: true });\n  };\n\n  closeForm = () => {\n    this.setState({ open: false, selectedMember: undefined });\n  };\n\n  handleSearch = (query: string | undefined, ps: number) => {\n    const data = { organization: this.props.organization.key, ps, selected: 'deselected' };\n    if (!query) {\n      return searchMembers(data);\n    }\n    return searchMembers({ ...data, q: query });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.state.selectedMember) {\n      this.props.addMember(this.state.selectedMember);\n      this.closeForm();\n    }\n  };\n\n  selectedMemberChange = (member: T.OrganizationMember) => {\n    this.setState({ selectedMember: member });\n  };\n\n  renderModal() {\n    const header = translate('users.add');\n    return (\n      <Modal contentLabel={header} key=\"add-member-modal\" onRequestClose={this.closeForm}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label>{translate('users.search_description')}</label>\n              <UsersSelectSearch\n                autoFocus={true}\n                excludedUsers={this.props.memberLogins}\n                handleValueChange={this.selectedMemberChange}\n                searchUsers={this.handleSearch}\n                selectedUser={this.state.selectedMember}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              <SubmitButton disabled={!this.state.selectedMember}>\n                {translate('organization.members.add_to_members')}\n              </SubmitButton>\n              <ResetButtonLink onClick={this.closeForm}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Button key=\"add-member-button\" onClick={this.openForm}>\n          {translate('organization.members.add')}\n        </Button>\n        {this.state.open && this.renderModal()}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { setOrganizationMemberSync, syncMembers } from '../../api/organizations';\nimport { sanitizeAlmId } from '../../helpers/almIntegrations';\nimport { fetchOrganization } from '../../store/rootActions';\n\ninterface Props {\n  buttonText: string;\n  fetchOrganization: (key: string) => void;\n  hasOtherMembers?: boolean;\n  organization: T.Organization;\n  refreshMembers: () => Promise<void>;\n}\n\ninterface State {\n  membersSync: boolean;\n}\n\nexport class SyncMemberForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      membersSync: Boolean(props.organization.alm && props.organization.alm.membersSync)\n    };\n  }\n\n  handleConfirm = () => {\n    const { organization } = this.props;\n    const { membersSync } = this.state;\n\n    return setOrganizationMemberSync({\n      organization: organization.key,\n      enabled: membersSync\n    }).then(() => {\n      this.props.fetchOrganization(organization.key);\n      if (membersSync) {\n        return this.handleMemberSync();\n      }\n    });\n  };\n\n  handleManualClick = () => {\n    this.setState({ membersSync: false });\n  };\n\n  handleAutoClick = () => {\n    this.setState({ membersSync: true });\n  };\n\n  handleMemberSync = () => {\n    return syncMembers(this.props.organization.key).then(this.props.refreshMembers);\n  };\n\n  renderModalDescription = () => {\n    return (\n      <p className=\"spacer-top\">\n        {translate('organization.members.management.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/organizations/manage-team/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    );\n  };\n\n  renderModalBody = () => {\n    const { membersSync } = this.state;\n    const { hasOtherMembers, organization } = this.props;\n    const almKey = organization.alm && sanitizeAlmId(organization.alm.key);\n    const showWarning = hasOtherMembers && organization.alm && !organization.alm.membersSync;\n    return (\n      <div className=\"display-flex-stretch big-spacer-top\">\n        <RadioCard\n          onClick={this.handleManualClick}\n          selected={!membersSync}\n          title={translate('organization.members.management.manual')}>\n          <div className=\"spacer-left\">\n            <ul className=\"big-spacer-left note\">\n              <li className=\"spacer-bottom\">\n                {translate('organization.members.management.manual.add_members_manually')}\n              </li>\n              <li>{translate('organization.members.management.choose_members_permissions')}</li>\n            </ul>\n          </div>\n        </RadioCard>\n        <RadioCard\n          onClick={this.handleAutoClick}\n          selected={membersSync}\n          title={translateWithParameters(\n            'organization.members.management.automatic',\n            translate(almKey || '')\n          )}>\n          <div className=\"spacer-left\">\n            <ul className=\"big-spacer-left note\">\n              {almKey && (\n                <>\n                  <li className=\"spacer-bottom\">\n                    {translateWithParameters(\n                      'organization.members.management.automatic.synchronized_from_x',\n                      translate('organization', almKey)\n                    )}\n                  </li>\n                  <li className=\"spacer-bottom\">\n                    {translate(\n                      'organization.members.management.automatic.members_changes_reflected',\n                      almKey\n                    )}\n                  </li>\n                </>\n              )}\n              <li>{translate('organization.members.management.choose_members_permissions')}</li>\n            </ul>\n          </div>\n          {almKey && showWarning && (\n            <Alert className=\"big-spacer-top\" variant=\"warning\">\n              {translateWithParameters(\n                'organization.members.management.automatic.warning_x',\n                translate('organization', almKey)\n              )}\n            </Alert>\n          )}\n        </RadioCard>\n      </div>\n    );\n  };\n\n  render() {\n    const { organization } = this.props;\n    const orgMemberSync = Boolean(organization.alm && organization.alm.membersSync);\n    return (\n      <ConfirmButton\n        cancelButtonText={translate('close')}\n        confirmButtonText={translate('save')}\n        confirmDisable={this.state.membersSync === orgMemberSync}\n        modalBody={this.renderModalBody()}\n        modalHeader={translate('organization.members.management.title')}\n        modalHeaderDescription={this.renderModalDescription()}\n        onConfirm={this.handleConfirm}\n        size=\"medium\">\n        {({ onClick }) => <Button onClick={onClick}>{this.props.buttonText}</Button>}\n      </ConfirmButton>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization };\n\nexport default connect(null, mapDispatchToProps)(SyncMemberForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../components/docs/DocTooltip';\nimport { isGithub, sanitizeAlmId } from '../../helpers/almIntegrations';\nimport AddMemberForm from './AddMemberForm';\nimport SyncMemberForm from './SyncMemberForm';\n\nexport interface Props {\n  handleAddMember: (member: T.OrganizationMember) => void;\n  loading: boolean;\n  members?: T.OrganizationMember[];\n  organization: T.Organization;\n  refreshMembers: () => Promise<void>;\n}\n\nexport default function MembersPageHeader(props: Props) {\n  const { members, organization, refreshMembers } = props;\n  const memberLogins = members ? members.map(member => member.login) : [];\n  const isAdmin = organization.actions && organization.actions.admin;\n  const almKey = organization.alm && sanitizeAlmId(organization.alm.key);\n  const hasMemberSync = organization.alm && organization.alm.membersSync;\n  const showSyncNotif = isAdmin && organization.alm && !hasMemberSync;\n  const isSyncEligible =\n    almKey && isGithub(almKey) && organization.alm && !organization.alm.personal;\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">\n        {translate('organization.members.page')}\n        <DeferredSpinner className=\"little-spacer-left\" loading={props.loading} />\n      </h1>\n\n      {isAdmin && (\n        <div className=\"page-actions text-right\">\n          {isSyncEligible && !showSyncNotif && (\n            <SyncMemberForm\n              buttonText={translate('organization.members.config_synchro')}\n              hasOtherMembers={members && members.length > 1}\n              organization={organization}\n              refreshMembers={refreshMembers}\n            />\n          )}\n          {!hasMemberSync && (\n            <div className=\"display-inline-block spacer-left spacer-bottom\">\n              <AddMemberForm\n                addMember={props.handleAddMember}\n                memberLogins={memberLogins}\n                organization={organization}\n              />\n              <DocTooltip\n                className=\"spacer-left\"\n                doc={import(\n                  /* webpackMode: \"eager\" */ 'Docs/tooltips/organizations/add-organization-member.md'\n                )}\n              />\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"page-description\">\n        <FormattedMessage\n          defaultMessage={translate('organization.members.page.description')}\n          id=\"organization.members.page.description\"\n          values={{\n            link: (\n              <Link target=\"_blank\" to=\"/documentation/organizations/manage-team/\">\n                {translate('organization.members.manage_a_team')}\n              </Link>\n            )\n          }}\n        />\n        {almKey && isSyncEligible && showSyncNotif && (\n          <Alert className=\"spacer-top\" display=\"inline\" variant=\"info\">\n            {translateWithParameters(\n              'organization.members.auto_sync_members_from_org_x',\n              translate('organization', almKey)\n            )}\n            <span className=\"spacer-left\">\n              <SyncMemberForm\n                buttonText={translate('configure')}\n                hasOtherMembers={members && members.length > 1}\n                organization={organization}\n                refreshMembers={refreshMembers}\n              />\n            </span>\n          </Alert>\n        )}\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addMember, removeMember, searchMembers } from '../../api/organizations';\nimport { addUserToGroup, removeUserFromGroup, searchUsersGroups } from '../../api/user_groups';\nimport A11ySkipTarget from '../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport MembersList from './MembersList';\nimport MembersListHeader from './MembersListHeader';\nimport MembersPageHeader from './MembersPageHeader';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  organization: T.Organization;\n}\n\ninterface State {\n  groups: T.Group[];\n  loading: boolean;\n  members?: T.OrganizationMember[];\n  paging?: T.Paging;\n  query: string;\n}\n\nconst PAGE_SIZE = 50;\n\nexport default class OrganizationMembers extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    groups: [],\n    loading: true,\n    query: ''\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchMembers();\n    if (this.props.organization.actions && this.props.organization.actions.admin) {\n      this.fetchGroups();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchMembers = (query?: string) => {\n    this.setState({ loading: true });\n    searchMembers({\n      organization: this.props.organization.key,\n      ps: PAGE_SIZE,\n      q: query\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ loading: false, members: users, paging });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchGroups = () => {\n    searchUsersGroups({ organization: this.props.organization.key }).then(\n      ({ groups }) => {\n        if (this.mounted) {\n          this.setState({ groups });\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleSearchMembers = (query: string) => {\n    this.setState({ query });\n    this.fetchMembers(query || undefined); // empty string -> undefined\n  };\n\n  handleLoadMoreMembers = () => {\n    const { paging, query } = this.state;\n    if (!paging) {\n      return;\n    }\n\n    this.setState({ loading: true });\n    searchMembers({\n      organization: this.props.organization.key,\n      p: paging.pageIndex + 1,\n      ps: PAGE_SIZE,\n      q: query || undefined // empty string -> undefined\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState(({ members = [] }) => ({\n          loading: false,\n          members: [...members, ...users],\n          paging\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleAddMember = ({ login }: T.OrganizationMember) => {\n    // TODO optimistic update\n    addMember({ login, organization: this.props.organization.key }).then(\n      member => {\n        if (this.mounted) {\n          this.setState(({ members, paging }) => ({\n            members: members && [...members, member],\n            paging: paging && { ...paging, total: paging.total + 1 }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleRemoveMember = ({ login }: T.OrganizationMember) => {\n    // TODO optimistic update\n    removeMember({ login, organization: this.props.organization.key }).then(\n      () => {\n        if (this.mounted) {\n          this.setState(({ members, paging }) => ({\n            members: members && members.filter(member => member.login !== login),\n            paging: paging && { ...paging, total: paging.total - 1 }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  refreshMembers = () => {\n    return searchMembers({\n      organization: this.props.organization.key,\n      ps: PAGE_SIZE,\n      q: this.state.query || undefined\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ members: users, paging });\n      }\n    });\n  };\n\n  updateGroup = (\n    login: string,\n    updater: (member: T.OrganizationMember) => T.OrganizationMember\n  ) => {\n    this.setState(({ members }) => ({\n      members: members && members.map(member => (member.login === login ? updater(member) : member))\n    }));\n  };\n\n  updateMemberGroups = ({ login }: T.OrganizationMember, add: string[], remove: string[]) => {\n    // TODO optimistic update\n    const promises = [\n      ...add.map(name =>\n        addUserToGroup({ name, login, organization: this.props.organization.key })\n      ),\n      ...remove.map(name =>\n        removeUserFromGroup({ name, login, organization: this.props.organization.key })\n      )\n    ];\n    return Promise.all(promises).then(() => {\n      if (this.mounted) {\n        this.updateGroup(login, member => ({\n          ...member,\n          groupCount: (member.groupCount || 0) + add.length - remove.length\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { currentUser, organization } = this.props;\n    const { groups, loading, members, paging } = this.state;\n    const hasMemberSync = organization.alm && organization.alm.membersSync;\n    return (\n      <div className=\"page page-limited\">\n        <Helmet defer={false} title={translate('organization.members.page')} />\n        <Suggestions suggestions=\"organization_members\" />\n        <A11ySkipTarget anchor=\"members_main\" />\n        <MembersPageHeader\n          handleAddMember={this.handleAddMember}\n          loading={loading}\n          members={members}\n          organization={organization}\n          refreshMembers={this.refreshMembers}\n        />\n        {members !== undefined && paging !== undefined && (\n          <>\n            <MembersListHeader\n              handleSearch={this.handleSearchMembers}\n              organization={organization}\n              total={paging.total}\n            />\n            <MembersList\n              currentUser={currentUser}\n              members={members}\n              organization={organization}\n              organizationGroups={groups}\n              removeMember={hasMemberSync ? undefined : this.handleRemoveMember}\n              updateMemberGroups={this.updateMemberGroups}\n            />\n            {paging.total !== 0 && (\n              <ListFooter\n                count={members.length}\n                loadMore={this.handleLoadMoreMembers}\n                ready={!loading}\n                total={paging.total}\n              />\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { withCurrentUser } from '../../components/hoc/withCurrentUser';\nimport { getOrganizationByKey, Store } from '../../store/rootReducer';\nimport OrganizationMembers from './OrganizationMembers';\n\ninterface OwnProps {\n  params: { organizationKey: string };\n}\n\ninterface StateProps {\n  organization: T.Organization;\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps): StateProps => {\n  return { organization: getOrganizationByKey(state, ownProps.params.organizationKey) };\n};\n\nexport default withCurrentUser(connect(mapStateToProps)(OrganizationMembers));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function getWrappedDisplayName<P>(\n  WrappedComponent: React.ComponentType<P>,\n  hocName: string\n) {\n  const wrappedDisplayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return `${hocName}(${wrappedDisplayName})`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoadComponent(() => import('./DocMarkdownBlock'), 'DocMarkdownBlock');\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    if (start < end) {\n      newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    } else {\n      // When conditional tags are incorrectly used we log an error, strip them out and pass to the next pair of tags\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          `Documentation - incorrect usage of conditional formatting tags here: \"${newContent.substring(\n            end,\n            start + beginning.length\n          )}\"`\n        )\n      );\n      newContent =\n        newContent.substring(0, end) +\n        newContent.substring(end + ending.length, start) +\n        newContent.substring(start + beginning.length);\n    }\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withCurrentUser<P>(\n  WrappedComponent: React.ComponentType<P & { currentUser: T.CurrentUser }>\n) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withCurrentUser');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { currentUser: getCurrentUser(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: T.Group[]; paging: T.Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<T.Paging & { users: T.UserSelected[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<T.Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}