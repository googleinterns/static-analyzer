{"version":3,"sources":["webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/api/billing.ts","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationAdvantages.tsx","webpack:///./src/main/js/apps/create/components/BillingFormShim.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationModal.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationBox.tsx","webpack:///./src/main/js/api/alm-integration.ts","webpack:///./src/main/js/components/hoc/withUserOrganizations.tsx","webpack:///./src/main/js/apps/create/project/style.css?00fe","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?95f7","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/apps/create/components/OrganizationSelect.tsx","webpack:///./src/main/js/apps/create/project/OrganizationInput.tsx","webpack:///./src/main/js/apps/create/project/AlmRepositoryItem.tsx","webpack:///./src/main/js/apps/create/project/SetupProjectBox.tsx","webpack:///./src/main/js/apps/create/project/RemoteRepositories.tsx","webpack:///./src/main/js/apps/create/project/AutoProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageHeader.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarCloud.tsx","webpack:///./src/main/js/apps/create/project/types.ts","webpack:///./src/main/js/apps/create/project/BitbucketProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/BitbucketRepositories.tsx","webpack:///./src/main/js/apps/create/project/BitbucketSearchResults.tsx","webpack:///./src/main/js/apps/create/project/BitbucketImportRepositoryForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketPersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreate.tsx","webpack:///./src/main/js/api/alm-integrations.ts","webpack:///./src/main/js/apps/create/project/CreateProjectModeSelection.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarQube.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/components/hoc/utils.ts","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/components/hoc/withCurrentUser.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/apps/create/organization/utils.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/api/alm-settings.ts"],"names":["ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY","getSubscriptionPlans","then","subscriptionPlans","throwGlobalError","UpgradeOrganizationAdvantages","className","Advantage","children","fill","lightGreen","render","BillingForm","this","props","withCurrentUser","mounted","state","ready","componentDidMount","setState","componentWillUnmount","header","contentLabel","noBackdrop","insideModal","onRequestClose","onClose","shouldCloseOnOverlayClick","size","onCommit","onUpgradeDone","organizationKey","organization","key","onSubmit","processingUpgrade","renderFormFields","renderNextCharge","renderRecap","renderSubmitButton","id","defaultMessage","values","org","name","loading","onClick","upgradeOrganizationModal","fetchSubscriptionPlans","handleUpgradeClick","handleUpgradeOrganizationModalClose","handleOrganizationUpgrade","onOrganizationUpgrade","startingPrice","price","title","titleInfo","undefined","target","to","getAlmAppInfo","catch","getRepositories","data","provisionProject","installationKeys","join","withUserOrganizations","WrappedComponent","fetchMyOrganizations","displayName","mapDispatchToProps","userOrganizations","Wrapper","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","OrganizationSelect","hideIcons","onChange","organizations","optionRenderer","icon","alm","isPaidOrg","subscription","alt","height","src","getOptionRenderer","autoFocus","clearable","labelKey","o","placeholder","required","value","valueKey","valueRenderer","handleLinkClick","event","preventDefault","stopPropagation","Date","now","toString","router","pathname","tab","autoImport","htmlFor","href","handleMouseEnter","highlightUpgradeBox","handleMouseLeave","handleToggle","disabled","repository","linkedProjectKey","toggleRepository","identityProvider","selected","alreadyImported","Boolean","overlay","imported","onMouseEnter","onMouseLeave","role","disableGrayText","checked","onCheck","width","label","private","green","link","submitting","canSubmit","selectedRepositories","length","handleFormSubmit","map","repo","projects","onProjectCreate","project","handleProvisionFail","onProvisionFail","hasSelectedRepositories","privateRepos","publicRepos","open","checkAllRepositories","highlight","repositories","search","successfullyUpgraded","fetchRepositories","filterBySearch","toLowerCase","includes","handleHighlightUpgradeBox","updateSelectedRepositories","Object","keys","forEach","installationKey","newRepository","find","r","handleSearch","onCheckAllRepositories","nextState","validRepositories","filter","filterByPlan","filterByImportable","componentDidUpdate","prevProps","almApplication","hasPrivateRepositories","some","showSearchBox","showCheckAll","showUpgradebox","actions","admin","filteredRepositories","minLength","Alert","variant","UpgradeOrganizationBox","handleInstallAppClick","handleOrganizationSelect","selectedOrganization","getInitialSelectedOrganization","boundOrganizations","backgroundColor","iconPath","small","url","installationUrl","CreateProjectPageHeader","additionalActions","showBreadcrumb","checkFreeKey","component","alreadyExist","projectKey","projectKeyError","touched","validating","canChoosePrivate","getOrganization","projectName","trim","visibility","selectedVisibility","prevState","handleProjectKeyChange","currentTarget","validateKey","projectNameChanged","projectNameError","validateName","handleProjectNameChange","handleVisibilityChange","test","branchesEnabled","projectKeyIsInvalid","projectKeyIsValid","projectNameIsInvalid","projectNameIsValid","description","error","help","isInvalid","isValid","maxLength","type","handleProjectCreate","projectKeys","skipOnboarding","fetchAlmApplication","application","onTabChange","updateUrl","replace","location","query","currentUser","showManualTab","titleTemplate","tabs","node","provision","whenLoggedIn","CreateProjectModes","BitbucketProjectAccordion","disableRepositories","selectedRepository","showingAllRepositories","repositoryCount","mode","BitbucketServer","resetPat","sqProjectKey","onSelectRepository","String","BitbucketRepositories","projectRepositories","openProjectKeys","setOpenProjectKeys","allAreExpanded","p","isOpen","allShown","handleClick","BitbucketSearchResults","searching","searchResults","filteredProjects","BitbucketImportRepositoryForm","onSearch","BitbucketPersonalAccessTokenForm","validationFailed","setTouched","e","FormData","get","onPersonalAccessTokenCreate","display","rel","perm","BitbucketProjectCreateRenderer","bitbucketSetting","canAdmin","importing","showPersonalAccessTokenForm","submittingToken","tokenValidationFailed","onImportRepository","category","fetchInitialData","checkPersonalAccessToken","patIsValid","fetchBitbucketProjects","fetchBitbucketRepositories","almSetting","response","status","Promise","resolve","all","isLastPage","results","reduce","acc","handlePersonalAccessTokenCreate","token","pat","handleImportRepository","repositorySlug","slug","repositoryName","handleSelectRepository","bitbucketSettings","loadingBindings","CreateProjectModeSelection","bbsBindingCount","onSelectMode","style","lineHeight","fetchAlmBindings","almSettings","s","handleModeSelect","showManualForm","Manual","showBBSForm","withAppState","CreateProjectPage","A11ySkipTarget","anchor","getWrappedDisplayName","hocName","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","librariesExposed","installScript","scriptTag","document","createElement","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","exposeLibraries","start","reject","getAlmMembersUrl","endsWith","isGithub","getUserAlmKey","user","externalProvider","sanitizeAlmId","hasAdvancedALMIntegration","isBitbucket","almKey","startsWith","isVSTS","appState","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","AlmKeys","Step","ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP","ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP","BIND_ORGANIZATION_KEY","BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP","formatPrice","noSign","priceFormatted","urlQuery","almInstallId","jwt","iss","getAlmDefinitions","getAlmSettings","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createGitlabConfiguration","updateGitlabConfiguration","deleteConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding"],"mappings":"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","file":"js/326.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getSubscriptionPlans(): Promise<T.SubscriptionPlan[]> {\n  return getJSON('/api/billing/show_subscription_plans').then(\n    ({ subscriptionPlans }) => subscriptionPlans,\n    throwGlobalError\n  );\n}\n\nexport function giveDowngradeFeedback(data: {\n  organization: string;\n  feedback: string;\n  additionalFeedback?: string;\n}): Promise<void> {\n  return post('/api/billing/send_feedback', data);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\n\nconst TRIAL_DURATION_DAYS = 14;\n\nexport default function UpgradeOrganizationAdvantages() {\n  return (\n    <ul className=\"note\">\n      <Advantage>{translate('billing.upgrade_box.unlimited_private_projects')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.strict_control_private_data')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.cancel_anytime')}</Advantage>\n      <Advantage>\n        <strong>\n          {translateWithParameters('billing.upgrade_box.free_trial_x', TRIAL_DURATION_DAYS)}\n        </strong>\n      </Advantage>\n    </ul>\n  );\n}\n\nexport function Advantage({ children }: { children: React.ReactNode }) {\n  return (\n    <li className=\"display-flex-center little-spacer-bottom\">\n      <CheckIcon className=\"spacer-right\" fill={colors.lightGreen} />\n      {children}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ChildrenProps {\n  onSubmit: React.FormEventHandler;\n  processingUpgrade: boolean;\n  renderFormFields: () => React.ReactNode;\n  renderNextCharge: (className?: string) => React.ReactNode;\n  renderRecap: () => React.ReactNode;\n  renderSubmitButton: (submitText?: string) => React.ReactNode;\n  renderSubmitGroup: (submitText?: string) => React.ReactNode;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  initialCountry?: string;\n  currentUser: T.CurrentUser;\n  onCommit: () => void | Promise<void>;\n  onFailToUpgrade?: () => void;\n  organizationKey: string | (() => Promise<string>);\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\nexport default class BillingFormShim extends React.Component<Props> {\n  render() {\n    const { BillingForm } = (window as any).SonarBilling;\n    return <BillingForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport BillingFormShim from './BillingFormShim';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  insideModal?: boolean;\n  onUpgradeDone: () => void;\n  onClose: () => void;\n  organization: T.Organization;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  ready: boolean;\n}\n\nexport default class UpgradeOrganizationModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { ready: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const header = translate('billing.upgrade_box.upgrade_to_paid_plan');\n\n    if (!this.state.ready) {\n      return null;\n    }\n\n    return (\n      <Modal\n        contentLabel={header}\n        noBackdrop={this.props.insideModal}\n        onRequestClose={this.props.onClose}\n        shouldCloseOnOverlayClick={false}\n        size=\"medium\">\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <BillingForm\n          onCommit={this.props.onUpgradeDone}\n          organizationKey={this.props.organization.key}\n          subscriptionPlans={this.props.subscriptionPlans}>\n          {({\n            onSubmit,\n            processingUpgrade,\n            renderFormFields,\n            renderNextCharge,\n            renderRecap,\n            renderSubmitButton\n          }) => (\n            <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n              <div className=\"modal-body modal-container\">\n                <div className=\"huge-spacer-bottom\">\n                  <p className=\"spacer-bottom\">\n                    <FormattedMessage\n                      defaultMessage={translate('billing.upgrade.org_x_advantages')}\n                      id=\"billing.coupon.description\"\n                      values={{\n                        org: <strong>{this.props.organization.name}</strong>\n                      }}\n                    />\n                  </p>\n                  <UpgradeOrganizationAdvantages />\n                </div>\n                {renderFormFields()}\n                <div className=\"big-spacer-top\">{renderRecap()}</div>\n              </div>\n              <footer className=\"modal-foot display-flex-center display-flex-space-between\">\n                {renderNextCharge() || <span />}\n                <div>\n                  <DeferredSpinner loading={processingUpgrade} />\n                  {renderSubmitButton()}\n                  <ResetButtonLink onClick={this.props.onClose}>\n                    {translate('cancel')}\n                  </ResetButtonLink>\n                </div>\n              </footer>\n            </form>\n          )}\n        </BillingForm>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport { formatPrice } from '../organization/utils';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport UpgradeOrganizationModal from './UpgradeOrganizationModal';\n\ninterface Props {\n  className?: string;\n  insideModal?: boolean;\n  onOrganizationUpgrade: () => void;\n  organization: T.Organization;\n}\n\ninterface State {\n  subscriptionPlans: T.SubscriptionPlan[];\n  upgradeOrganizationModal: boolean;\n}\n\nexport default class UpgradeOrganizationBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { subscriptionPlans: [], upgradeOrganizationModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSubscriptionPlans();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleUpgradeClick = () => {\n    this.setState({ upgradeOrganizationModal: true });\n  };\n\n  handleUpgradeOrganizationModalClose = () => {\n    if (this.mounted) {\n      this.setState({ upgradeOrganizationModal: false });\n    }\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    this.handleUpgradeOrganizationModalClose();\n  };\n\n  render() {\n    if (!hasMessage('billing.upgrade_box.header')) {\n      return null;\n    }\n\n    const { subscriptionPlans, upgradeOrganizationModal } = this.state;\n    const startingPrice = subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <RadioCard\n          className={this.props.className}\n          title={translate('billing.upgrade_box.header')}\n          titleInfo={\n            startingPrice !== undefined && (\n              <FormattedMessage\n                defaultMessage={translate('billing.price_from_x')}\n                id=\"billing.price_from_x\"\n                values={{\n                  price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n                }}\n              />\n            )\n          }>\n          <>\n            <UpgradeOrganizationAdvantages />\n            <div className=\"big-spacer-left\">\n              <Button className=\"js-upgrade-organization\" onClick={this.handleUpgradeClick}>\n                {translate('billing.paid_plan.upgrade')}\n              </Button>\n              <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n                {translate('billing.pricing.learn_more')}\n              </Link>\n            </div>\n          </>\n        </RadioCard>\n        {upgradeOrganizationModal && (\n          <UpgradeOrganizationModal\n            insideModal={this.props.insideModal}\n            onClose={this.handleUpgradeOrganizationModalClose}\n            onUpgradeDone={this.handleOrganizationUpgrade}\n            organization={this.props.organization}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getCorsJSON,\n  getJSON,\n  post,\n  postJSON,\n  requestTryAndRepeatUntil\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMyOrganizations } from '../../apps/account/organizations/actions';\nimport { getMyOrganizations, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\ninterface OwnProps {\n  fetchMyOrganizations: () => Promise<void>;\n  userOrganizations: T.Organization[];\n}\n\nexport function withUserOrganizations<P>(\n  WrappedComponent: React.ComponentType<P & Partial<OwnProps>>\n) {\n  class Wrapper extends React.Component<P & OwnProps> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withUserOrganizations');\n\n    componentDidMount() {\n      this.props.fetchMyOrganizations();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = { fetchMyOrganizations: fetchMyOrganizations as any };\n\n  function mapStateToProps(state: Store) {\n    return { userOrganizations: getMyOrganizations(state) };\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n}\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#create-project{padding-top:0!important}#create-project header{padding-top:20px}.white-page #create-project header{background-color:#fff;position:-webkit-sticky;position:sticky;top:48px;z-index:50}.create-project{display:flex!important;justify-content:space-between}.create-project-repository{display:flex;align-items:center;min-width:500px;height:40px;border:1px solid #e6e6e6;padding:8px 16px;margin-bottom:8px;box-sizing:border-box;cursor:pointer;transition:all .3s ease}.create-project-repository.disabled{background-color:#ebebeb;border-color:#ddd;cursor:default}.create-project-repository.imported{cursor:default}.create-project-repository.selected{background-color:#cae3f2;border-color:#236a97}.create-project-repository:not(.imported):not(.disabled):active,.create-project-repository:not(.imported):not(.disabled):focus,.create-project-repository:not(.imported):not(.disabled):hover{border-color:#4b9fd5;box-shadow:none}.create-project-side-with-search{margin-top:32px}.create-project-side-sticky{position:-webkit-sticky;position:sticky;top:68px}.create-project-setup{display:flex;overflow:hidden;opacity:0;flex-direction:column;height:0;width:450px;margin-bottom:0;color:#fff;background-color:#0b3c62;border:none;border-radius:3px;transition:height .5s ease,opacity .4s ease-out,margin-bottom .5s ease-in}.create-project-setup.open{opacity:1;height:160px;margin-bottom:20px}.create-project-setup h2{color:#fff;font-weight:700;font-size:16px}.create-project-setup .boxed-group-inner{display:flex;flex-direction:column;flex-grow:1}.create-project-setup .button{border-color:#4c9bd6;background-color:#4c9bd6;color:#fff;transition:border-color .2s ease,box-shadow .2s ease,background-color .2s ease}.create-project-setup .button:focus,.create-project-setup .button:hover{border-color:#327bb3;background-color:#327bb3}.create-project-actions{min-width:500px;display:flex;justify-content:space-between;align-items:center;padding:8px 0 8px 16px;border-left:1px solid transparent}.create-project-actions .icon-checkbox{margin-right:8px}.create-project-modes{margin:0 auto;max-width:500px}.create-project-import-bbs .open .boxed-group-header{border-bottom:1px solid #e6e6e6}.create-project-import-bbs .boxed-group-inner{padding-top:24px}.create-project-import-bbs-repo{width:250px;min-height:40px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  hideIcons?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationSelect({\n  hideIcons,\n  onChange,\n  organization,\n  organizations\n}: Props) {\n  const optionRenderer = getOptionRenderer(hideIcons);\n  return (\n    <Select\n      autoFocus={!organization}\n      className=\"input-super-large\"\n      clearable={false}\n      id=\"select-organization\"\n      labelKey=\"name\"\n      onChange={onChange}\n      optionRenderer={optionRenderer}\n      options={sortBy(organizations, o => o.name.toLowerCase())}\n      placeholder={translate('onboarding.import_organization.choose_organization')}\n      required={true}\n      value={organization}\n      valueKey=\"key\"\n      valueRenderer={optionRenderer}\n    />\n  );\n}\n\nexport function getOptionRenderer(hideIcons?: boolean) {\n  return function optionRenderer(organization: T.Organization) {\n    const icon = organization.alm\n      ? `sonarcloud/${sanitizeAlmId(organization.alm.key)}`\n      : 'sonarcloud-square-logo';\n    const isPaidOrg = organization.subscription === 'PAID';\n    return (\n      <div className=\"display-flex-space-between\">\n        <span className=\"text-ellipsis flex-1\">\n          {!hideIcons && (\n            <img\n              alt={organization.alm ? organization.alm.key : 'SonarCloud'}\n              className=\"little-spacer-right\"\n              height={14}\n              src={`${getBaseUrl()}/images/${icon}.svg`}\n            />\n          )}\n          {organization.name}\n          <span className=\"note little-spacer-left\">{organization.key}</span>\n        </span>\n        {isPaidOrg && <div className=\"badge\">{translate('organization.paid_plan.badge')}</div>}\n      </div>\n    );\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport { ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP } from '../organization/utils';\n\ninterface Props {\n  autoImport?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport class OrganizationInput extends React.PureComponent<Props & WithRouterProps> {\n  handleLinkClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n    this.props.router.push({\n      pathname: '/create-organization',\n      state: { tab: this.props.autoImport ? 'auto' : 'manual' }\n    });\n  };\n\n  render() {\n    const { autoImport, onChange, organization, organizations } = this.props;\n    return (\n      <div className=\"form-field spacer-bottom\">\n        <label htmlFor=\"select-organization\">\n          <span className=\"text-middle\">\n            <strong>{translate('onboarding.create_project.organization')}</strong>\n            <em className=\"mandatory\">*</em>\n          </span>\n        </label>\n        <OrganizationSelect\n          hideIcons={!autoImport}\n          onChange={onChange}\n          organization={organization}\n          organizations={organizations}\n        />\n        <a className=\"big-spacer-left js-new-org\" href=\"#\" onClick={this.handleLinkClick}>\n          {autoImport\n            ? translate('onboarding.create_project.import_new_org')\n            : translate('onboarding.create_project.create_new_org')}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OrganizationInput);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { identity } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\n\ninterface Props {\n  disabled: boolean;\n  highlightUpgradeBox: (highlight: boolean) => void;\n  identityProvider: T.IdentityProvider;\n  repository: T.AlmRepository;\n  selected: boolean;\n  toggleRepository: (repository: T.AlmRepository) => void;\n}\n\nexport default class AlmRepositoryItem extends React.PureComponent<Props> {\n  handleMouseEnter = () => {\n    this.props.highlightUpgradeBox(true);\n  };\n\n  handleMouseLeave = () => {\n    this.props.highlightUpgradeBox(false);\n  };\n\n  handleToggle = () => {\n    if (!this.props.disabled && !this.props.repository.linkedProjectKey) {\n      this.props.toggleRepository(this.props.repository);\n    }\n  };\n\n  render() {\n    const { disabled, identityProvider, repository, selected } = this.props;\n    const alreadyImported = Boolean(repository.linkedProjectKey);\n    return (\n      <Tooltip\n        overlay={\n          disabled\n            ? translate('onboarding.create_project.subscribe_to_import_private_repositories')\n            : undefined\n        }>\n        <li>\n          <div\n            className={classNames('create-project-repository', {\n              disabled,\n              imported: alreadyImported,\n              selected\n            })}\n            onClick={this.handleToggle}\n            onMouseEnter={disabled ? this.handleMouseEnter : undefined}\n            onMouseLeave={disabled ? this.handleMouseLeave : undefined}\n            role=\"listitem\">\n            <div className=\"flex-1 display-flex-center\">\n              {disabled ? (\n                <LockIcon fill={colors.disableGrayText} />\n              ) : (\n                <Checkbox\n                  checked={selected || alreadyImported}\n                  disabled={disabled || alreadyImported}\n                  onCheck={identity}\n                />\n              )}\n              <img\n                alt={identityProvider.name}\n                className={classNames('spacer-left', { 'icon-half-transparent': disabled })}\n                height={14}\n                src={`${getBaseUrl()}/images/sonarcloud/${identityProvider.key}.svg`}\n                width={14}\n              />\n              <span className=\"spacer-left\">{this.props.repository.label}</span>\n              {repository.private && (\n                <div className=\"badge spacer-left\">{translate('visibility.private')}</div>\n              )}\n            </div>\n\n            {repository.linkedProjectKey && (\n              <span>\n                <CheckIcon className=\"little-spacer-right\" fill={colors.green} />\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.repository_imported')}\n                  id=\"onboarding.create_project.repository_imported\"\n                  values={{\n                    link: (\n                      <Link to={getProjectUrl(repository.linkedProjectKey)}>\n                        {translate('onboarding.create_project.see_project')}\n                      </Link>\n                    )\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        </li>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { partition } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { provisionProject } from '../../../api/alm-integration';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  onProvisionFail: () => Promise<void>;\n  organization: T.Organization;\n  selectedRepositories: T.AlmRepository[];\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SetupProjectBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit = () => {\n    return !this.state.submitting && this.props.selectedRepositories.length > 0;\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.canSubmit()) {\n      const { selectedRepositories } = this.props;\n      this.setState({ submitting: true });\n      provisionProject({\n        installationKeys: selectedRepositories.map(repo => repo.installationKey),\n        organization: this.props.organization.key\n      }).then(\n        ({ projects }) =>\n          this.props.onProjectCreate(\n            projects.map(project => project.projectKey),\n            this.props.organization.key\n          ),\n        this.handleProvisionFail\n      );\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.props.onProvisionFail().then(() => {\n      if (this.mounted) {\n        this.setState({ submitting: false });\n      }\n    });\n  };\n\n  render() {\n    const { selectedRepositories } = this.props;\n    const hasSelectedRepositories = selectedRepositories.length > 0;\n    const [privateRepos = [], publicRepos = []] = partition(\n      selectedRepositories,\n      repo => repo.private\n    );\n    return (\n      <form\n        className={classNames('create-project-setup boxed-group', {\n          open: hasSelectedRepositories\n        })}\n        onSubmit={this.handleFormSubmit}>\n        <div className=\"boxed-group-header\">\n          <h2 className=\"spacer-top\">\n            {selectedRepositories.length > 1\n              ? translateWithParameters(\n                  'onboarding.create_project.x_repositories_selected',\n                  selectedRepositories.length\n                )\n              : translate('onboarding.create_project.1_repository_selected')}\n          </h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          <div className=\"flex-1\">\n            {publicRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_public')}</p>\n            )}\n            {publicRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_public',\n                  publicRepos.length\n                )}\n              </p>\n            )}\n            {privateRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_private')}</p>\n            )}\n            {privateRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_private',\n                  privateRepos.length\n                )}\n              </p>\n            )}\n          </div>\n          <div>\n            <SubmitButton className=\"button-large\" disabled={this.state.submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={this.state.submitting} />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getRepositories } from '../../../api/alm-integration';\nimport { isPaidOrganization } from '../../../helpers/organizations';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport AlmRepositoryItem from './AlmRepositoryItem';\nimport SetupProjectBox from './SetupProjectBox';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization: T.Organization;\n}\n\ntype SelectedRepositories = T.Dict<T.AlmRepository | undefined>;\n\ninterface State {\n  checkAllRepositories: boolean;\n  highlight: boolean;\n  loading: boolean;\n  repositories: T.AlmRepository[];\n  search: string;\n  selectedRepositories: SelectedRepositories;\n  successfullyUpgraded: boolean;\n}\n\nexport default class RemoteRepositories extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    checkAllRepositories: false,\n    highlight: false,\n    loading: true,\n    repositories: [],\n    search: '',\n    selectedRepositories: {},\n    successfullyUpgraded: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRepositories();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.organization.key !== this.props.organization.key) {\n      this.setState({ loading: true, selectedRepositories: {} });\n      this.fetchRepositories();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRepositories = () => {\n    const { organization } = this.props;\n    return getRepositories({ organization: organization.key }).then(\n      ({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, repositories });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  filterBySearch = (search: String) => (repo: T.AlmRepository) => {\n    return repo.label.toLowerCase().includes(search.toLowerCase());\n  };\n\n  handleHighlightUpgradeBox = (highlight: boolean) => {\n    this.setState({ highlight });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    if (this.mounted) {\n      this.setState({ successfullyUpgraded: true });\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.fetchRepositories().then(() => {\n      if (this.mounted) {\n        this.setState(({ repositories, selectedRepositories }) => {\n          const updateSelectedRepositories: SelectedRepositories = {};\n          Object.keys(selectedRepositories).forEach(installationKey => {\n            const newRepository = repositories.find(r => r.installationKey === installationKey);\n            if (newRepository && !newRepository.linkedProjectKey) {\n              updateSelectedRepositories[newRepository.installationKey] = newRepository;\n            }\n          });\n          return { selectedRepositories: updateSelectedRepositories };\n        });\n      }\n    });\n  };\n\n  handleSearch = (search: string) => {\n    this.setState({ search, checkAllRepositories: false, selectedRepositories: {} });\n  };\n\n  onCheckAllRepositories = () => {\n    this.setState(({ checkAllRepositories, repositories, search }) => {\n      const { organization } = this.props;\n\n      const isPaidOrg = isPaidOrganization(organization);\n      const filterByPlan = (repo: T.AlmRepository) => (isPaidOrg ? true : !repo.private);\n      const filterByImportable = (repo: T.AlmRepository) => !repo.linkedProjectKey;\n\n      const nextState = {\n        selectedRepositories: {},\n        checkAllRepositories: !checkAllRepositories\n      };\n\n      if (nextState.checkAllRepositories) {\n        const validRepositories = repositories.filter(\n          repo =>\n            this.filterBySearch(search)(repo) && filterByPlan(repo) && filterByImportable(repo)\n        );\n        nextState.selectedRepositories = keyBy(validRepositories, 'installationKey');\n      }\n\n      return nextState;\n    });\n  };\n\n  toggleRepository = (repository: T.AlmRepository) => {\n    this.setState(({ selectedRepositories }) => ({\n      selectedRepositories: {\n        ...selectedRepositories,\n        [repository.installationKey]: selectedRepositories[repository.installationKey]\n          ? undefined\n          : repository\n      }\n    }));\n  };\n\n  render() {\n    const { highlight, loading, repositories, search, selectedRepositories } = this.state;\n    const { almApplication, organization } = this.props;\n    const isPaidOrg = isPaidOrganization(organization);\n    const hasPrivateRepositories = repositories.some(repository => Boolean(repository.private));\n    const showSearchBox = repositories.length > 5;\n    const showCheckAll = repositories.length > 1;\n    const showUpgradebox =\n      !isPaidOrg && hasPrivateRepositories && organization.actions && organization.actions.admin;\n    const filteredRepositories = repositories.filter(this.filterBySearch(search));\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <div className=\"spacer-bottom create-project-actions\">\n            <div>\n              {showCheckAll && (\n                <Checkbox\n                  checked={this.state.checkAllRepositories}\n                  disabled={filteredRepositories.length === 0}\n                  onCheck={this.onCheckAllRepositories}>\n                  {translate('onboarding.create_project.select_all_repositories')}\n                </Checkbox>\n              )}\n            </div>\n            {showSearchBox && (\n              <SearchBox\n                minLength={1}\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_repositories')}\n                value={this.state.search}\n              />\n            )}\n          </div>\n\n          {this.state.successfullyUpgraded && (\n            <Alert variant=\"success\">\n              {translateWithParameters(\n                'onboarding.create_project.subscribtion_success_x',\n                organization.name\n              )}\n            </Alert>\n          )}\n          <DeferredSpinner loading={loading}>\n            <ul>\n              {filteredRepositories.length === 0 && (\n                <li className=\"big-spacer-top note\">\n                  {showUpgradebox\n                    ? translateWithParameters('no_results_for_x', search)\n                    : translate('onboarding.create_project.no_repositories')}\n                </li>\n              )}\n              {filteredRepositories.map(repo => (\n                <AlmRepositoryItem\n                  disabled={Boolean(repo.private && !isPaidOrg)}\n                  highlightUpgradeBox={this.handleHighlightUpgradeBox}\n                  identityProvider={almApplication}\n                  key={repo.installationKey}\n                  repository={repo}\n                  selected={Boolean(selectedRepositories[repo.installationKey])}\n                  toggleRepository={this.toggleRepository}\n                />\n              ))}\n            </ul>\n          </DeferredSpinner>\n        </div>\n        {organization && (\n          <div className={classNames({ 'create-project-side-with-search': showSearchBox })}>\n            <div className=\"create-project-side-sticky\">\n              <SetupProjectBox\n                onProjectCreate={this.props.onProjectCreate}\n                onProvisionFail={this.handleProvisionFail}\n                organization={organization}\n                selectedRepositories={Object.keys(selectedRepositories)\n                  .map(r => selectedRepositories[r])\n                  .filter(isDefined)}\n              />\n              {showUpgradebox && (\n                <UpgradeOrganizationBox\n                  className={classNames({ highlight })}\n                  onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                  organization={organization}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport IdentityProviderLink from 'sonar-ui-common/components/controls/IdentityProviderLink';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport {\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP\n} from '../organization/utils';\nimport OrganizationInput from './OrganizationInput';\nimport RemoteRepositories from './RemoteRepositories';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  boundOrganizations: T.Organization[];\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization?: string;\n}\n\ninterface State {\n  selectedOrganization: string;\n}\n\nexport default class AutoProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { selectedOrganization: this.getInitialSelectedOrganization(props) };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.organization) {\n      return props.organization;\n    } else if (props.boundOrganizations.length === 1) {\n      return props.boundOrganizations[0].key;\n    } else {\n      return '';\n    }\n  }\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    this.setState({ selectedOrganization: key });\n  };\n\n  render() {\n    const { almApplication, boundOrganizations, onProjectCreate } = this.props;\n\n    if (boundOrganizations.length === 0) {\n      return (\n        <>\n          <p className=\"spacer-bottom\">\n            {translate('onboarding.create_project.install_app_description', almApplication.key)}\n          </p>\n          <IdentityProviderLink\n            backgroundColor={almApplication.backgroundColor}\n            className=\"display-inline-block\"\n            iconPath={almApplication.iconPath}\n            name={almApplication.name}\n            onClick={this.handleInstallAppClick}\n            small={true}\n            url={almApplication.installationUrl}>\n            {translate(\n              'onboarding.import_organization.choose_organization_button',\n              almApplication.key\n            )}\n          </IdentityProviderLink>\n        </>\n      );\n    }\n\n    const { selectedOrganization } = this.state;\n    const organization = boundOrganizations.find(o => o.key === selectedOrganization);\n\n    return (\n      <>\n        <OrganizationInput\n          autoImport={true}\n          onChange={this.handleOrganizationSelect}\n          organization={selectedOrganization}\n          organizations={this.props.boundOrganizations}\n        />\n        {organization && (\n          <RemoteRepositories\n            almApplication={almApplication}\n            onOrganizationUpgrade={this.props.onOrganizationUpgrade}\n            onProjectCreate={onProjectCreate}\n            organization={organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface CreateProjectPageHeaderProps {\n  additionalActions?: React.ReactNode;\n  showBreadcrumb?: boolean;\n  title: React.ReactNode;\n}\n\nexport default function CreateProjectPageHeader(props: CreateProjectPageHeaderProps) {\n  const { additionalActions, showBreadcrumb, title } = props;\n\n  return (\n    <header className=\"huge-spacer-bottom bordered-bottom overflow-hidden\">\n      <h1 className=\"pull-left huge big-spacer-bottom\">\n        {showBreadcrumb && (\n          <>\n            <Link to=\"/projects/create\">{translate('my_account.create_new.TRK')}</Link>\n            <span className=\"big-spacer-left big-spacer-right slash-separator\" />\n          </>\n        )}\n        {title}\n      </h1>\n\n      {additionalActions}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport { isSonarCloud } from '../../../helpers/system';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport './ManualProjectCreate.css';\nimport OrganizationInput from './OrganizationInput';\n\ninterface Props {\n  branchesEnabled?: boolean;\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations?: () => Promise<void>;\n  onProjectCreate: (projectKeys: string[]) => void;\n  organization?: string;\n  userOrganizations?: T.Organization[];\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectNameError?: string;\n  projectKey: string;\n  projectKeyError?: string;\n  selectedOrganization?: T.Organization;\n  selectedVisibility?: T.Visibility;\n  submitting: boolean;\n  touched: boolean;\n  validating: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      selectedOrganization: this.getInitialSelectedOrganization(props),\n      submitting: false,\n      touched: false,\n      validating: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          if (!alreadyExist) {\n            this.setState({ projectKeyError: undefined, validating: false });\n          } else {\n            this.setState({\n              projectKeyError: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validating: false });\n        }\n      });\n  };\n\n  canChoosePrivate = (selectedOrganization: T.Organization | undefined) => {\n    return Boolean(selectedOrganization && selectedOrganization.subscription === 'PAID');\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization\n    } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0 &&\n        (!isSonarCloud() || selectedOrganization)\n    );\n  }\n\n  getInitialSelectedOrganization = (props: Props) => {\n    if (props.organization) {\n      return this.getOrganization(props.organization);\n    } else if (props.userOrganizations && props.userOrganizations.length === 1) {\n      return props.userOrganizations[0];\n    } else {\n      return undefined;\n    }\n  };\n\n  getOrganization = (organizationKey: string) => {\n    return (\n      this.props.userOrganizations &&\n      this.props.userOrganizations.find(({ key }: T.Organization) => key === organizationKey)\n    );\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim(),\n        organization: state.selectedOrganization && state.selectedOrganization.key,\n        visibility: this.state.selectedVisibility\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    const selectedOrganization = this.getOrganization(key);\n    let { selectedVisibility } = this.state;\n\n    if (selectedVisibility === undefined) {\n      selectedVisibility = this.canChoosePrivate(selectedOrganization) ? 'private' : 'public';\n    }\n\n    this.setState({\n      selectedOrganization,\n      selectedVisibility\n    });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.fetchMyOrganizations!().then(\n      () => {\n        this.setState(prevState => {\n          if (prevState.selectedOrganization) {\n            const selectedOrganization = this.getOrganization(prevState.selectedOrganization.key);\n            return {\n              selectedOrganization\n            };\n          }\n          return null;\n        });\n      },\n      () => {}\n    );\n  };\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectKey = event.currentTarget.value || '';\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState(prevState => {\n      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;\n      return {\n        projectKey,\n        projectKeyError,\n        projectName,\n        projectNameError: this.validateName(projectName),\n        touched: true,\n        validating: projectKeyError === undefined\n      };\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({\n      projectName,\n      projectNameChanged: true,\n      projectNameError: this.validateName(projectName)\n    });\n  };\n\n  handleVisibilityChange = (selectedVisibility: T.Visibility) => {\n    this.setState({ selectedVisibility });\n  };\n\n  validateKey = (projectKey: string) => {\n    return projectKey.length > 400 || !/^[\\w-.:]*[a-zA-Z]+[\\w-.:]*$/.test(projectKey)\n      ? translate('onboarding.create_project.project_key.error')\n      : undefined;\n  };\n\n  validateName = (projectName: string) => {\n    return projectName.length === 0 || projectName.length > 255\n      ? translate('onboarding.create_project.display_name.error')\n      : undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization,\n      submitting,\n      touched,\n      validating\n    } = this.state;\n    const { branchesEnabled } = this.props;\n    const projectKeyIsInvalid = touched && projectKeyError !== undefined;\n    const projectKeyIsValid = touched && !validating && projectKeyError === undefined;\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n    const canChoosePrivate = this.canChoosePrivate(selectedOrganization);\n\n    return (\n      <>\n        <CreateProjectPageHeader\n          showBreadcrumb={branchesEnabled}\n          title={translate('onboarding.create_project.setup_manually')}\n        />\n\n        <div className=\"create-project\">\n          <div className=\"flex-1 huge-spacer-right\">\n            <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n              {isSonarCloud() && this.props.userOrganizations && (\n                <OrganizationInput\n                  onChange={this.handleOrganizationSelect}\n                  organization={selectedOrganization ? selectedOrganization.key : ''}\n                  organizations={this.props.userOrganizations}\n                />\n              )}\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.project_key.description')}\n                error={projectKeyError}\n                help={translate('onboarding.create_project.project_key.help')}\n                id=\"project-key\"\n                isInvalid={projectKeyIsInvalid}\n                isValid={projectKeyIsValid}\n                label={translate('onboarding.create_project.project_key')}\n                required={true}>\n                <input\n                  autoFocus={true}\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectKeyIsInvalid,\n                    'is-valid': projectKeyIsValid\n                  })}\n                  id=\"project-key\"\n                  maxLength={400}\n                  minLength={1}\n                  onChange={this.handleProjectKeyChange}\n                  type=\"text\"\n                  value={projectKey}\n                />\n              </ValidationInput>\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.display_name.description')}\n                error={projectNameError}\n                help={translate('onboarding.create_project.display_name.help')}\n                id=\"project-name\"\n                isInvalid={projectNameIsInvalid}\n                isValid={projectNameIsValid}\n                label={translate('onboarding.create_project.display_name')}\n                required={true}>\n                <input\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectNameIsInvalid,\n                    'is-valid': projectNameIsValid\n                  })}\n                  id=\"project-name\"\n                  maxLength={255}\n                  minLength={1}\n                  onChange={this.handleProjectNameChange}\n                  type=\"text\"\n                  value={projectName}\n                />\n              </ValidationInput>\n\n              <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n                {translate('set_up')}\n              </SubmitButton>\n              <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n            </form>\n          </div>\n\n          {isSonarCloud() && selectedOrganization && (\n            <div className=\"create-project-side-sticky\">\n              <UpgradeOrganizationBox\n                className={classNames('animated', { open: !canChoosePrivate })}\n                onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                organization={selectedOrganization}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport Tabs from 'sonar-ui-common/components/controls/Tabs';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmAppInfo } from '../../../api/alm-integration';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { hasAdvancedALMIntegration } from '../../../helpers/almIntegrations';\nimport { getOrganizationUrl, getProjectUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport AutoProjectCreate from './AutoProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations: () => Promise<void>;\n  skipOnboarding: () => void;\n  userOrganizations: T.Organization[];\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  loading: boolean;\n}\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  organization?: string;\n  tab?: TabKeys;\n}\n\nexport class CreateProjectPageSonarCloud extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (hasAdvancedALMIntegration(this.props.currentUser)) {\n      this.fetchAlmApplication();\n    } else {\n      this.setState({ loading: false });\n    }\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[], organization?: string) => {\n    this.props.skipOnboarding();\n    if (projectKeys.length > 1) {\n      this.props.router.push({\n        pathname: (organization ? getOrganizationUrl(organization) : '') + '/projects'\n      });\n    } else if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(\n      ({ application }) => {\n        if (this.mounted) {\n          this.setState({ almApplication: application, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrl({ tab });\n  };\n\n  updateUrl = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  render() {\n    const { currentUser, location, userOrganizations } = this.props;\n    const { almApplication, loading } = this.state;\n    const state: LocationState = location.state || {};\n    const header = translate('onboarding.create_project.header');\n    const showManualTab = state.tab === 'manual';\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <>\n              {almApplication && (\n                <Tabs<TabKeys>\n                  onChange={this.onTabChange}\n                  selected={state.tab || 'auto'}\n                  tabs={[\n                    {\n                      key: 'auto',\n                      node: translate('onboarding.create_project.select_repositories')\n                    },\n                    { key: 'manual', node: translate('onboarding.create_project.setup_manually') }\n                  ]}\n                />\n              )}\n\n              {showManualTab || !almApplication ? (\n                <ManualProjectCreate\n                  currentUser={currentUser}\n                  fetchMyOrganizations={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                  userOrganizations={userOrganizations.filter(\n                    ({ actions = {} }) => actions.provision\n                  )}\n                />\n              ) : (\n                <AutoProjectCreate\n                  almApplication={almApplication}\n                  boundOrganizations={userOrganizations.filter(\n                    ({ alm, actions = {} }) => alm && actions.provision\n                  )}\n                  onOrganizationUpgrade={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { skipOnboarding };\n\nexport default whenLoggedIn(\n  withUserOrganizations(connect(null, mapDispatchToProps)(CreateProjectPageSonarCloud))\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum CreateProjectModes {\n  Manual = 'manual',\n  BitbucketServer = 'bbs'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketProjectAccordionProps {\n  disableRepositories: boolean;\n  onClick?: () => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  open: boolean;\n  project: BitbucketProject;\n  repositories: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showingAllRepositories: boolean;\n}\n\nexport default function BitbucketProjectAccordion(props: BitbucketProjectAccordionProps) {\n  const {\n    disableRepositories,\n    open,\n    project,\n    repositories,\n    selectedRepository,\n    showingAllRepositories\n  } = props;\n\n  const repositoryCount = repositories.length;\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open,\n        'not-clickable': !props.onClick,\n        'no-hover': !props.onClick\n      })}\n      key={project.key}\n      onClick={\n        props.onClick\n          ? props.onClick\n          : () => {\n              /* noop */\n            }\n      }\n      open={open}\n      title={<h3>{project.name}</h3>}>\n      {open && (\n        <div className=\"display-flex-wrap\">\n          {repositoryCount === 0 && (\n            <Alert variant=\"warning\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.create_project.no_bbs_repos')}\n                id=\"onboarding.create_project.no_bbs_repos\"\n                values={{\n                  link: (\n                    <Link\n                      to={{\n                        pathname: '/projects/create',\n                        query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                      }}>\n                      {translate('onboarding.create_project.update_your_token')}\n                    </Link>\n                  )\n                }}\n              />\n            </Alert>\n          )}\n\n          {repositories.map(repo =>\n            repo.sqProjectKey ? (\n              <div\n                className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"\n                key={repo.id}>\n                <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                <div className=\"overflow-hidden\">\n                  <div className=\"little-spacer-bottom text-ellipsis\">\n                    <strong title={repo.name}>\n                      <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}</Link>\n                    </strong>\n                  </div>\n                  <em>{translate('onboarding.create_project.repository_imported')}</em>\n                </div>\n              </div>\n            ) : (\n              <Radio\n                checked={selectedRepository?.id === repo.id}\n                className={classNames(\n                  'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',\n                  {\n                    disabled: disableRepositories,\n                    'text-muted': disableRepositories,\n                    'link-no-underline': disableRepositories\n                  }\n                )}\n                key={repo.id}\n                onCheck={() => props.onSelectRepository(repo)}\n                value={String(repo.id)}>\n                <strong className=\"text-ellipsis\" title={repo.name}>\n                  {repo.name}\n                </strong>\n              </Radio>\n            )\n          )}\n\n          {!showingAllRepositories && repositoryCount > 0 && (\n            <Alert variant=\"warning\">\n              {translateWithParameters(\n                'onboarding.create_project.only_showing_X_first_repos',\n                repositoryCount\n              )}\n            </Alert>\n          )}\n        </div>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq, without } from 'lodash';\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketRepositoriesProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  projectRepositories: BitbucketProjectRepositories;\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketRepositories(props: BitbucketRepositoriesProps) {\n  const { disableRepositories, projects, projectRepositories, selectedRepository } = props;\n\n  const [openProjectKeys, setOpenProjectKeys] = React.useState(\n    projects.length > 0 ? [projects[0].key] : []\n  );\n\n  const allAreExpanded = projects.length <= openProjectKeys.length;\n\n  const handleClick = (isOpen: boolean, projectKey: string) => {\n    setOpenProjectKeys(\n      isOpen ? without(openProjectKeys, projectKey) : uniq([...openProjectKeys, projectKey])\n    );\n  };\n\n  return (\n    <>\n      <div className=\"overflow-hidden spacer-bottom\">\n        <ButtonLink\n          className=\"pull-right\"\n          onClick={() => setOpenProjectKeys(allAreExpanded ? [] : projects.map(p => p.key))}>\n          {allAreExpanded ? translate('collapse_all') : translate('expand_all')}\n        </ButtonLink>\n      </div>\n\n      {projects.map(project => {\n        const isOpen = openProjectKeys.includes(project.key);\n        const { allShown, repositories = [] } = projectRepositories[project.key] || {};\n\n        return (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            key={project.key}\n            onClick={() => handleClick(isOpen, project.key)}\n            onSelectRepository={props.onSelectRepository}\n            open={isOpen}\n            project={project}\n            repositories={repositories}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={allShown}\n          />\n        );\n      })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq } from 'lodash';\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketSearchResultsProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketSearchResults(props: BitbucketSearchResultsProps) {\n  const {\n    disableRepositories,\n    projects,\n    searching,\n    searchResults = [],\n    selectedRepository\n  } = props;\n\n  const filteredProjects = uniq(\n    searchResults.map(r => projects.find(p => p.key === r.projectKey)).filter(isDefined)\n  );\n\n  return filteredProjects.length === 0 && !searching ? (\n    <Alert className=\"big-spacer-top\" variant=\"warning\">\n      {translate('onboarding.create_project.no_bbs_repos.filter')}\n    </Alert>\n  ) : (\n    <div className=\"big-spacer-top\">\n      <DeferredSpinner loading={searching}>\n        {filteredProjects.map(project => {\n          const repositories = searchResults.filter(r => r.projectKey === project.key);\n\n          return (\n            <BitbucketProjectAccordion\n              disableRepositories={disableRepositories}\n              key={project.key}\n              onSelectRepository={props.onSelectRepository}\n              open={true}\n              project={project}\n              repositories={repositories}\n              selectedRepository={selectedRepository}\n              showingAllRepositories={true}\n            />\n          );\n        })}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketRepositories from './BitbucketRepositories';\nimport BitbucketSearchResults from './BitbucketSearchResults';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketImportRepositoryFormProps {\n  disableRepositories: boolean;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketImportRepositoryForm(props: BitbucketImportRepositoryFormProps) {\n  const {\n    disableRepositories,\n    projects = [],\n    projectRepositories = {},\n    searchResults,\n    searching,\n    selectedRepository\n  } = props;\n\n  if (projects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.no_bbs_projects')}\n          id=\"onboarding.create_project.no_bbs_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"create-project-import-bbs\">\n      <SearchBox\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_repositories_by_name')}\n      />\n\n      {searching || searchResults ? (\n        <BitbucketSearchResults\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projects={projects}\n          searchResults={searchResults}\n          searching={searching}\n          selectedRepository={selectedRepository}\n        />\n      ) : (\n        <BitbucketRepositories\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projectRepositories={projectRepositories}\n          projects={projects}\n          selectedRepository={selectedRepository}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface BitbucketPersonalAccessTokenFormProps {\n  bitbucketSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n}\n\nexport default function BitbucketPersonalAccessTokenForm(\n  props: BitbucketPersonalAccessTokenFormProps\n) {\n  const {\n    bitbucketSetting: { url },\n    submitting = false,\n    validationFailed\n  } = props;\n  const [touched, setTouched] = React.useState(false);\n\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const isInvalid = validationFailed && !touched;\n\n  return (\n    <div className=\"display-flex-start\">\n      <form\n        onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          const value = new FormData(e.currentTarget).get('personal_access_token') as string;\n          props.onPersonalAccessTokenCreate(value);\n        }}>\n        <h2 className=\"big\">{translate('onboarding.create_project.grant_access_to_bbs.title')}</h2>\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.grant_access_to_bbs.help')}\n        </p>\n\n        <ValidationInput\n          error={isInvalid ? translate('onboarding.create_project.pat_incorrect') : undefined}\n          id=\"personal_access_token\"\n          isInvalid={isInvalid}\n          isValid={false}\n          label={translate('onboarding.create_project.enter_pat')}\n          required={true}>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid\n            })}\n            id=\"personal_access_token\"\n            minLength={1}\n            name=\"personal_access_token\"\n            onChange={() => {\n              setTouched(true);\n            }}\n            type=\"text\"\n          />\n        </ValidationInput>\n\n        <SubmitButton disabled={isInvalid || submitting || !touched}>\n          {translate('save')}\n        </SubmitButton>\n        <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n      </form>\n\n      <Alert className=\"big-spacer-left big-spacer-top\" display=\"block\" variant=\"info\">\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.bbs_help_1')}\n        </p>\n\n        {url && (\n          <div className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"16\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            <a\n              href={`${url.replace(/\\/$/, '')}/plugins/servlet/access-tokens/add`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.create_project.pat_help.link')}\n            </a>\n          </div>\n        )}\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.bbs_help_2')}\n        </p>\n\n        <ul>\n          <li>\n            <FormattedMessage\n              defaultMessage={translate(\n                'onboarding.create_project.pat_help.bbs_permission_projects'\n              )}\n              id=\"onboarding.create_project.pat_help.bbs_permission_projects\"\n              values={{\n                perm: (\n                  <strong>{translate('onboarding.create_project.pat_help.read_permission')}</strong>\n                )\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.pat_help.bbs_permission_repos')}\n              id=\"onboarding.create_project.pat_help.bbs_permission_repos\"\n              values={{\n                perm: (\n                  <strong>{translate('onboarding.create_project.pat_help.read_permission')}</strong>\n                )\n              }}\n            />\n          </li>\n        </ul>\n      </Alert>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\nimport BitbucketImportRepositoryForm from './BitbucketImportRepositoryForm';\nimport BitbucketPersonalAccessTokenForm from './BitbucketPersonalAccessTokenForm';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\n\nexport interface BitbucketProjectCreateRendererProps {\n  bitbucketSetting?: AlmSettingsInstance;\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  onImportRepository: () => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onProjectCreate: (projectKeys: string[]) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function BitbucketProjectCreateRenderer(props: BitbucketProjectCreateRendererProps) {\n  const {\n    bitbucketSetting,\n    canAdmin,\n    importing,\n    loading,\n    projects,\n    projectRepositories,\n    selectedRepository,\n    searching,\n    searchResults,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        showBreadcrumb={true}\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            {translate('onboarding.create_project.from_bbs')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !bitbucketSetting && (\n        <Alert variant=\"error\">\n          {canAdmin ? (\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.no_bbs_binding.admin')}\n              id=\"onboarding.create_project.no_bbs_binding.admin\"\n              values={{\n                url: (\n                  <Link\n                    to={{\n                      pathname: '/admin/settings',\n                      query: { category: ALM_INTEGRATION }\n                    }}>\n                    {translate('settings.page')}\n                  </Link>\n                )\n              }}\n            />\n          ) : (\n            translate('onboarding.create_project.no_bbs_binding')\n          )}\n        </Alert>\n      )}\n\n      {!loading &&\n        bitbucketSetting &&\n        (showPersonalAccessTokenForm ? (\n          <BitbucketPersonalAccessTokenForm\n            bitbucketSetting={bitbucketSetting}\n            onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n            submitting={submittingToken}\n            validationFailed={tokenValidationFailed}\n          />\n        ) : (\n          <BitbucketImportRepositoryForm\n            disableRepositories={importing}\n            onSearch={props.onSearch}\n            onSelectRepository={props.onSelectRepository}\n            projectRepositories={projectRepositories}\n            projects={projects}\n            searchResults={searchResults}\n            searching={searching}\n            selectedRepository={selectedRepository}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getBitbucketServerProjects,\n  getBitbucketServerRepositories,\n  importBitbucketServerProject,\n  searchForBitbucketServerRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCreateProjectRenderer from './BitbucketProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  bitbucketSettings: AlmSettingsInstance[];\n  canAdmin?: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n}\n\ninterface State {\n  bitbucketSetting?: AlmSettingsInstance;\n  importing: boolean;\n  loading: boolean;\n  patIsValid?: boolean;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport class BitbucketProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      bitbucketSetting: props.bitbucketSettings[0],\n      importing: false,\n      loading: false,\n      searching: false,\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.bitbucketSettings.length === 0 && this.props.bitbucketSettings.length > 0) {\n      this.setState({ bitbucketSetting: this.props.bitbucketSettings[0] }, () =>\n        this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects;\n    if (patIsValid) {\n      projects = await this.fetchBitbucketProjects().catch(() => undefined);\n    }\n\n    let projectRepositories;\n    if (projects && projects.length > 0) {\n      projectRepositories = await this.fetchBitbucketRepositories(projects).catch(() => undefined);\n    }\n\n    if (this.mounted) {\n      this.setState({\n        patIsValid,\n        projects,\n        projectRepositories,\n        loading: false\n      });\n    }\n  };\n\n  checkPersonalAccessToken = () => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(bitbucketSetting.key);\n  };\n\n  fetchBitbucketProjects = (): Promise<BitbucketProject[] | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return getBitbucketServerProjects(bitbucketSetting.key).then(({ projects }) => projects);\n  };\n\n  fetchBitbucketRepositories = (\n    projects: BitbucketProject[]\n  ): Promise<BitbucketProjectRepositories | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return Promise.all(\n      projects.map(p => {\n        return getBitbucketServerRepositories(bitbucketSetting.key, p.name).then(\n          ({ isLastPage, repositories }) => ({\n            isLastPage,\n            repositories,\n            projectKey: p.key\n          })\n        );\n      })\n    ).then(results => {\n      return results.reduce(\n        (acc: BitbucketProjectRepositories, { isLastPage, projectKey, repositories }) => {\n          return { ...acc, [projectKey]: { allShown: isLastPage, repositories } };\n        },\n        {}\n      );\n    });\n  };\n\n  handlePersonalAccessTokenCreate = (token: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n    setAlmPersonalAccessToken(bitbucketSetting.key, token)\n      .then(this.checkPersonalAccessToken)\n      .then(patIsValid => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n          if (patIsValid) {\n            this.fetchInitialData();\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false });\n        }\n      });\n  };\n\n  handleImportRepository = () => {\n    const { bitbucketSetting, selectedRepository } = this.state;\n\n    if (!bitbucketSetting || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n    importBitbucketServerProject(\n      bitbucketSetting.key,\n      selectedRepository.projectKey,\n      selectedRepository.slug\n    )\n      .then(({ project: { key } }) => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n          this.props.onProjectCreate([key]);\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      });\n  };\n\n  handleSearch = (query: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return;\n    }\n\n    if (!query) {\n      this.setState({ searching: false, searchResults: undefined, selectedRepository: undefined });\n      return;\n    }\n\n    this.setState({ searching: true, selectedRepository: undefined });\n    searchForBitbucketServerRepositories(bitbucketSetting.key, query)\n      .then(({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ searching: false, searchResults: repositories });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ searching: false });\n        }\n      });\n  };\n\n  handleSelectRepository = (selectedRepository: BitbucketRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      bitbucketSetting,\n      importing,\n      loading,\n      patIsValid,\n      projectRepositories,\n      projects,\n      searching,\n      searchResults,\n      selectedRepository,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <BitbucketCreateProjectRenderer\n        bitbucketSetting={bitbucketSetting}\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        onImportRepository={this.handleImportRepository}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onProjectCreate={this.props.onProjectCreate}\n        onSearch={this.handleSearch}\n        onSelectRepository={this.handleSelectRepository}\n        projectRepositories={projectRepositories}\n        projects={projects}\n        searchResults={searchResults}\n        searching={searching}\n        selectedRepository={selectedRepository}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const { canAdmin } = getAppState(state);\n  return { canAdmin };\n};\n\nexport default connect(mapStateToProps)(BitbucketProjectCreate);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BitbucketProject, BitbucketRepository } from '../types/alm-integration';\nimport { ProjectBase } from './components';\n\nexport function setAlmPersonalAccessToken(almSetting: string, pat: string): Promise<void> {\n  return post('/api/alm_integrations/set_pat', { almSetting, pat }).catch(throwGlobalError);\n}\n\nexport function checkPersonalAccessTokenIsValid(almSetting: string): Promise<boolean> {\n  return get('/api/alm_integrations/check_pat', { almSetting })\n    .then(() => true)\n    .catch(response => {\n      if (response.status === 400) {\n        return false;\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function getBitbucketServerProjects(\n  almSetting: string\n): Promise<{ projects: BitbucketProject[] }> {\n  return getJSON('/api/alm_integrations/list_bitbucketserver_projects', { almSetting });\n}\n\nexport function getBitbucketServerRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    projectName\n  });\n}\n\nexport function importBitbucketServerProject(\n  almSetting: string,\n  projectKey: string,\n  repositorySlug: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_bitbucketserver_project', {\n    almSetting,\n    projectKey,\n    repositorySlug\n  }).catch(throwGlobalError);\n}\n\nexport function searchForBitbucketServerRepositories(\n  almSetting: string,\n  repositoryName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    repositoryName\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { CreateProjectModes } from './types';\n\nexport interface CreateProjectModeSelectionProps {\n  bbsBindingCount: number;\n  loadingBindings: boolean;\n  onSelectMode: (mode: CreateProjectModes) => void;\n}\n\nexport default function CreateProjectModeSelection(props: CreateProjectModeSelectionProps) {\n  const { bbsBindingCount, loadingBindings } = props;\n\n  return (\n    <>\n      <header className=\"huge-spacer-top big-spacer-bottom padded\">\n        <h1 className=\"text-center huge big-spacer-bottom\">\n          {translate('my_account.create_new.TRK')}\n        </h1>\n        <p className=\"text-center big\">{translate('onboarding.create_project.select_method')}</p>\n      </header>\n\n      <div className=\"create-project-modes huge-spacer-top display-flex-space-around\">\n        <button\n          className=\"button button-huge display-flex-column create-project-mode-type-manual\"\n          onClick={() => props.onSelectMode(CreateProjectModes.Manual)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/sonarcloud/analysis/manual.svg`}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.manual')}\n          </div>\n        </button>\n\n        <button\n          className=\"button button-huge big-spacer-left display-flex-column create-project-mode-type-bbs\"\n          disabled={bbsBindingCount !== 1}\n          onClick={() => props.onSelectMode(CreateProjectModes.BitbucketServer)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            width={80}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.from_bbs')}\n          </div>\n\n          {loadingBindings && (\n            <span>\n              {translate('onboarding.create_project.check_bbs_supported')}\n              <i className=\"little-spacer-left spinner\" />\n            </span>\n          )}\n\n          {!loadingBindings && bbsBindingCount !== 1 && (\n            <div className=\"text-muted small spacer-top\" style={{ lineHeight: 1.5 }}>\n              {translate('onboarding.create_project.bbs_not_configured')}\n              <HelpTooltip\n                className=\"little-spacer-left\"\n                overlay={\n                  bbsBindingCount === 0\n                    ? translate('onboarding.create_project.zero_bbs_instances')\n                    : translateWithParameters(\n                        'onboarding.create_project.too_many_bbs_instances_X',\n                        bbsBindingCount\n                      )\n                }\n              />\n            </div>\n          )}\n        </button>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmSettings } from '../../../api/alm-settings';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketProjectCreate from './BitbucketProjectCreate';\nimport CreateProjectModeSelection from './CreateProjectModeSelection';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\nimport { CreateProjectModes } from './types';\n\ninterface Props extends Pick<WithRouterProps, 'router' | 'location'> {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  bitbucketSettings: AlmSettingsInstance[];\n  loading: boolean;\n}\n\nexport class CreateProjectPageSonarQube extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { bitbucketSettings: [], loading: false };\n\n  componentDidMount() {\n    const {\n      appState: { branchesEnabled },\n      location\n    } = this.props;\n    this.mounted = true;\n    if (branchesEnabled) {\n      this.fetchAlmBindings();\n    }\n\n    if (location.query?.mode || !branchesEnabled) {\n      addWhitePageClass();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.location.query?.mode && !prevProps.location.query?.mode) {\n      addWhitePageClass();\n    } else if (!this.props.location.query?.mode && prevProps.location.query?.mode) {\n      removeWhitePageClass();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  fetchAlmBindings = () => {\n    this.setState({ loading: true });\n    getAlmSettings()\n      .then(almSettings => {\n        if (this.mounted) {\n          this.setState({\n            bitbucketSettings: almSettings.filter(s => s.alm === AlmKeys.Bitbucket),\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  handleModeSelect = (mode: CreateProjectModes) => {\n    const { router, location } = this.props;\n    router.push({\n      pathname: location.pathname,\n      query: { mode }\n    });\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled },\n      currentUser,\n      location\n    } = this.props;\n    const { bitbucketSettings, loading } = this.state;\n\n    const mode: CreateProjectModes | undefined = location.query?.mode;\n    const showManualForm = !branchesEnabled || mode === CreateProjectModes.Manual;\n    const showBBSForm = branchesEnabled && mode === CreateProjectModes.BitbucketServer;\n\n    return (\n      <>\n        <Helmet title={translate('my_account.create_new.TRK')} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-bottom position-relative\" id=\"create-project\">\n          {!showBBSForm && !showManualForm && (\n            <CreateProjectModeSelection\n              bbsBindingCount={bitbucketSettings.length}\n              loadingBindings={loading}\n              onSelectMode={this.handleModeSelect}\n            />\n          )}\n\n          {showManualForm && (\n            <ManualProjectCreate\n              branchesEnabled={branchesEnabled}\n              currentUser={currentUser}\n              onProjectCreate={this.handleProjectCreate}\n            />\n          )}\n\n          {showBBSForm && (\n            <BitbucketProjectCreate\n              bitbucketSettings={bitbucketSettings}\n              loadingBindings={loading}\n              location={location}\n              onProjectCreate={this.handleProjectCreate}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(withAppState(CreateProjectPageSonarQube));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { isSonarCloud } from '../../../helpers/system';\nimport CreateProjectPageSonarCloud from './CreateProjectPageSonarCloud';\nimport CreateProjectPageSonarQube from './CreateProjectPageSonarQube';\n\nexport default function CreateProjectPage(props: WithRouterProps) {\n  return (\n    <>\n      <A11ySkipTarget anchor=\"create_project_main\" />\n      {isSonarCloud() ? (\n        <CreateProjectPageSonarCloud {...props} />\n      ) : (\n        <CreateProjectPageSonarQube {...props} />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function getWrappedDisplayName<P>(\n  WrappedComponent: React.ComponentType<P>,\n  hocName: string\n) {\n  const wrappedDisplayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return `${hocName}(${wrappedDisplayName})`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withCurrentUser<P>(\n  WrappedComponent: React.ComponentType<P & { currentUser: T.CurrentUser }>\n) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withCurrentUser');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { currentUser: getCurrentUser(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum AlmKeys {\n  Azure = 'azure',\n  Bitbucket = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n\nexport interface AlmBindingDefinition {\n  key: string;\n}\n\nexport interface AzureBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmBindingDefinition {\n  appId: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url?: string;\n}\n\nexport interface ProjectAlmBinding {\n  key: string;\n  repository?: string;\n  slug?: string;\n  summaryCommentEnabled?: boolean;\n}\n\nexport interface AzureProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n\nexport interface BitbucketProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  summaryCommentEnabled: boolean;\n}\n\nexport interface GitlabProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository?: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: AlmKeys;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  azure: AzureBindingDefinition[];\n  bitbucket: BitbucketBindingDefinition[];\n  github: GithubBindingDefinition[];\n  gitlab: GitlabBindingDefinition[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { cleanQuery, parseAsOptionalString, serializeString } from 'sonar-ui-common/helpers/query';\nimport { decodeJwt } from 'sonar-ui-common/helpers/strings';\nimport { isBitbucket, isGithub } from '../../../helpers/almIntegrations';\n\nexport const ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP =\n  'sonarcloud.import_org.binding_in_progress';\n\nexport const ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP =\n  'sonarcloud.import_org.redirect_to_projects';\n\nexport const BIND_ORGANIZATION_KEY = 'sonarcloud.bind_org.key';\n\nexport const BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP = 'sonarcloud.bind_org.redirect_to_org';\n\nexport enum Step {\n  OrganizationDetails,\n  Plan\n}\n\nexport function formatPrice(price?: number, noSign?: boolean) {\n  const priceFormatted = formatMeasure(price, 'FLOAT')\n    .replace(/[.|,]0$/, '')\n    .replace(/([.|,]\\d)$/, '$10');\n  return noSign ? priceFormatted : translateWithParameters('billing.price_format', priceFormatted);\n}\n\nexport interface Query {\n  almInstallId?: string;\n  almKey?: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery = {}): Query => {\n    let almInstallId = undefined;\n    let almKey = undefined;\n\n    if (urlQuery['installation_id']) {\n      almKey = 'github';\n      almInstallId = parseAsOptionalString(urlQuery['installation_id']);\n    } else if (urlQuery['clientKey']) {\n      almKey = 'bitbucket';\n      almInstallId = parseAsOptionalString(urlQuery['clientKey']);\n    } else if (urlQuery['jwt']) {\n      const jwt = decodeJwt(urlQuery['jwt']);\n      if (jwt && jwt.iss) {\n        almKey = 'bitbucket';\n        almInstallId = jwt.iss;\n      }\n    }\n    return { almInstallId, almKey };\n  }\n);\n\nexport const serializeQuery = (query: Query): T.RawQuery =>\n  cleanQuery({\n    installation_id: isGithub(query.almKey) ? serializeString(query.almInstallId) : undefined,\n    clientKey: isBitbucket(query.almKey) ? serializeString(query.almInstallId) : undefined\n  });\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBinding,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBinding,\n  GithubBindingDefinition,\n  GithubProjectAlmBinding,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBinding,\n  ProjectAlmBinding\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions').catch(throwGlobalError);\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBinding> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBinding) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBinding) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBinding) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBinding) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}