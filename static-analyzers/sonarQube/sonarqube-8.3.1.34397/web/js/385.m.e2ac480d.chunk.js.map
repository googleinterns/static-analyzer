{"version":3,"sources":["webpack:///./src/main/js/apps/sessions/components/EmailAlreadyExists.tsx"],"names":["EmailAlreadyExists","mounted","state","identityProviders","fetchIdentityProviders","then","this","setState","getAuthError","cookie","JSON","parse","decodeURIComponent","renderIdentityProvier","provider","login","identityProvider","find","p","key","className","style","backgroundColor","color","secondFontColor","alt","name","height","src","iconPath","width","authError","id","defaultMessage","values","email","existingProvider","existingLogin","variant","href"],"mappings":"6FAAA,+HAiCe,MAAMA,UAA2B,gBAAhD,c,oBACE,KAAAC,SAAU,EACV,KAAAC,MAAe,CAAEC,kBAAmB,IAWpC,KAAAC,uBAAyB,KACvB,cAAuBC,KACrB,EAAGF,wBACGG,KAAKL,SACPK,KAAKC,SAAS,CAAEJ,uBAGpB,SAIJ,KAAAK,aAAe,KAOb,MAAMC,EAAS,oBAAU,wBACzB,OAAIA,EACKC,KAAKC,MAAMC,mBAAmBH,IAEhC,IAGT,KAAAI,sBAAwB,CAACC,EAAmBC,KAC1C,MAAMC,EAAmBV,KAAKJ,MAAMC,kBAAkBc,KAAKC,GAAKA,EAAEC,MAAQL,GAE1E,OAAOE,EACL,uBACEI,UAAU,oBACVC,MAAO,CACLC,gBAAiBN,EAAiBM,gBAClCC,MAAO,uBAAaP,EAAiBM,gBAAiB,SAAOE,mBAE/D,uBACEC,IAAKT,EAAiBU,KACtBN,UAAU,sBACVO,OAAO,KACPC,IAAK,uBAAeZ,EAAiBa,SACrCC,MAAM,OAEPf,GAGH,2BACgB,cAAbD,GAA4BA,E,IAAWC,IAvD9C,oBACET,KAAKL,SAAU,EACfK,KAAKF,yBAGP,uBACEE,KAAKL,SAAU,EAsDjB,SACE,MAAM8B,EAAYzB,KAAKE,eACvB,OACE,uBAAKY,UAAU,sBAAsBY,GAAG,MACtC,uBAAKZ,UAAU,cAAcY,GAAG,SAC9B,uBAAKZ,UAAU,yCACb,qBAAGA,UAAU,wBACX,gBAAC,mBAAgB,CACfa,eAAgB,oBAAU,mCAC1BD,GAAG,kCACHE,OAAQ,CAAEC,MAAO,8BAASJ,EAAUI,WAGvC7B,KAAKO,sBAAsBkB,EAAUK,iBAAkBL,EAAUM,gBAGpE,uBAAKjB,UAAU,oCACb,qBAAGA,UAAU,wBAAwB,oBAAU,oCAC9Cd,KAAKO,sBAAsBkB,EAAUjB,SAAUiB,EAAUhB,QAG5D,gBAAC,QAAK,CAACuB,QAAQ,WACZ,oBAAU,mCACX,sBAAIlB,UAAU,eACZ,sBAAIA,UAAU,cAAc,oBAAU,oCACtC,sBAAIA,UAAU,cAAc,oBAAU,oCACtC,sBAAIA,UAAU,cAAc,oBAAU,sCAI1C,uBAAKA,UAAU,6BACb,qBACEA,UAAU,qBACVmB,KAAI,UAAK,uBAAL,0BAAmCR,EAAUjB,SAA7C,0BACH,oBAAU,aAEb,qBAAGM,UAAU,4BAA4BmB,KAAM,uBAAe,KAC3D,oBAAU","file":"js/385.m.e2ac480d.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { getTextColor } from 'sonar-ui-common/helpers/colors';\nimport { getCookie } from 'sonar-ui-common/helpers/cookies';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getIdentityProviders } from '../../../api/users';\nimport { colors } from '../../../app/theme';\n\ninterface State {\n  identityProviders: T.IdentityProvider[];\n}\n\nexport default class EmailAlreadyExists extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { identityProviders: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIdentityProviders();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIdentityProviders = () => {\n    getIdentityProviders().then(\n      ({ identityProviders }) => {\n        if (this.mounted) {\n          this.setState({ identityProviders });\n        }\n      },\n      () => {}\n    );\n  };\n\n  getAuthError = (): {\n    email?: string;\n    login?: string;\n    provider?: string;\n    existingLogin?: string;\n    existingProvider?: string;\n  } => {\n    const cookie = getCookie('AUTHENTICATION-ERROR');\n    if (cookie) {\n      return JSON.parse(decodeURIComponent(cookie));\n    }\n    return {};\n  };\n\n  renderIdentityProvier = (provider?: string, login?: string) => {\n    const identityProvider = this.state.identityProviders.find(p => p.key === provider);\n\n    return identityProvider ? (\n      <div\n        className=\"identity-provider\"\n        style={{\n          backgroundColor: identityProvider.backgroundColor,\n          color: getTextColor(identityProvider.backgroundColor, colors.secondFontColor)\n        }}>\n        <img\n          alt={identityProvider.name}\n          className=\"little-spacer-right\"\n          height=\"14\"\n          src={getBaseUrl() + identityProvider.iconPath}\n          width=\"14\"\n        />\n        {login}\n      </div>\n    ) : (\n      <div>\n        {provider !== 'sonarqube' && provider} {login}\n      </div>\n    );\n  };\n\n  render() {\n    const authError = this.getAuthError();\n    return (\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <div className=\"big-spacer-bottom js-existing-account\">\n            <p className=\"little-spacer-bottom\">\n              <FormattedMessage\n                defaultMessage={translate('sessions.email_already_exists.1')}\n                id=\"sessions.email_already_exists.1\"\n                values={{ email: <strong>{authError.email}</strong> }}\n              />\n            </p>\n            {this.renderIdentityProvier(authError.existingProvider, authError.existingLogin)}\n          </div>\n\n          <div className=\"big-spacer-bottom js-new-account\">\n            <p className=\"little-spacer-bottom\">{translate('sessions.email_already_exists.2')}</p>\n            {this.renderIdentityProvier(authError.provider, authError.login)}\n          </div>\n\n          <Alert variant=\"warning\">\n            {translate('sessions.email_already_exists.3')}\n            <ul className=\"list-styled\">\n              <li className=\"spacer-top\">{translate('sessions.email_already_exists.4')}</li>\n              <li className=\"spacer-top\">{translate('sessions.email_already_exists.5')}</li>\n              <li className=\"spacer-top\">{translate('sessions.email_already_exists.6')}</li>\n            </ul>\n          </Alert>\n\n          <div className=\"big-spacer-top text-right\">\n            <a\n              className=\"button js-continue\"\n              href={`${getBaseUrl()}/sessions/init/${authError.provider}?allowEmailShift=true`}>\n              {translate('continue')}\n            </a>\n            <a className=\"big-spacer-left js-cancel\" href={getBaseUrl() + '/'}>\n              {translate('cancel')}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}