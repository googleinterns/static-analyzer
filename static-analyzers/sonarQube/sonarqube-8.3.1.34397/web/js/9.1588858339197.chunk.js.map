{"version":3,"sources":["webpack:///./node_modules/mdast-util-to-hast/lib/wrap.js","webpack:///./node_modules/markdown-escapes/index.js","webpack:///./node_modules/longest-streak/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/one.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/revert.js","webpack:///./node_modules/mdast-util-toc/lib/to-expression.js","webpack:///./node_modules/mdast-util-compact/index.js","webpack:///./node_modules/mdast-util-compact/node_modules/unist-util-visit/index.js","webpack:///./node_modules/mdast-util-compact/node_modules/unist-util-visit-parents/index.js","webpack:///./node_modules/mdast-util-compact/node_modules/unist-util-is/convert.js","webpack:///./node_modules/markdown-table/index.js","webpack:///./node_modules/mdast-util-to-string/index.js","webpack:///./node_modules/mdast-util-to-hast/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/index.js","webpack:///./node_modules/mdast-util-to-hast/node_modules/unist-util-visit/index.js","webpack:///./node_modules/mdast-util-to-hast/node_modules/unist-util-visit-parents/index.js","webpack:///./node_modules/mdast-util-to-hast/node_modules/unist-util-is/convert.js","webpack:///./node_modules/mdast-util-definitions/index.js","webpack:///./node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js","webpack:///./node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js","webpack:///./node_modules/mdast-util-definitions/node_modules/unist-util-is/convert.js","webpack:///./node_modules/mdast-util-to-hast/lib/footer.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack:///./node_modules/mdast-util-toc/index.js","webpack:///./node_modules/mdast-util-toc/lib/index.js","webpack:///./node_modules/mdast-util-toc/lib/search.js","webpack:///./node_modules/mdast-util-toc/node_modules/mdast-util-to-string/index.js","webpack:///./node_modules/mdast-util-toc/node_modules/github-slugger/index.js","webpack:///./node_modules/mdast-util-toc/lib/contents.js","webpack:///./node_modules/mdast-util-to-hast/lib/all.js"],"names":["module","exports","nodes","loose","result","index","length","push","u","escapes","defaults","gfm","concat","commonmark","options","settings","default","value","character","expected","count","maximum","Error","String","indexOf","h","node","parent","type","fn","own","call","handlers","unknown","all","hasOwnProperty","data","text","augment","items","props","name","ordered","start","properties","className","wrap","footnoteOrder","identifier","position","id","href","label","contents","head","tail","subtype","referenceType","suffix","alt","unshift","RegExp","visit","mergeable","end","line","column","tree","child","siblings","children","prev","splice","visitParents","CONTINUE","SKIP","EXIT","test","visitor","reverse","parents","convert","is","one","subresult","toResult","step","Boolean","typeFactory","ok","anyFactory","matchesFactory","key","tests","checks","results","convertAll","apply","this","arguments","table","align","rule","rows","row","cells","size","spacing","before","after","delimiter","alignment","calculateStringLength","stringLength","lengthNoop","cellCount","rowIndex","rowLength","sizes","space","verticalBar","dotindex","pad","split","charAt","toLowerCase","stringify","dotRe","join","lastDotRe","Array","match","exec","toString","title","valueOf","map","dangerous","allowDangerousHTML","footnoteById","definition","definitions","xtend","toUpperCase","left","right","ctx","hName","tagName","hProperties","hChildren","generated","factory","foot","footer","cache","normalise","getterFactory","gather","def","backReference","content","listItems","url","thematicBreak","list","ignore","blockquote","break","code","delete","emphasis","footnoteReference","footnote","heading","html","imageReference","image","inlineCode","linkReference","link","listItem","paragraph","root","strong","toml","yaml","footnoteDefinition","detab","lang","depth","revert","src","normalize","undefined","collapse","container","raw","spread","listItemLoose","listLoose","checked","disabled","pos","out","cell","alignLength","slice","trimLines","toExpression","search","tight","prefix","endIndex","expression","headingIndex","closingIndex","lookingForToc","maxDepth","skip","slugs","reset","slug","isClosingHeading","isOpeningHeading","values","emoji","BananaSlug","Object","whitespace","specials","slugger","string","maintainCase","trim","replace","prototype","originalSlug","occurrences","create","extend","minDepth","Infinity","insert","entry","item","last","copy"],"mappings":"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","file":"js/9.1588858339197.chunk.js","sourcesContent":["'use strict'\n\nmodule.exports = wrap\n\nvar u = require('unist-builder')\n\n// Wrap `nodes` with line feeds between each entry.\n// Optionally adds line feeds at the start and end.\nfunction wrap(nodes, loose) {\n  var result = []\n  var index = -1\n  var length = nodes.length\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < length) {\n    if (index) {\n      result.push(u('text', '\\n'))\n    }\n\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length !== 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = escapes\n\nvar defaults = [\n  '\\\\',\n  '`',\n  '*',\n  '{',\n  '}',\n  '[',\n  ']',\n  '(',\n  ')',\n  '#',\n  '+',\n  '-',\n  '.',\n  '!',\n  '_',\n  '>'\n]\n\nvar gfm = defaults.concat(['~', '|'])\n\nvar commonmark = gfm.concat([\n  '\\n',\n  '\"',\n  '$',\n  '%',\n  '&',\n  \"'\",\n  ',',\n  '/',\n  ':',\n  ';',\n  '<',\n  '=',\n  '?',\n  '@',\n  '^'\n])\n\nescapes.default = defaults\nescapes.gfm = gfm\nescapes.commonmark = commonmark\n\n// Get markdown escapes.\nfunction escapes(options) {\n  var settings = options || {}\n\n  if (settings.commonmark) {\n    return commonmark\n  }\n\n  return settings.gfm ? gfm : defaults\n}\n","'use strict'\n\nmodule.exports = longestStreak\n\n// Get the count of the longest repeating streak of `character` in `value`.\nfunction longestStreak(value, character) {\n  var count = 0\n  var maximum = 0\n  var expected\n  var index\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  value = String(value)\n  index = value.indexOf(character)\n  expected = index\n\n  while (index !== -1) {\n    count++\n\n    if (index === expected) {\n      if (count > maximum) {\n        maximum = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = value.indexOf(character, expected)\n  }\n\n  return maximum\n}\n","'use strict'\n\nmodule.exports = one\n\nvar u = require('unist-builder')\nvar all = require('./all')\n\nvar own = {}.hasOwnProperty\n\n// Transform an unknown node.\nfunction unknown(h, node) {\n  if (text(node)) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n// Visit a node.\nfunction one(h, node, parent) {\n  var type = node && node.type\n  var fn = own.call(h.handlers, type) ? h.handlers[type] : null\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n// Check if the node should be renderered as a text node.\nfunction text(node) {\n  var data = node.data || {}\n\n  if (\n    own.call(data, 'hName') ||\n    own.call(data, 'hProperties') ||\n    own.call(data, 'hChildren')\n  ) {\n    return false\n  }\n\n  return 'value' in node\n}\n","'use strict'\n\nmodule.exports = thematicBreak\n\nfunction thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","'use strict'\n\nmodule.exports = list\n\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction list(h, node) {\n  var props = {}\n  var name = node.ordered ? 'ol' : 'ul'\n  var items\n  var index = -1\n  var length\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  items = all(h, node)\n  length = items.length\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < length) {\n    if (\n      items[index].properties.className &&\n      items[index].properties.className.indexOf('task-list-item') !== -1\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","'use strict'\n\nmodule.exports = footnoteReference\n\nvar u = require('unist-builder')\n\nfunction footnoteReference(h, node) {\n  var footnoteOrder = h.footnoteOrder\n  var identifier = String(node.identifier)\n\n  if (footnoteOrder.indexOf(identifier) === -1) {\n    footnoteOrder.push(identifier)\n  }\n\n  return h(node.position, 'sup', {id: 'fnref-' + identifier}, [\n    h(node, 'a', {href: '#fn-' + identifier, className: ['footnote-ref']}, [\n      u('text', node.label || identifier)\n    ])\n  ])\n}\n","'use strict'\n\nmodule.exports = revert\n\nvar u = require('unist-builder')\nvar all = require('./all')\n\n// Return the content of a reference without definition as Markdown.\nfunction revert(h, node) {\n  var subtype = node.referenceType\n  var suffix = ']'\n  var contents\n  var head\n  var tail\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  contents = all(h, node)\n  head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","'use strict'\n\nmodule.exports = toExpression\n\n// Transform a string into an applicable expression.\nfunction toExpression(value) {\n  return new RegExp('^(' + value + ')$', 'i')\n}\n","'use strict'\n\nvar visit = require('unist-util-visit')\n\nmodule.exports = compact\n\n// Make an mdast tree compact by merging adjacent text nodes.\nfunction compact(tree, commonmark) {\n  visit(tree, visitor)\n\n  return tree\n\n  function visitor(child, index, parent) {\n    var siblings = parent ? parent.children : []\n    var prev = index && siblings[index - 1]\n\n    if (\n      prev &&\n      child.type === prev.type &&\n      mergeable(prev, commonmark) &&\n      mergeable(child, commonmark)\n    ) {\n      if (child.value) {\n        prev.value += child.value\n      }\n\n      if (child.children) {\n        prev.children = prev.children.concat(child.children)\n      }\n\n      siblings.splice(index, 1)\n\n      if (prev.position && child.position) {\n        prev.position.end = child.position.end\n      }\n\n      return index\n    }\n  }\n}\n\nfunction mergeable(node, commonmark) {\n  var start\n  var end\n\n  if (node.type === 'text') {\n    if (!node.position) {\n      return true\n    }\n\n    start = node.position.start\n    end = node.position.end\n\n    // Only merge nodes which occupy the same size as their `value`.\n    return (\n      start.line !== end.line || end.column - start.column === node.value.length\n    )\n  }\n\n  return commonmark && node.type === 'blockquote'\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result = []\n    var subresult\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents))\n\n      if (result[0] === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var result\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents)\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nmodule.exports = markdownTable\n\nvar dotRe = /\\./\nvar lastDotRe = /\\.[^.]*$/\n\n// Characters.\nvar space = ' '\nvar lineFeed = '\\n'\nvar dash = '-'\nvar dot = '.'\nvar colon = ':'\nvar lowercaseC = 'c'\nvar lowercaseL = 'l'\nvar lowercaseR = 'r'\nvar verticalBar = '|'\n\nvar minCellSize = 3\n\n// Create a table from a matrix of strings.\nfunction markdownTable(table, options) {\n  var settings = options || {}\n  var delimiter = settings.delimiter\n  var start = settings.start\n  var end = settings.end\n  var alignment = settings.align\n  var calculateStringLength = settings.stringLength || lengthNoop\n  var cellCount = 0\n  var rowIndex = -1\n  var rowLength = table.length\n  var sizes = []\n  var align\n  var rule\n  var rows\n  var row\n  var cells\n  var index\n  var position\n  var size\n  var value\n  var spacing\n  var before\n  var after\n\n  alignment = alignment ? alignment.concat() : []\n\n  if (delimiter === null || delimiter === undefined) {\n    delimiter = space + verticalBar + space\n  }\n\n  if (start === null || start === undefined) {\n    start = verticalBar + space\n  }\n\n  if (end === null || end === undefined) {\n    end = space + verticalBar\n  }\n\n  while (++rowIndex < rowLength) {\n    row = table[rowIndex]\n\n    index = -1\n\n    if (row.length > cellCount) {\n      cellCount = row.length\n    }\n\n    while (++index < cellCount) {\n      position = row[index] ? dotindex(row[index]) : null\n\n      if (!sizes[index]) {\n        sizes[index] = minCellSize\n      }\n\n      if (position > sizes[index]) {\n        sizes[index] = position\n      }\n    }\n  }\n\n  if (typeof alignment === 'string') {\n    alignment = pad(cellCount, alignment).split('')\n  }\n\n  // Make sure only valid alignments are used.\n  index = -1\n\n  while (++index < cellCount) {\n    align = alignment[index]\n\n    if (typeof align === 'string') {\n      align = align.charAt(0).toLowerCase()\n    }\n\n    if (\n      align !== lowercaseL &&\n      align !== lowercaseR &&\n      align !== lowercaseC &&\n      align !== dot\n    ) {\n      align = ''\n    }\n\n    alignment[index] = align\n  }\n\n  rowIndex = -1\n  rows = []\n\n  while (++rowIndex < rowLength) {\n    row = table[rowIndex]\n\n    index = -1\n    cells = []\n\n    while (++index < cellCount) {\n      value = row[index]\n\n      value = stringify(value)\n\n      if (alignment[index] === dot) {\n        position = dotindex(value)\n\n        size =\n          sizes[index] +\n          (dotRe.test(value) ? 0 : 1) -\n          (calculateStringLength(value) - position)\n\n        cells[index] = value + pad(size - 1)\n      } else {\n        cells[index] = value\n      }\n    }\n\n    rows[rowIndex] = cells\n  }\n\n  sizes = []\n  rowIndex = -1\n\n  while (++rowIndex < rowLength) {\n    cells = rows[rowIndex]\n\n    index = -1\n\n    while (++index < cellCount) {\n      value = cells[index]\n\n      if (!sizes[index]) {\n        sizes[index] = minCellSize\n      }\n\n      size = calculateStringLength(value)\n\n      if (size > sizes[index]) {\n        sizes[index] = size\n      }\n    }\n  }\n\n  rowIndex = -1\n\n  while (++rowIndex < rowLength) {\n    cells = rows[rowIndex]\n\n    index = -1\n\n    if (settings.pad !== false) {\n      while (++index < cellCount) {\n        value = cells[index]\n\n        position = sizes[index] - (calculateStringLength(value) || 0)\n        spacing = pad(position)\n\n        if (alignment[index] === lowercaseR || alignment[index] === dot) {\n          value = spacing + value\n        } else if (alignment[index] === lowercaseC) {\n          position /= 2\n\n          if (position % 1 === 0) {\n            before = position\n            after = position\n          } else {\n            before = position + 0.5\n            after = position - 0.5\n          }\n\n          value = pad(before) + value + pad(after)\n        } else {\n          value += spacing\n        }\n\n        cells[index] = value\n      }\n    }\n\n    rows[rowIndex] = cells.join(delimiter)\n  }\n\n  if (settings.rule !== false) {\n    index = -1\n    rule = []\n\n    while (++index < cellCount) {\n      // When `pad` is false, make the rule the same size as the first row.\n      if (settings.pad === false) {\n        value = table[0][index]\n        spacing = calculateStringLength(stringify(value))\n        spacing = spacing > minCellSize ? spacing : minCellSize\n      } else {\n        spacing = sizes[index]\n      }\n\n      align = alignment[index]\n\n      // When `align` is left, don't add colons.\n      value = align === lowercaseR || align === '' ? dash : colon\n      value += pad(spacing - 2, dash)\n      value += align !== lowercaseL && align !== '' ? colon : dash\n\n      rule[index] = value\n    }\n\n    rows.splice(1, 0, rule.join(delimiter))\n  }\n\n  return start + rows.join(end + lineFeed + start) + end\n}\n\nfunction stringify(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n// Get the length of `value`.\nfunction lengthNoop(value) {\n  return String(value).length\n}\n\n// Get a string consisting of `length` `character`s.\nfunction pad(length, character) {\n  return new Array(length + 1).join(character || space)\n}\n\n// Get the position of the last dot in `value`.\nfunction dotindex(value) {\n  var match = lastDotRe.exec(value)\n\n  return match ? match.index + 1 : value.length\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.  If the node itself does not expose\n// plain-text fields, `toString` will recursivly try its children.\nfunction toString(node) {\n  return (\n    valueOf(node) ||\n    (node.children && node.children.map(toString).join('')) ||\n    ''\n  )\n}\n\n// Get the value of `node`.  Checks, `value`, `alt`, and `title`, in that order.\nfunction valueOf(node) {\n  return (\n    (node && node.value ? node.value : node.alt ? node.alt : node.title) || ''\n  )\n}\n","'use strict'\nmodule.exports = require('./lib')\n","'use strict'\n\nmodule.exports = toHast\n\nvar xtend = require('xtend')\nvar u = require('unist-builder')\nvar visit = require('unist-util-visit')\nvar position = require('unist-util-position')\nvar generated = require('unist-util-generated')\nvar definitions = require('mdast-util-definitions')\nvar one = require('./one')\nvar footer = require('./footer')\nvar handlers = require('./handlers')\n\nvar own = {}.hasOwnProperty\n\n// Factory to transform.\nfunction factory(tree, options) {\n  var settings = options || {}\n  var dangerous = settings.allowDangerousHTML\n  var footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree, settings)\n  h.footnoteById = footnoteById\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = xtend(handlers, settings.handlers || {})\n\n  visit(tree, 'footnoteDefinition', onfootnotedefinition)\n\n  return h\n\n  // Finalise the created `right`, a hast node, from `left`, an mdast node.\n  function augment(left, right) {\n    var data\n    var ctx\n\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left) {\n      data = left.data\n\n      if (right.type === 'element' && data.hName) {\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = xtend(right.properties, data.hProperties)\n      }\n\n      if (right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    ctx = left && left.position ? left : {position: left}\n\n    if (!generated(ctx)) {\n      right.position = {\n        start: position.start(ctx),\n        end: position.end(ctx)\n      }\n    }\n\n    return right\n  }\n\n  // Create an element for `node`.\n  function h(node, tagName, props, children) {\n    if (\n      (children === undefined || children === null) &&\n      typeof props === 'object' &&\n      'length' in props\n    ) {\n      children = props\n      props = {}\n    }\n\n    return augment(node, {\n      type: 'element',\n      tagName: tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n\n  function onfootnotedefinition(definition) {\n    var id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8d48e57/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  }\n}\n\n// Transform `tree`, which is an mdast node, to a hast node.\nfunction toHast(tree, options) {\n  var h = factory(tree, options)\n  var node = one(h, tree)\n  var foot = footer(h)\n\n  if (foot) {\n    node.children = node.children.concat(u('text', '\\n'), foot)\n  }\n\n  return node\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result = []\n    var subresult\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents))\n\n      if (result[0] === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var result\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents)\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nvar visit = require('unist-util-visit')\n\nmodule.exports = getDefinitionFactory\n\nvar own = {}.hasOwnProperty\n\n// Get a definition in `node` by `identifier`.\nfunction getDefinitionFactory(node, options) {\n  return getterFactory(gather(node, options))\n}\n\n// Gather all definitions in `node`\nfunction gather(node, options) {\n  var cache = {}\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', options && options.commonmark ? commonmark : normal)\n\n  return cache\n\n  function commonmark(definition) {\n    var id = normalise(definition.identifier)\n    if (!own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  function normal(definition) {\n    cache[normalise(definition.identifier)] = definition\n  }\n}\n\n// Factory to get a node from the given definition-cache.\nfunction getterFactory(cache) {\n  return getter\n\n  // Get a node from the bound definition-cache.\n  function getter(identifier) {\n    var id = identifier && normalise(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\nfunction normalise(identifier) {\n  return identifier.toUpperCase()\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result = []\n    var subresult\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents))\n\n      if (result[0] === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var result\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents)\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nmodule.exports = generateFootnotes\n\nvar thematicBreak = require('./handlers/thematic-break')\nvar list = require('./handlers/list')\nvar wrap = require('./wrap')\n\nfunction generateFootnotes(h) {\n  var footnoteById = h.footnoteById\n  var footnoteOrder = h.footnoteOrder\n  var length = footnoteOrder.length\n  var index = -1\n  var listItems = []\n  var def\n  var backReference\n  var content\n  var tail\n\n  while (++index < length) {\n    def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    content = def.children.concat()\n    tail = content[content.length - 1]\n    backReference = {\n      type: 'link',\n      url: '#fnref-' + def.identifier,\n      data: {hProperties: {className: ['footnote-backref']}},\n      children: [{type: 'text', value: '↩'}]\n    }\n\n    if (!tail || tail.type !== 'paragraph') {\n      tail = {type: 'paragraph', children: []}\n      content.push(tail)\n    }\n\n    tail.children.push(backReference)\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn-' + def.identifier}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'div',\n    {className: ['footnotes']},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","'use strict'\n\nmodule.exports = {\n  blockquote: require('./blockquote'),\n  break: require('./break'),\n  code: require('./code'),\n  delete: require('./delete'),\n  emphasis: require('./emphasis'),\n  footnoteReference: require('./footnote-reference'),\n  footnote: require('./footnote'),\n  heading: require('./heading'),\n  html: require('./html'),\n  imageReference: require('./image-reference'),\n  image: require('./image'),\n  inlineCode: require('./inline-code'),\n  linkReference: require('./link-reference'),\n  link: require('./link'),\n  listItem: require('./list-item'),\n  list: require('./list'),\n  paragraph: require('./paragraph'),\n  root: require('./root'),\n  strong: require('./strong'),\n  table: require('./table'),\n  text: require('./text'),\n  thematicBreak: require('./thematic-break'),\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","'use strict'\n\nmodule.exports = blockquote\n\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","'use strict'\n\nmodule.exports = hardBreak\n\nvar u = require('unist-builder')\n\nfunction hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","'use strict'\n\nmodule.exports = code\n\nvar detab = require('detab')\nvar u = require('unist-builder')\n\nfunction code(h, node) {\n  var value = node.value ? detab(node.value + '\\n') : ''\n  var lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  var props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  return h(node.position, 'pre', [h(node, 'code', props, [u('text', value)])])\n}\n","'use strict'\n\nmodule.exports = strikethrough\n\nvar all = require('../all')\n\nfunction strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","'use strict'\n\nmodule.exports = emphasis\n\nvar all = require('../all')\n\nfunction emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","'use strict'\n\nmodule.exports = footnote\n\nvar footnoteReference = require('./footnote-reference')\n\nfunction footnote(h, node) {\n  var footnoteById = h.footnoteById\n  var footnoteOrder = h.footnoteOrder\n  var identifier = 1\n\n  while (identifier in footnoteById) {\n    identifier++\n  }\n\n  identifier = String(identifier)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier: identifier,\n    position: node.position\n  })\n}\n","'use strict'\n\nmodule.exports = heading\n\nvar all = require('../all')\n\nfunction heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","'use strict'\n\nmodule.exports = html\n\nvar u = require('unist-builder')\n\n// Return either a `raw` node in dangerous mode, otherwise nothing.\nfunction html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","'use strict'\n\nmodule.exports = imageReference\n\nvar normalize = require('mdurl/encode')\nvar revert = require('../revert')\n\nfunction imageReference(h, node) {\n  var def = h.definition(node.identifier)\n  var props\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","'use strict'\n\nvar normalize = require('mdurl/encode')\n\nmodule.exports = image\n\nfunction image(h, node) {\n  var props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","'use strict'\n\nmodule.exports = inlineCode\n\nvar collapse = require('collapse-white-space')\nvar u = require('unist-builder')\n\nfunction inlineCode(h, node) {\n  return h(node, 'code', [u('text', collapse(node.value))])\n}\n","'use strict'\n\nmodule.exports = linkReference\n\nvar normalize = require('mdurl/encode')\nvar revert = require('../revert')\nvar all = require('../all')\n\nfunction linkReference(h, node) {\n  var def = h.definition(node.identifier)\n  var props\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","'use strict'\n\nvar normalize = require('mdurl/encode')\nvar all = require('../all')\n\nmodule.exports = link\n\nfunction link(h, node) {\n  var props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","'use strict'\n\nmodule.exports = listItem\n\nvar u = require('unist-builder')\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction listItem(h, node, parent) {\n  var children = node.children\n  var head = children[0]\n  var raw = all(h, node)\n  var loose = parent ? listLoose(parent) : listItemLoose(node)\n  var props = {}\n  var result\n  var container\n  var index\n  var length\n  var child\n\n  // Tight lists should not render `paragraph` nodes as `p` elements.\n  if (loose) {\n    result = raw\n  } else {\n    result = []\n    length = raw.length\n    index = -1\n\n    while (++index < length) {\n      child = raw[index]\n\n      if (child.tagName === 'p') {\n        result = result.concat(child.children)\n      } else {\n        result.push(child)\n      }\n    }\n  }\n\n  if (typeof node.checked === 'boolean') {\n    if (loose && (!head || head.type !== 'paragraph')) {\n      result.unshift(h(null, 'p', []))\n    }\n\n    container = loose ? result[0].children : result\n\n    if (container.length !== 0) {\n      container.unshift(u('text', ' '))\n    }\n\n    container.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  if (loose && result.length !== 0) {\n    result = wrap(result, true)\n  }\n\n  return h(node, 'li', props, result)\n}\n\nfunction listLoose(node) {\n  var loose = node.spread\n  var children = node.children\n  var length = children.length\n  var index = -1\n\n  while (!loose && ++index < length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return loose\n}\n\nfunction listItemLoose(node) {\n  var spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","'use strict'\n\nmodule.exports = paragraph\n\nvar all = require('../all')\n\nfunction paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","'use strict'\n\nmodule.exports = root\n\nvar u = require('unist-builder')\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction root(h, node) {\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","'use strict'\n\nmodule.exports = strong\n\nvar all = require('../all')\n\nfunction strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","'use strict'\n\nmodule.exports = table\n\nvar position = require('unist-util-position')\nvar wrap = require('../wrap')\nvar all = require('../all')\n\nfunction table(h, node) {\n  var rows = node.children\n  var index = rows.length\n  var align = node.align\n  var alignLength = align.length\n  var result = []\n  var pos\n  var row\n  var out\n  var name\n  var cell\n\n  while (index--) {\n    row = rows[index].children\n    name = index === 0 ? 'th' : 'td'\n    pos = alignLength\n    out = []\n\n    while (pos--) {\n      cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [\n        h(result[0].position, 'thead', wrap([result[0]], true)),\n        h(\n          {\n            start: position.start(result[1]),\n            end: position.end(result[result.length - 1])\n          },\n          'tbody',\n          wrap(result.slice(1), true)\n        )\n      ],\n      true\n    )\n  )\n}\n","'use strict'\n\nmodule.exports = text\n\nvar u = require('unist-builder')\nvar trimLines = require('trim-lines')\n\nfunction text(h, node) {\n  return h.augment(node, u('text', trimLines(node.value)))\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nmodule.exports = toc\n\nvar search = require('./search')\nvar contents = require('./contents')\nvar toExpression = require('./to-expression')\n\n// Get a TOC representation of `node`.\nfunction toc(node, options) {\n  var settings = options || {}\n  var heading = settings.heading ? toExpression(settings.heading) : null\n  var result = search(node, heading, settings)\n  var map = result.map\n\n  result.map =\n    map.length === 0 ? null : contents(map, settings.tight, settings.prefix)\n\n  // No given heading.\n  if (!heading) {\n    result.index = null\n    result.endIndex = null\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = search\n\nvar toString = require('mdast-util-to-string')\nvar visit = require('unist-util-visit')\nvar convert = require('unist-util-is/convert')\nvar slugs = require('github-slugger')()\nvar toExpression = require('./to-expression')\n\nvar heading = convert('heading')\n\n// Search a node for a location.\nfunction search(root, expression, settings) {\n  var length = root.children.length\n  var depth = null\n  var lookingForToc = expression !== null\n  var maxDepth = settings.maxDepth || 6\n  var skip = settings.skip ? toExpression(settings.skip) : null\n  var parents = convert(settings.parents || root)\n  var map = []\n  var headingIndex\n  var closingIndex\n\n  if (!lookingForToc) {\n    headingIndex = -1\n  }\n\n  slugs.reset()\n\n  // Visit all headings in `root`.  We `slug` all headings (to account for\n  // duplicates), but only create a TOC from top-level headings.\n  visit(root, 'heading', onheading)\n\n  if (headingIndex && !closingIndex) {\n    closingIndex = length + 1\n  }\n\n  if (headingIndex === undefined) {\n    headingIndex = -1\n    closingIndex = -1\n    map = []\n  }\n\n  return {index: headingIndex, endIndex: closingIndex, map: map}\n\n  function onheading(child, index, parent) {\n    var value = toString(child)\n    var id = child.data && child.data.hProperties && child.data.hProperties.id\n    var slug = slugs.slug(id || value)\n\n    if (!parents(parent)) {\n      return\n    }\n\n    if (lookingForToc) {\n      if (isClosingHeading(child, depth)) {\n        closingIndex = index\n        lookingForToc = false\n      }\n\n      if (isOpeningHeading(child, depth, expression)) {\n        headingIndex = index + 1\n        depth = child.depth\n      }\n    }\n\n    if (\n      !lookingForToc &&\n      value &&\n      child.depth <= maxDepth &&\n      (!skip || !skip.test(value))\n    ) {\n      map.push({\n        depth: child.depth,\n        children: child.children,\n        id: slug\n      })\n    }\n  }\n}\n\n// Check if `node` is the main heading.\nfunction isOpeningHeading(node, depth, expression) {\n  return depth === null && heading(node) && expression.test(toString(node))\n}\n\n// Check if `node` is the next heading.\nfunction isClosingHeading(node, depth) {\n  return depth && heading(node) && node.depth <= depth\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var length = values.length\n  var index = -1\n\n  while (++index < length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","var emoji = require('emoji-regex')\r\n\r\nmodule.exports = BananaSlug\r\n\r\nvar own = Object.hasOwnProperty\r\nvar whitespace = /\\s/g\r\nvar specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g\r\n\r\nfunction BananaSlug () {\r\n  var self = this\r\n\r\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\r\n\r\n  self.reset()\r\n}\r\n\r\n/**\r\n * Generate a unique slug.\r\n * @param  {string} value String of text to slugify\r\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\r\n * @return {string}       A unique slug string\r\n */\r\nBananaSlug.prototype.slug = function (value, maintainCase) {\r\n  var self = this\r\n  var slug = slugger(value, maintainCase === true)\r\n  var originalSlug = slug\r\n\r\n  while (own.call(self.occurrences, slug)) {\r\n    self.occurrences[originalSlug]++\r\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\r\n  }\r\n\r\n  self.occurrences[slug] = 0\r\n\r\n  return slug\r\n}\r\n\r\n/**\r\n * Reset - Forget all previous slugs\r\n * @return void\r\n */\r\nBananaSlug.prototype.reset = function () {\r\n  this.occurrences = Object.create(null)\r\n}\r\n\r\nfunction slugger (string, maintainCase) {\r\n  if (typeof string !== 'string') return ''\r\n  if (!maintainCase) string = string.toLowerCase()\r\n\r\n  return string.trim()\r\n    .replace(specials, '')\r\n    .replace(emoji(), '')\r\n    .replace(whitespace, '-')\r\n}\r\n\r\nBananaSlug.slug = slugger\r\n","'use strict'\n\nvar extend = require('extend')\n\nmodule.exports = contents\n\nvar LIST = 'list'\nvar LIST_ITEM = 'listItem'\nvar PARAGRAPH = 'paragraph'\nvar LINK = 'link'\nvar LINK_REFERENCE = 'linkReference'\n\n// Transform a list of heading objects to a markdown list.\nfunction contents(map, tight, prefix) {\n  var minDepth = Infinity\n  var index = -1\n  var length = map.length\n  var table\n\n  // Find minimum depth.\n  while (++index < length) {\n    if (map[index].depth < minDepth) {\n      minDepth = map[index].depth\n    }\n  }\n\n  // Normalize depth.\n  index = -1\n\n  while (++index < length) {\n    map[index].depth -= minDepth - 1\n  }\n\n  // Construct the main list.\n  table = list()\n\n  // Add TOC to list.\n  index = -1\n\n  while (++index < length) {\n    insert(map[index], table, tight, prefix)\n  }\n\n  return table\n}\n\n// Insert an entry into `parent`.\nfunction insert(entry, parent, tight, prefix) {\n  var children = parent.children\n  var length = children.length\n  var last = children[length - 1]\n  var index\n  var item\n\n  if (entry.depth === 1) {\n    item = listItem()\n\n    item.children.push({\n      type: PARAGRAPH,\n      children: [\n        {\n          type: LINK,\n          title: null,\n          url: '#' + (prefix || '') + entry.id,\n          children: all(entry.children)\n        }\n      ]\n    })\n\n    children.push(item)\n  } else if (last && last.type === LIST_ITEM) {\n    insert(entry, last, tight, prefix)\n  } else if (last && last.type === LIST) {\n    entry.depth--\n\n    insert(entry, last, tight, prefix)\n  } else if (parent.type === LIST) {\n    item = listItem()\n\n    insert(entry, item, tight, prefix)\n\n    children.push(item)\n  } else {\n    item = list()\n    entry.depth--\n\n    insert(entry, item, tight, prefix)\n\n    children.push(item)\n  }\n\n  // Properly style list-items with new lines.\n  parent.spread = !tight\n\n  if (parent.type === LIST && parent.spread) {\n    parent.spread = false\n    index = -1\n\n    while (++index < length) {\n      if (children[index].children.length > 1) {\n        parent.spread = true\n        break\n      }\n    }\n  }\n}\n\nfunction all(children) {\n  var result = []\n  var length = children.length\n  var index = -1\n\n  while (++index < length) {\n    result = result.concat(one(children[index]))\n  }\n\n  return result\n}\n\nfunction one(node) {\n  var copy\n\n  if (node.type === LINK || node.type === LINK_REFERENCE) {\n    return all(node.children)\n  }\n\n  copy = extend({}, node)\n\n  delete copy.children\n  delete copy.position\n\n  copy = extend(true, {}, copy)\n\n  if (node.children) {\n    copy.children = all(node.children)\n  }\n\n  return copy\n}\n\n// Create a list.\nfunction list() {\n  return {type: LIST, ordered: false, spread: false, children: []}\n}\n\n// Create a list item.\nfunction listItem() {\n  return {type: LIST_ITEM, spread: false, children: []}\n}\n","'use strict'\n\nmodule.exports = all\n\nvar trim = require('trim')\nvar one = require('./one')\n\nfunction all(h, parent) {\n  var nodes = parent.children || []\n  var length = nodes.length\n  var values = []\n  var index = -1\n  var result\n  var head\n\n  while (++index < length) {\n    result = one(h, nodes[index], parent)\n\n    if (result) {\n      if (index && nodes[index - 1].type === 'break') {\n        if (result.value) {\n          result.value = trim.left(result.value)\n        }\n\n        head = result.children && result.children[0]\n\n        if (head && head.value) {\n          head.value = trim.left(head.value)\n        }\n      }\n\n      values = values.concat(result)\n    }\n  }\n\n  return values\n}\n"],"sourceRoot":""}