{"version":3,"sources":["webpack:///./src/main/js/components/shared/Organization.tsx","webpack:///./src/main/js/apps/background-tasks/background-tasks.css?a006","webpack:///./src/main/js/apps/background-tasks/background-tasks.css","webpack:///./src/main/js/apps/background-tasks/utils.ts","webpack:///./src/main/js/apps/background-tasks/components/Footer.tsx","webpack:///./src/main/js/apps/background-tasks/components/NoWorkersSupportPopup.tsx","webpack:///./src/main/js/apps/background-tasks/components/WorkersForm.tsx","webpack:///./src/main/js/apps/background-tasks/components/Workers.tsx","webpack:///./src/main/js/apps/background-tasks/components/Header.tsx","webpack:///./src/main/js/apps/background-tasks/components/CurrentsFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/DateFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatusFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/TypesFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Search.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingCount.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatStillFailing.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stats.tsx","webpack:///./src/main/js/apps/background-tasks/components/ScannerContext.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stacktrace.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskActions.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskType.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskComponent.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDate.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDay.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskExecutionTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskId.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskStatus.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskSubmitter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Task.tsx","webpack:///./src/main/js/apps/background-tasks/components/Tasks.tsx","webpack:///./src/main/js/apps/background-tasks/components/BackgroundTasksApp.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/controls/DateInput.tsx","webpack:///./src/main/js/components/controls/DayPicker.css?d7e1","webpack:///./src/main/js/components/controls/DayPicker.css","webpack:///./src/main/js/components/controls/styles.css?5633","webpack:///./src/main/js/components/controls/styles.css","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/components/controls/DateRangeInput.tsx"],"names":["Organization","props","link","organization","shouldBeDisplayed","className","linkClassName","name","state","ownProps","organizationKey","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","format","int","suffix","Footer","tasks","length","NoWorkersSupportPopup","href","rel","target","mounted","handleClose","onClose","handleWorkerCountChange","option","setState","newWorkerCount","value","handleSubmit","event","preventDefault","submitting","then","workerCount","componentDidMount","this","componentWillUnmount","render","label","String","contentLabel","onRequestClose","onSubmit","clearable","onChange","searchable","Alert","variant","disabled","onClick","canSetWorkerCount","formOpen","loading","noSupportPopup","loadWorkers","closeForm","handleChangeClick","handleHelpClick","stopPropagation","toggleNoSupportPopup","show","undefined","overlay","fill","Header","component","to","pathname","handleChange","newValue","ONLY_CURRENTS","ALL","checked","onCheck","handleDateRangeChange","from","minSubmittedAt","maxExecutedAt","dateRange","ALL_EXCEPT_PENDING","PENDING","IN_PROGRESS","SUCCESS","FAILED","CANCELED","types","map","t","allOptions","handleStatusChange","status","onFilterUpdate","handleTypeChange","taskType","handleCurrentsChange","currents","handleDateChange","date","handleQueryChange","query","handleReset","renderSearchBox","placeholder","onReload","isSystemAdmin","canAdmin","onCancelAllPending","pendingCount","cancelButtonText","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","color","red","StatPendingTime","pendingTime","StatStillFailing","failingCount","onShowFailing","Stats","handleCloseClick","loadScannerContext","task","id","scannerContext","size","componentName","type","loadStacktrace","stacktrace","errorStacktrace","errorMessage","AnalysisWarningsModal","lazyLoadComponent","cancelTaskOpen","scannerContextOpen","stacktraceOpen","warningsOpen","handleFilterClick","onFilterTask","handleCancelTask","onCancelTask","handleCancelClick","handleShowScannerContextClick","closeCancelTask","closeScannerContext","handleShowStacktraceClick","closeStacktrace","handleShowWarningsClick","closeWarnings","canFilter","canCancel","canShowStacktrace","canShowWarnings","warningCount","hasScannerContext","ActionsDropdown","destructive","header","taskId","TaskType","TaskComponent","componentKey","branch","pullRequest","componentQualifier","qualifier","getTaskComponentUrl","title","style","marginLeft","marginRight","pullRequestTitle","TaskDate","baseDate","parsedDate","parsedBaseDate","diff","long","TaskDay","submittedAt","prevSubmittedAt","shouldDisplay","TaskExecutionTime","ms","ONE_SECOND","seconds","Math","floor","ONE_MINUTE","hours","minutes","formatDuration","TaskId","TaskStatus","inner","TaskSubmitter","submitter","Task","previousTask","submitterLogin","startedAt","executedAt","executionTimeMs","Tasks","index","key","stopLoading","loadTasks","parameters","filters","join","onlyCurrents","q","mapFiltersToParameters","location","componentId","Promise","all","organizations","filter","o","fetchOrganizations","failing","pending","handleFilterUpdate","nextState","nextQuery","Object","keys","forEach","router","nextTask","newTask","handleFilterTask","handleShowFailing","handleCancelAllPending","loadTasksDebounced","componentDidUpdate","prevProps","Suggestions","suggestions","defer","mapDispatchToProps","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","DayPicker","focus","input","openCalendar","handleResetClick","closeCalendar","currentMonth","Date","lastHovered","open","handleDayClick","day","modifiers","handleDayMouseEnter","handleCurrentMonthChange","handleCurrentYearChange","handlePreviousMonthClick","handleNextMonthClick","highlightFrom","highlightTo","minDate","after","maxDate","months","years","getFullYear","selectedDays","lastHoveredOrValue","highlighted","weekdaysLong","weekdaysShort","onClickOutside","InputWrapper","inputClassName","innerRef","node","onFocus","readOnly","iconProps","month","getMonth","year","captionElement","NullComponent","disabledDays","before","firstDayOfWeek","navbarElement","onDayClick","onDayMouseEnter","intl","formattedValue","formatDate","other","ref","getAnalysisStatus","data","catch","getActivity","getStatus","assign","getTask","additionalFields","r","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","getWorkers","setWorkerCount","count","handleFromChange","setTimeout","toDateInput","handleToChange","element"],"mappings":"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","file":"js/342.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { areThereCustomOrganizations, getOrganizationByKey, Store } from '../../store/rootReducer';\nimport OrganizationLink from '../ui/OrganizationLink';\n\ninterface OwnProps {\n  organizationKey: string;\n}\n\ninterface Props {\n  link?: boolean;\n  linkClassName?: string;\n  organization: { key: string; name: string } | null;\n  shouldBeDisplayed?: boolean;\n}\n\nfunction Organization(props: Props) {\n  const { link = true, organization, shouldBeDisplayed } = props;\n\n  if (!shouldBeDisplayed || !organization) {\n    return null;\n  }\n\n  return (\n    <span>\n      {link ? (\n        <OrganizationLink className={props.linkClassName} organization={organization}>\n          {organization.name}\n        </OrganizationLink>\n      ) : (\n        organization.name\n      )}\n      <span className=\"slash-separator\" />\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps) => ({\n  organization: getOrganizationByKey(state, ownProps.organizationKey),\n  shouldBeDisplayed: areThereCustomOrganizations(state)\n});\n\nexport default connect(mapStateToProps)(Organization);\n\nexport const UnconnectedOrganization = Organization;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".bt-search-form{display:flex;align-items:flex-end}.bt-search-form>li+li{margin-left:16px}.bt-search-form-label{margin-bottom:4px}.bt-search-form-field{padding:4px 0}.bt-search-form-large{flex:1}.bt-workers-warning-icon{margin-top:5px}.emphasised-measure{font-size:24px;font-weight:300}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { ALL_TYPES, CURRENTS, STATUSES } from './constants';\n\nexport interface Query {\n  currents: string;\n  maxExecutedAt?: Date;\n  minSubmittedAt?: Date;\n  query: string;\n  status: string;\n  taskType: string;\n}\n\nexport function updateTask(tasks: T.Task[], newTask: T.Task) {\n  return tasks.map(task => (task.id === newTask.id ? newTask : task));\n}\n\nexport function mapFiltersToParameters(filters: Partial<Query> = {}) {\n  const parameters: any = {};\n\n  if (filters.status === STATUSES.ALL) {\n    parameters.status = [\n      STATUSES.PENDING,\n      STATUSES.IN_PROGRESS,\n      STATUSES.SUCCESS,\n      STATUSES.FAILED,\n      STATUSES.CANCELED\n    ].join();\n  } else if (filters.status === STATUSES.ALL_EXCEPT_PENDING) {\n    parameters.status = [\n      STATUSES.IN_PROGRESS,\n      STATUSES.SUCCESS,\n      STATUSES.FAILED,\n      STATUSES.CANCELED\n    ].join();\n  } else {\n    parameters.status = filters.status;\n  }\n\n  if (filters.taskType !== ALL_TYPES) {\n    parameters.type = filters.taskType;\n  }\n\n  if (filters.currents !== CURRENTS.ALL) {\n    parameters.onlyCurrents = true;\n  }\n\n  if (filters.minSubmittedAt) {\n    parameters.minSubmittedAt = toShortNotSoISOString(filters.minSubmittedAt);\n  }\n\n  if (filters.maxExecutedAt) {\n    parameters.maxExecutedAt = toShortNotSoISOString(filters.maxExecutedAt);\n  }\n\n  if (filters.query) {\n    parameters.q = filters.query;\n  }\n\n  return parameters;\n}\n\nconst ONE_SECOND = 1000;\nconst ONE_MINUTE = 60 * ONE_SECOND;\nconst ONE_HOUR = 60 * ONE_MINUTE;\n\nfunction format(int: number, suffix: string) {\n  return `${int}${suffix}`;\n}\n\nexport function formatDuration(value: number | undefined) {\n  if (!value) {\n    return '';\n  }\n  if (value < ONE_SECOND) {\n    return format(value, 'ms');\n  } else if (value < ONE_SECOND * 10) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    const ms = value - seconds * ONE_SECOND;\n    return seconds + '.' + format(ms, 's');\n  } else if (value < ONE_MINUTE) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    return format(seconds, 's');\n  } else if (value < ONE_MINUTE * 10) {\n    const minutes = Math.floor(value / ONE_MINUTE);\n    const seconds = Math.floor((value - minutes * ONE_MINUTE) / ONE_SECOND);\n    return format(minutes, 'min') + ' ' + format(seconds, 's');\n  }\n  const hours = Math.floor(value / ONE_HOUR);\n  const minutes = Math.floor((value - hours * ONE_HOUR) / ONE_MINUTE);\n  return format(hours, 'h') + ' ' + format(minutes, 'min');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nconst LIMIT = 1000;\n\ninterface Props {\n  tasks: T.Task[];\n}\n\nexport default function Footer({ tasks }: Props) {\n  if (tasks.length < LIMIT) {\n    return null;\n  }\n\n  return (\n    <footer className=\"spacer-top note text-center\">\n      {translateWithParameters('max_results_reached', LIMIT)}\n    </footer>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function NoWorkersSupportPopup() {\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        <strong>{translate('background_tasks.add_more_workers')}</strong>\n      </p>\n      <p className=\"big-spacer-bottom markdown\">\n        {translate('background_tasks.add_more_workers.text')}\n      </p>\n      <p>\n        <a\n          href=\"https://redirect.sonarsource.com/editions/enterprise.html\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('learn_more')}\n        </a>\n      </p>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setWorkerCount } from '../../../api/ce';\n\nconst MAX_WORKERS = 10;\n\ninterface Props {\n  onClose: (newWorkerCount?: number) => void;\n  workerCount: number;\n}\n\ninterface State {\n  newWorkerCount: number;\n  submitting: boolean;\n}\n\nexport default class WorkersForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newWorkerCount: props.workerCount,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  handleWorkerCountChange = (option: { value: number }) =>\n    this.setState({ newWorkerCount: option.value });\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    const { newWorkerCount } = this.state;\n    setWorkerCount(newWorkerCount).then(\n      () => {\n        if (this.mounted) {\n          this.props.onClose(newWorkerCount);\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ submitting: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const options = [];\n    for (let i = 1; i <= MAX_WORKERS; i++) {\n      options.push({ label: String(i), value: i });\n    }\n\n    return (\n      <Modal\n        contentLabel={translate('background_tasks.change_number_of_workers')}\n        onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{translate('background_tasks.change_number_of_workers')}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <Select\n              className=\"input-tiny spacer-top\"\n              clearable={false}\n              onChange={this.handleWorkerCountChange}\n              options={options}\n              searchable={false}\n              value={this.state.newWorkerCount}\n            />\n            <Alert className=\"big-spacer-top\" variant=\"info\">\n              {translate('background_tasks.change_number_of_workers.hint')}\n            </Alert>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              {this.state.submitting && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={this.state.submitting}>{translate('save')}</SubmitButton>\n              <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertWarnIcon from 'sonar-ui-common/components/icons/AlertWarnIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getWorkers } from '../../../api/ce';\nimport NoWorkersSupportPopup from './NoWorkersSupportPopup';\nimport WorkersForm from './WorkersForm';\n\ninterface State {\n  canSetWorkerCount: boolean;\n  formOpen: boolean;\n  loading: boolean;\n  noSupportPopup: boolean;\n  workerCount: number;\n}\n\nexport default class Workers extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    canSetWorkerCount: false,\n    formOpen: false,\n    loading: true,\n    noSupportPopup: false,\n    workerCount: 1\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadWorkers();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadWorkers = () => {\n    this.setState({ loading: true });\n    getWorkers().then(\n      ({ canSetWorkerCount, value }) => {\n        if (this.mounted) {\n          this.setState({\n            canSetWorkerCount,\n            loading: false,\n            workerCount: value\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  closeForm = (newWorkerCount?: number) =>\n    newWorkerCount\n      ? this.setState({ formOpen: false, workerCount: newWorkerCount })\n      : this.setState({ formOpen: false });\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  handleHelpClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggleNoSupportPopup();\n  };\n\n  toggleNoSupportPopup = (show?: boolean) => {\n    if (show !== undefined) {\n      this.setState({ noSupportPopup: show });\n    } else {\n      this.setState(state => ({ noSupportPopup: !state.noSupportPopup }));\n    }\n  };\n\n  render() {\n    const { canSetWorkerCount, formOpen, loading, workerCount } = this.state;\n\n    return (\n      <div className=\"display-flex-center\">\n        {!loading && workerCount > 1 && (\n          <Tooltip overlay={translate('background_tasks.number_of_workers.warning')}>\n            <span className=\"display-inline-flex-center little-spacer-right\">\n              <AlertWarnIcon fill=\"#d3d3d3\" />\n            </span>\n          </Tooltip>\n        )}\n\n        <span className=\"text-middle\">\n          {translate('background_tasks.number_of_workers')}\n\n          {loading ? (\n            <i className=\"spinner little-spacer-left\" />\n          ) : (\n            <strong className=\"little-spacer-left\">{workerCount}</strong>\n          )}\n        </span>\n\n        {!loading && canSetWorkerCount && (\n          <Tooltip overlay={translate('background_tasks.change_number_of_workers')}>\n            <EditButton\n              className=\"js-edit button-small spacer-left\"\n              onClick={this.handleChangeClick}\n            />\n          </Tooltip>\n        )}\n\n        {!loading && !canSetWorkerCount && (\n          <HelpTooltip className=\"spacer-left\" overlay={<NoWorkersSupportPopup />} />\n        )}\n\n        {formOpen && <WorkersForm onClose={this.closeForm} workerCount={this.state.workerCount} />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Workers from './Workers';\n\ninterface Props {\n  component?: any;\n}\n\nexport default function Header(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('background_tasks.page')}</h1>\n      {!props.component && (\n        <div className=\"page-actions\">\n          <Workers />\n        </div>\n      )}\n      <p className=\"page-description\">\n        {translate('background_tasks.page.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/analysis/background-tasks/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { CURRENTS } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value: string) => void;\n}\n\nexport default class CurrentsFilter extends React.PureComponent<Props> {\n  handleChange = (value: boolean) => {\n    const newValue = value ? CURRENTS.ONLY_CURRENTS : CURRENTS.ALL;\n    this.props.onChange(newValue);\n  };\n\n  render() {\n    const checked = this.props.value === CURRENTS.ONLY_CURRENTS;\n    return (\n      <div className=\"bt-search-form-field\">\n        <Checkbox checked={checked} onCheck={this.handleChange}>\n          <span className=\"little-spacer-left\">{translate('yes')}</span>\n        </Checkbox>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DageRangeInput from '../../../components/controls/DateRangeInput';\n\ninterface Props {\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  onChange: (x: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => void;\n}\n\nexport default class DateFilter extends React.PureComponent<Props> {\n  handleDateRangeChange = ({ from, to }: { from?: Date; to?: Date }) => {\n    this.props.onChange({ minSubmittedAt: from, maxExecutedAt: to });\n  };\n\n  render() {\n    const dateRange = { from: this.props.minSubmittedAt, to: this.props.maxExecutedAt };\n    return (\n      <div className=\"nowrap\">\n        <DageRangeInput onChange={this.handleDateRangeChange} value={dateRange} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value?: string) => void;\n}\n\nexport default class StatusFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      { value: STATUSES.ALL, label: translate('background_task.status.ALL') },\n      {\n        value: STATUSES.ALL_EXCEPT_PENDING,\n        label: translate('background_task.status.ALL_EXCEPT_PENDING')\n      },\n      { value: STATUSES.PENDING, label: translate('background_task.status.PENDING') },\n      { value: STATUSES.IN_PROGRESS, label: translate('background_task.status.IN_PROGRESS') },\n      { value: STATUSES.SUCCESS, label: translate('background_task.status.SUCCESS') },\n      { value: STATUSES.FAILED, label: translate('background_task.status.FAILED') },\n      { value: STATUSES.CANCELED, label: translate('background_task.status.CANCELED') }\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={options}\n        searchable={false}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALL_TYPES } from '../constants';\n\ninterface Props {\n  value: string;\n  onChange: Function;\n  types: string[];\n}\n\nexport default class TypesFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value, types } = this.props;\n    const options = types.map(t => {\n      return {\n        value: t,\n        label: translate('background_task.type', t)\n      };\n    });\n\n    const allOptions = [\n      { value: ALL_TYPES, label: translate('background_task.type.ALL') },\n      ...options\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={allOptions}\n        searchable={false}\n        value={value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DEFAULT_FILTERS } from '../constants';\nimport { Query } from '../utils';\nimport CurrentsFilter from './CurrentsFilter';\nimport DateFilter from './DateFilter';\nimport StatusFilter from './StatusFilter';\nimport TypesFilter from './TypesFilter';\n\ninterface Props {\n  component?: unknown;\n  currents: string;\n  loading: boolean;\n  onFilterUpdate: (changes: Partial<Query>) => void;\n  onReload: () => void;\n  query: string;\n  status: string;\n  taskType: string;\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  types: string[];\n}\n\nexport default class Search extends React.PureComponent<Props> {\n  handleStatusChange = (status: string) => {\n    this.props.onFilterUpdate({ status });\n  };\n\n  handleTypeChange = (taskType: string) => {\n    this.props.onFilterUpdate({ taskType });\n  };\n\n  handleCurrentsChange = (currents: string) => {\n    this.props.onFilterUpdate({ currents });\n  };\n\n  handleDateChange = (date: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => {\n    this.props.onFilterUpdate(date);\n  };\n\n  handleQueryChange = (query: string) => {\n    this.props.onFilterUpdate({ query });\n  };\n\n  handleReset = () => {\n    this.props.onFilterUpdate(DEFAULT_FILTERS);\n  };\n\n  renderSearchBox() {\n    const { component, query } = this.props;\n\n    if (component) {\n      // do not render search form on the project-level page\n      return null;\n    }\n\n    return (\n      <li className=\"bt-search-form-large\">\n        <SearchBox\n          onChange={this.handleQueryChange}\n          placeholder={translate('background_tasks.search_by_task_or_component')}\n          value={query}\n        />\n      </li>\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      component,\n      types,\n      status,\n      taskType,\n      currents,\n      minSubmittedAt,\n      maxExecutedAt\n    } = this.props;\n\n    return (\n      <section className=\"big-spacer-top big-spacer-bottom\">\n        <ul className=\"bt-search-form\">\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('status')}</h6>\n            <StatusFilter onChange={this.handleStatusChange} value={status} />\n          </li>\n          {types.length > 1 && (\n            <li>\n              <h6 className=\"bt-search-form-label\">{translate('type')}</h6>\n              <TypesFilter onChange={this.handleTypeChange} types={types} value={taskType} />\n            </li>\n          )}\n          {!component && (\n            <li>\n              <h6 className=\"bt-search-form-label\">\n                {translate('background_tasks.currents_filter.ONLY_CURRENTS')}\n              </h6>\n              <CurrentsFilter onChange={this.handleCurrentsChange} value={currents} />\n            </li>\n          )}\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('date')}</h6>\n            <DateFilter\n              maxExecutedAt={maxExecutedAt}\n              minSubmittedAt={minSubmittedAt}\n              onChange={this.handleDateChange}\n            />\n          </li>\n\n          {this.renderSearchBox()}\n\n          <li className=\"nowrap\">\n            <Button className=\"js-reload\" disabled={loading} onClick={this.props.onReload}>\n              {translate('reload')}\n            </Button>{' '}\n            <Button disabled={loading} onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          </li>\n        </ul>\n      </section>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getAppState, Store } from '../../../store/rootReducer';\n\nexport interface Props {\n  isSystemAdmin?: boolean;\n  onCancelAllPending: () => void;\n  pendingCount?: number;\n}\n\nexport function StatPendingCount({ isSystemAdmin, onCancelAllPending, pendingCount }: Props) {\n  if (pendingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span>\n      <span className=\"emphasised-measure\">{pendingCount}</span>\n      <span className=\"little-spacer-left display-inline-flex-center\">\n        {translate('background_tasks.pending')}\n        {isSystemAdmin && pendingCount > 0 && (\n          <ConfirmButton\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_all_tasks.submit')}\n            isDestructive={true}\n            modalBody={translate('background_tasks.cancel_all_tasks.text')}\n            modalHeader={translate('background_tasks.cancel_all_tasks')}\n            onConfirm={onCancelAllPending}>\n            {({ onClick }) => (\n              <Tooltip overlay={translate('background_tasks.cancel_all_tasks')}>\n                <ClearButton className=\"little-spacer-left\" color={colors.red} onClick={onClick} />\n              </Tooltip>\n            )}\n          </ConfirmButton>\n        )}\n      </span>\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  isSystemAdmin: getAppState(state).canAdmin\n});\n\nexport default connect(mapStateToProps)(StatPendingCount);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\n\n// Do not display the pending time for values smaller than this threshold (in ms)\nconst MIN_PENDING_TIME_THRESHOLD = 1000;\n\nexport interface Props {\n  className?: string;\n  component?: Pick<T.Component, 'key'>;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function StatPendingTime({ className, pendingCount, pendingTime }: Props) {\n  if (!pendingTime || !pendingCount || pendingTime < MIN_PENDING_TIME_THRESHOLD) {\n    return null;\n  }\n  return (\n    <span className={className}>\n      <span className=\"emphasised-measure\">{formatMeasure(pendingTime, 'MILLISEC')}</span>\n      <span className=\"little-spacer-left\">{translate('background_tasks.pending_time')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.pending_time.description')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  failingCount?: number;\n  onShowFailing: () => void;\n}\n\nexport default function StatStillFailing({ className, failingCount, onShowFailing }: Props) {\n  if (failingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span className={className}>\n      {failingCount > 0 ? (\n        <ButtonLink className=\"emphasised-measure text-baseline\" onClick={onShowFailing}>\n          {failingCount}\n        </ButtonLink>\n      ) : (\n        <span className=\"emphasised-measure\">{failingCount}</span>\n      )}\n      <span className=\"little-spacer-left\">{translate('background_tasks.failures')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.failing_count')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport StatPendingCount from './StatPendingCount';\nimport StatPendingTime from './StatPendingTime';\nimport StatStillFailing from './StatStillFailing';\n\nexport interface Props {\n  component?: Pick<T.Component, 'key'>;\n  failingCount?: number;\n  onCancelAllPending: () => void;\n  onShowFailing: () => void;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function Stats({ component, pendingCount, pendingTime, ...props }: Props) {\n  return (\n    <section className=\"big-spacer-top big-spacer-bottom\">\n      <StatPendingCount onCancelAllPending={props.onCancelAllPending} pendingCount={pendingCount} />\n      {!component && (\n        <StatPendingTime\n          className=\"huge-spacer-left\"\n          pendingCount={pendingCount}\n          pendingTime={pendingTime}\n        />\n      )}\n      {!component && (\n        <StatStillFailing\n          className=\"huge-spacer-left\"\n          failingCount={props.failingCount}\n          onShowFailing={props.onShowFailing}\n        />\n      )}\n    </section>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<T.Task, 'componentName' | 'id' | 'type'>;\n}\n\ninterface State {\n  scannerContext?: string;\n}\n\nexport default class ScannerContext extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadScannerContext();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadScannerContext() {\n    getTask(this.props.task.id, ['scannerContext']).then(task => {\n      if (this.mounted) {\n        this.setState({ scannerContext: task.scannerContext });\n      }\n    });\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { scannerContext } = this.state;\n\n    return (\n      <Modal contentLabel=\"scanner context\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.scanner_context')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {scannerContext != null ? (\n            <pre className=\"js-task-scanner-context\">{scannerContext}</pre>\n          ) : (\n            <i className=\"spinner\" />\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<T.Task, 'componentName' | 'errorMessage' | 'id' | 'type'>;\n}\n\ninterface State {\n  loading: boolean;\n  stacktrace?: string;\n}\n\nexport default class Stacktrace extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadStacktrace();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadStacktrace() {\n    getTask(this.props.task.id, ['stacktrace']).then(\n      task => {\n        if (this.mounted) {\n          this.setState({ loading: false, stacktrace: task.errorStacktrace });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { loading, stacktrace } = this.state;\n\n    return (\n      <Modal contentLabel=\"stacktrace\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.error_stacktrace')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {loading ? (\n            <i className=\"spinner\" />\n          ) : stacktrace ? (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_stacktrace')}</h4>\n              <pre className=\"js-task-stacktrace\">{stacktrace}</pre>\n            </div>\n          ) : (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_message')}</h4>\n              <pre className=\"js-task-error-message\">{task.errorMessage}</pre>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\nimport ScannerContext from './ScannerContext';\nimport Stacktrace from './Stacktrace';\n\nconst AnalysisWarningsModal = lazyLoadComponent(\n  () => import('../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n  task: T.Task;\n}\n\ninterface State {\n  cancelTaskOpen: boolean;\n  scannerContextOpen: boolean;\n  stacktraceOpen: boolean;\n  warningsOpen: boolean;\n}\n\nexport default class TaskActions extends React.PureComponent<Props, State> {\n  state: State = {\n    cancelTaskOpen: false,\n    scannerContextOpen: false,\n    stacktraceOpen: false,\n    warningsOpen: false\n  };\n\n  handleFilterClick = () => {\n    this.props.onFilterTask(this.props.task);\n  };\n\n  handleCancelTask = () => {\n    return this.props.onCancelTask(this.props.task);\n  };\n\n  handleCancelClick = () => {\n    this.setState({ cancelTaskOpen: true });\n  };\n\n  handleShowScannerContextClick = () => {\n    this.setState({ scannerContextOpen: true });\n  };\n\n  closeCancelTask = () => {\n    this.setState({ cancelTaskOpen: false });\n  };\n\n  closeScannerContext = () => {\n    this.setState({ scannerContextOpen: false });\n  };\n\n  handleShowStacktraceClick = () => {\n    this.setState({ stacktraceOpen: true });\n  };\n\n  closeStacktrace = () => {\n    this.setState({ stacktraceOpen: false });\n  };\n\n  handleShowWarningsClick = () => {\n    this.setState({ warningsOpen: true });\n  };\n\n  closeWarnings = () => {\n    this.setState({ warningsOpen: false });\n  };\n\n  render() {\n    const { component, task } = this.props;\n\n    const canFilter = component === undefined;\n    const canCancel = task.status === STATUSES.PENDING;\n    const canShowStacktrace = task.errorMessage !== undefined;\n    const canShowWarnings = task.warningCount !== undefined && task.warningCount > 0;\n    const hasActions =\n      canFilter || canCancel || task.hasScannerContext || canShowStacktrace || canShowWarnings;\n\n    if (!hasActions) {\n      return <td>&nbsp;</td>;\n    }\n\n    return (\n      <td className=\"thin nowrap\">\n        <ActionsDropdown className=\"js-task-action\">\n          {canFilter && task.componentName && (\n            <ActionsDropdownItem className=\"js-task-filter\" onClick={this.handleFilterClick}>\n              {translateWithParameters(\n                'background_tasks.filter_by_component_x',\n                task.componentName\n              )}\n            </ActionsDropdownItem>\n          )}\n          {canCancel && (\n            <ActionsDropdownItem\n              className=\"js-task-cancel\"\n              destructive={true}\n              onClick={this.handleCancelClick}>\n              {translate('background_tasks.cancel_task')}\n            </ActionsDropdownItem>\n          )}\n          {task.hasScannerContext && (\n            <ActionsDropdownItem\n              className=\"js-task-show-scanner-context\"\n              onClick={this.handleShowScannerContextClick}>\n              {translate('background_tasks.show_scanner_context')}\n            </ActionsDropdownItem>\n          )}\n          {canShowStacktrace && (\n            <ActionsDropdownItem\n              className=\"js-task-show-stacktrace\"\n              onClick={this.handleShowStacktraceClick}>\n              {translate('background_tasks.show_stacktrace')}\n            </ActionsDropdownItem>\n          )}\n          {canShowWarnings && (\n            <ActionsDropdownItem\n              className=\"js-task-show-warnings\"\n              onClick={this.handleShowWarningsClick}>\n              {translate('background_tasks.show_warnings')}\n            </ActionsDropdownItem>\n          )}\n        </ActionsDropdown>\n\n        {this.state.cancelTaskOpen && (\n          <ConfirmModal\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_task')}\n            header={translate('background_tasks.cancel_task')}\n            isDestructive={true}\n            onClose={this.closeCancelTask}\n            onConfirm={this.handleCancelTask}>\n            {translate('background_tasks.cancel_task.text')}\n          </ConfirmModal>\n        )}\n\n        {this.state.scannerContextOpen && (\n          <ScannerContext onClose={this.closeScannerContext} task={task} />\n        )}\n\n        {this.state.stacktraceOpen && <Stacktrace onClose={this.closeStacktrace} task={task} />}\n\n        {this.state.warningsOpen && (\n          <AnalysisWarningsModal onClose={this.closeWarnings} taskId={task.id} />\n        )}\n      </td>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  type: string;\n}\n\nexport default function TaskType({ type }: Props) {\n  return (\n    <span className=\"display-inline-block note\">\n      {'['}\n      {translate('background_task.type', type)}\n      {']'}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport Organization from '../../../components/shared/Organization';\nimport { getBranchUrl, getProjectUrl, getPullRequestUrl } from '../../../helpers/urls';\nimport TaskType from './TaskType';\n\ninterface Props {\n  task: T.Task;\n}\n\nexport default function TaskComponent({ task }: Props) {\n  if (!task.componentKey) {\n    return (\n      <td>\n        <span className=\"note\">{task.id}</span>\n        <TaskType type={task.type} />\n      </td>\n    );\n  }\n\n  return (\n    <td>\n      {task.branch !== undefined && <BranchIcon className=\"little-spacer-right\" />}\n      {task.pullRequest !== undefined && <PullRequestIcon className=\"little-spacer-right\" />}\n\n      {!task.branch && !task.pullRequest && task.componentQualifier && (\n        <span className=\"little-spacer-right\">\n          <QualifierIcon qualifier={task.componentQualifier} />\n        </span>\n      )}\n\n      {task.organization && <Organization organizationKey={task.organization} />}\n\n      {task.componentName && (\n        <Link className=\"spacer-right\" to={getTaskComponentUrl(task.componentKey, task)}>\n          {task.componentName}\n\n          {task.branch && (\n            <span className=\"text-limited text-text-top\" title={task.branch}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.branch}\n            </span>\n          )}\n\n          {task.pullRequest && (\n            <span className=\"text-limited text-text-top\" title={task.pullRequestTitle}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.pullRequest}\n            </span>\n          )}\n        </Link>\n      )}\n\n      <TaskType type={task.type} />\n    </td>\n  );\n}\n\nfunction getTaskComponentUrl(componentKey: string, task: T.Task) {\n  if (task.branch) {\n    return getBranchUrl(componentKey, task.branch);\n  } else if (task.pullRequest) {\n    return getPullRequestUrl(componentKey, task.pullRequest);\n  }\n  return getProjectUrl(componentKey);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as differenceInDays from 'date-fns/difference_in_days';\nimport * as React from 'react';\nimport TimeFormatter from 'sonar-ui-common/components/intl/TimeFormatter';\nimport { isValidDate, parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  date?: string;\n  baseDate?: string;\n}\n\nexport default function TaskDate({ date, baseDate }: Props) {\n  const parsedDate = date && parseDate(date);\n  const parsedBaseDate = baseDate && parseDate(baseDate);\n  const diff =\n    parsedDate && parsedBaseDate && isValidDate(parsedDate) && isValidDate(parsedBaseDate)\n      ? differenceInDays(parsedDate, parsedBaseDate)\n      : 0;\n\n  return (\n    <td className=\"thin nowrap text-right\">\n      {diff > 0 && <span className=\"text-warning little-spacer-right\">{`(+${diff}d)`}</span>}\n\n      {parsedDate && isValidDate(parsedDate) ? <TimeFormatter date={parsedDate} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as isSameDay from 'date-fns/is_same_day';\nimport * as React from 'react';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  submittedAt: string;\n  prevSubmittedAt?: string;\n}\n\nexport default function TaskDay({ submittedAt, prevSubmittedAt }: Props) {\n  const shouldDisplay =\n    !prevSubmittedAt || !isSameDay(parseDate(submittedAt), parseDate(prevSubmittedAt));\n\n  return (\n    <td className=\"thin nowrap text-right small\">\n      {shouldDisplay ? <DateFormatter date={submittedAt} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { formatDuration } from '../utils';\n\ninterface Props {\n  ms?: number;\n}\n\nexport default function TaskExecutionTime({ ms }: Props) {\n  return <td className=\"thin nowrap text-right\">{ms && formatDuration(ms)}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  id: string;\n}\n\nexport default function TaskId({ id }: Props) {\n  return (\n    <td className=\"thin nowrap\">\n      <div className=\"note\">{id}</div>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PendingIcon from 'sonar-ui-common/components/icons/PendingIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  status: string;\n}\n\nexport default function TaskStatus({ status }: Props) {\n  let inner;\n\n  switch (status) {\n    case STATUSES.PENDING:\n      inner = <PendingIcon />;\n      break;\n    case STATUSES.IN_PROGRESS:\n      inner = <i className=\"spinner\" />;\n      break;\n    case STATUSES.SUCCESS:\n      inner = (\n        <span className=\"badge badge-success\">{translate('background_task.status.SUCCESS')}</span>\n      );\n      break;\n    case STATUSES.FAILED:\n      inner = (\n        <span className=\"badge badge-error\">{translate('background_task.status.FAILED')}</span>\n      );\n      break;\n    case STATUSES.CANCELED:\n      inner = <span className=\"badge\">{translate('background_task.status.CANCELED')}</span>;\n      break;\n    default:\n      inner = '';\n  }\n\n  return <td className=\"thin spacer-right\">{inner}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  submitter?: string;\n}\n\nexport default function TaskSubmitter({ submitter }: Props) {\n  return (\n    <td className=\"thin note\">\n      <span className=\"text-limited-small text-bottom\">{submitter || translate('anonymous')}</span>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport TaskActions from './TaskActions';\nimport TaskComponent from './TaskComponent';\nimport TaskDate from './TaskDate';\nimport TaskDay from './TaskDay';\nimport TaskExecutionTime from './TaskExecutionTime';\nimport TaskId from './TaskId';\nimport TaskStatus from './TaskStatus';\nimport TaskSubmitter from './TaskSubmitter';\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n  task: T.Task;\n  previousTask?: T.Task;\n}\n\nexport default function Task(props: Props) {\n  const { task, component, onCancelTask, onFilterTask, previousTask } = props;\n\n  return (\n    <tr>\n      <TaskStatus status={task.status} />\n      <TaskComponent task={task} />\n      <TaskId id={task.id} />\n      <TaskSubmitter submitter={task.submitterLogin} />\n      <TaskDay\n        prevSubmittedAt={previousTask && previousTask.submittedAt}\n        submittedAt={task.submittedAt}\n      />\n      <TaskDate date={task.submittedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.startedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.executedAt} />\n      <TaskExecutionTime ms={task.executionTimeMs} />\n      <TaskActions\n        component={component}\n        onCancelTask={onCancelTask}\n        onFilterTask={onFilterTask}\n        task={task}\n      />\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Task from './Task';\n\ninterface Props {\n  tasks: T.Task[];\n  component?: unknown;\n  loading: boolean;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n}\n\nexport default function Tasks({ tasks, component, loading, onCancelTask, onFilterTask }: Props) {\n  const className = classNames('data zebra zebra-hover background-tasks', {\n    'new-loading': loading\n  });\n\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className={className}>\n        <thead>\n          <tr>\n            <th>{translate('background_tasks.table.status')}</th>\n            <th>{translate('background_tasks.table.task')}</th>\n            <th>{translate('background_tasks.table.id')}</th>\n            <th>{translate('background_tasks.table.submitter')}</th>\n            <th>&nbsp;</th>\n            <th className=\"text-right\">{translate('background_tasks.table.submitted')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.started')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.finished')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.duration')}</th>\n            <th>&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task, index, tasks) => (\n            <Task\n              component={component}\n              key={task.id}\n              onCancelTask={onCancelTask}\n              onFilterTask={onFilterTask}\n              previousTask={index > 0 ? tasks[index - 1] : undefined}\n              task={task}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, uniq } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseAsDate } from 'sonar-ui-common/helpers/query';\nimport {\n  cancelAllTasks,\n  cancelTask as cancelTaskAPI,\n  getActivity,\n  getStatus,\n  getTypes\n} from '../../../api/ce';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { Location, Router } from '../../../components/hoc/withRouter';\nimport { fetchOrganizations } from '../../../store/rootActions';\nimport '../background-tasks.css';\nimport { CURRENTS, DEBOUNCE_DELAY, DEFAULT_FILTERS, STATUSES } from '../constants';\nimport { mapFiltersToParameters, Query, updateTask } from '../utils';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Search from './Search';\nimport Stats from './Stats';\nimport Tasks from './Tasks';\n\ninterface Props {\n  component?: Pick<T.Component, 'key'> & { id: string }; // id should be removed when api/ce/activity accept a component key instead of an id\n  fetchOrganizations: (keys: string[]) => void;\n  location: Location;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  failingCount: number;\n  loading: boolean;\n  pendingCount: number;\n  pendingTime?: number;\n  tasks: T.Task[];\n  types?: string[];\n}\n\nexport class BackgroundTasksApp extends React.PureComponent<Props, State> {\n  loadTasksDebounced: () => void;\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { failingCount: 0, loading: true, pendingCount: 0, tasks: [] };\n    this.loadTasksDebounced = debounce(this.loadTasks, DEBOUNCE_DELAY);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    getTypes().then(\n      types => {\n        this.setState({ types });\n        this.loadTasks();\n      },\n      () => {}\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.component !== this.props.component ||\n      prevProps.location !== this.props.location\n    ) {\n      this.loadTasksDebounced();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadTasks = () => {\n    this.setState({ loading: true });\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt =\n      this.props.location.query.minSubmittedAt || DEFAULT_FILTERS.minSubmittedAt;\n    const maxExecutedAt = this.props.location.query.maxExecutedAt || DEFAULT_FILTERS.maxExecutedAt;\n    const query = this.props.location.query.query || DEFAULT_FILTERS.query;\n\n    const filters = { status, taskType, currents, minSubmittedAt, maxExecutedAt, query };\n    const parameters = mapFiltersToParameters(filters);\n\n    if (this.props.component) {\n      parameters.componentId = this.props.component.id;\n    }\n\n    Promise.all([getActivity(parameters), getStatus(parameters.componentId)]).then(\n      ([{ tasks }, status]) => {\n        if (this.mounted) {\n          const organizations = uniq(tasks.map(task => task.organization).filter(o => o));\n          this.props.fetchOrganizations(organizations);\n\n          this.setState({\n            failingCount: status.failing,\n            loading: false,\n            pendingCount: status.pending,\n            pendingTime: status.pendingTime,\n            tasks\n          });\n        }\n      },\n      this.stopLoading\n    );\n  };\n\n  handleFilterUpdate = (nextState: Partial<Query>) => {\n    const nextQuery = { ...this.props.location.query, ...nextState };\n\n    // remove defaults\n    Object.keys(DEFAULT_FILTERS).forEach((key: keyof typeof DEFAULT_FILTERS) => {\n      if (nextQuery[key] === DEFAULT_FILTERS[key]) {\n        delete nextQuery[key];\n      }\n    });\n\n    if (nextQuery.minSubmittedAt) {\n      nextQuery.minSubmittedAt = toShortNotSoISOString(nextQuery.minSubmittedAt);\n    }\n\n    if (nextQuery.maxExecutedAt) {\n      nextQuery.maxExecutedAt = toShortNotSoISOString(nextQuery.maxExecutedAt);\n    }\n\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: nextQuery\n    });\n  };\n\n  handleCancelTask = (task: T.Task) => {\n    this.setState({ loading: true });\n\n    return cancelTaskAPI(task.id).then(nextTask => {\n      if (this.mounted) {\n        this.setState(state => ({\n          tasks: updateTask(state.tasks, nextTask),\n          loading: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleFilterTask = (task: T.Task) => {\n    this.handleFilterUpdate({ query: task.componentKey });\n  };\n\n  handleShowFailing = () => {\n    this.handleFilterUpdate({\n      ...DEFAULT_FILTERS,\n      status: STATUSES.FAILED,\n      currents: CURRENTS.ONLY_CURRENTS\n    });\n  };\n\n  handleCancelAllPending = () => {\n    this.setState({ loading: true });\n\n    cancelAllTasks().then(() => {\n      if (this.mounted) {\n        this.loadTasks();\n      }\n    }, this.stopLoading);\n  };\n\n  render() {\n    const { component } = this.props;\n    const { loading, types, tasks } = this.state;\n\n    if (!types) {\n      return (\n        <div className=\"page page-limited\">\n          <i className=\"spinner\" />\n        </div>\n      );\n    }\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt = parseAsDate(this.props.location.query.minSubmittedAt);\n    const maxExecutedAt = parseAsDate(this.props.location.query.maxExecutedAt);\n    const query = this.props.location.query.query || '';\n\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"background_tasks\" />\n        <Helmet defer={false} title={translate('background_tasks.page')} />\n        <Header component={component} />\n\n        <Stats\n          component={component}\n          failingCount={this.state.failingCount}\n          onCancelAllPending={this.handleCancelAllPending}\n          onShowFailing={this.handleShowFailing}\n          pendingCount={this.state.pendingCount}\n          pendingTime={this.state.pendingTime}\n        />\n\n        <Search\n          component={component}\n          currents={currents}\n          loading={loading}\n          maxExecutedAt={maxExecutedAt}\n          minSubmittedAt={minSubmittedAt}\n          onFilterUpdate={this.handleFilterUpdate}\n          onReload={this.loadTasksDebounced}\n          query={query}\n          status={status}\n          taskType={taskType}\n          types={types}\n        />\n\n        <Tasks\n          component={component}\n          loading={loading}\n          onCancelTask={this.handleCancelTask}\n          onFilterTask={this.handleFilterTask}\n          tasks={tasks}\n        />\n\n        <Footer tasks={tasks} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganizations };\n\nexport default connect(null, mapDispatchToProps)(BackgroundTasksApp);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as addMonths from 'date-fns/add_months';\nimport * as setMonth from 'date-fns/set_month';\nimport * as setYear from 'date-fns/set_year';\nimport * as subMonths from 'date-fns/sub_months';\nimport { range } from 'lodash';\nimport * as React from 'react';\nimport { DayModifiers, Modifier, Modifiers } from 'react-day-picker';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { ButtonIcon, ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport CalendarIcon from 'sonar-ui-common/components/icons/CalendarIcon';\nimport ChevronLeftIcon from 'sonar-ui-common/components/icons/ChevronLeftIcon';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport {\n  getShortMonthName,\n  getShortWeekDayName,\n  getWeekDayName\n} from 'sonar-ui-common/helpers/l10n';\nimport './DayPicker.css';\nimport './styles.css';\n\nconst DayPicker = lazyLoadComponent(() => import('react-day-picker'), 'DayPicker');\n\ninterface Props {\n  className?: string;\n  currentMonth?: Date;\n  highlightFrom?: Date;\n  highlightTo?: Date;\n  inputClassName?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  name?: string;\n  onChange: (date: Date | undefined) => void;\n  placeholder: string;\n  value?: Date;\n}\n\ninterface State {\n  currentMonth: Date;\n  open: boolean;\n  lastHovered?: Date;\n}\n\ntype Week = [string, string, string, string, string, string, string];\n\nexport default class DateInput extends React.PureComponent<Props, State> {\n  input?: HTMLInputElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { currentMonth: props.value || props.currentMonth || new Date(), open: false };\n  }\n\n  focus = () => {\n    if (this.input) {\n      this.input.focus();\n    }\n    this.openCalendar();\n  };\n\n  handleResetClick = () => {\n    this.closeCalendar();\n    this.props.onChange(undefined);\n  };\n\n  openCalendar = () => {\n    this.setState({\n      currentMonth: this.props.value || this.props.currentMonth || new Date(),\n      lastHovered: undefined,\n      open: true\n    });\n  };\n\n  closeCalendar = () => {\n    this.setState({ open: false });\n  };\n\n  handleDayClick = (day: Date, modifiers: DayModifiers) => {\n    if (!modifiers.disabled) {\n      this.closeCalendar();\n      this.props.onChange(day);\n    }\n  };\n\n  handleDayMouseEnter = (day: Date, modifiers: DayModifiers) => {\n    this.setState({ lastHovered: modifiers.disabled ? undefined : day });\n  };\n\n  handleCurrentMonthChange = ({ value }: { value: number }) => {\n    this.setState((state: State) => ({ currentMonth: setMonth(state.currentMonth, value) }));\n  };\n\n  handleCurrentYearChange = ({ value }: { value: number }) => {\n    this.setState(state => ({ currentMonth: setYear(state.currentMonth, value) }));\n  };\n\n  handlePreviousMonthClick = () => {\n    this.setState(state => ({ currentMonth: subMonths(state.currentMonth, 1) }));\n  };\n\n  handleNextMonthClick = () => {\n    this.setState(state => ({ currentMonth: addMonths(state.currentMonth, 1) }));\n  };\n\n  render() {\n    const { highlightFrom, highlightTo, minDate, value } = this.props;\n    const { lastHovered } = this.state;\n\n    const after = this.props.maxDate || new Date();\n\n    const months = range(12);\n    const years = range(new Date().getFullYear() - 10, new Date().getFullYear() + 1);\n\n    const selectedDays: Modifier[] = value ? [value] : [];\n    let modifiers: Partial<Modifiers> | undefined;\n    const lastHoveredOrValue = lastHovered || value;\n\n    if (highlightFrom && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: highlightFrom, to: lastHoveredOrValue } };\n      selectedDays.push(highlightFrom);\n    }\n    if (highlightTo && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: lastHoveredOrValue, to: highlightTo } };\n      selectedDays.push(highlightTo);\n    }\n\n    const weekdaysLong = range(7).map(getWeekDayName) as Week;\n    const weekdaysShort = range(7).map(getShortWeekDayName) as Week;\n\n    return (\n      <OutsideClickHandler onClickOutside={this.closeCalendar}>\n        <span className={classNames('date-input-control', this.props.className)}>\n          <InputWrapper\n            className={classNames('date-input-control-input', this.props.inputClassName, {\n              'is-filled': this.props.value !== undefined\n            })}\n            innerRef={node => (this.input = node)}\n            name={this.props.name}\n            onFocus={this.openCalendar}\n            placeholder={this.props.placeholder}\n            readOnly={true}\n            type=\"text\"\n            value={value}\n          />\n          <CalendarIcon className=\"date-input-control-icon\" fill=\"\" />\n          {this.props.value !== undefined && (\n            <ClearButton\n              className=\"button-tiny date-input-control-reset\"\n              iconProps={{ size: 12 }}\n              onClick={this.handleResetClick}\n            />\n          )}\n          {this.state.open && (\n            <div className=\"date-input-calendar\">\n              <nav className=\"date-input-calendar-nav\">\n                <ButtonIcon className=\"button-small\" onClick={this.handlePreviousMonthClick}>\n                  <ChevronLeftIcon />\n                </ButtonIcon>\n                <div className=\"date-input-calender-month\">\n                  <Select\n                    className=\"date-input-calender-month-select\"\n                    onChange={this.handleCurrentMonthChange}\n                    options={months.map(month => ({\n                      label: getShortMonthName(month),\n                      value: month\n                    }))}\n                    value={this.state.currentMonth.getMonth()}\n                  />\n                  <Select\n                    className=\"date-input-calender-month-select spacer-left\"\n                    onChange={this.handleCurrentYearChange}\n                    options={years.map(year => ({ label: String(year), value: year }))}\n                    value={this.state.currentMonth.getFullYear()}\n                  />\n                </div>\n                <ButtonIcon className=\"button-small\" onClick={this.handleNextMonthClick}>\n                  <ChevronRightIcon />\n                </ButtonIcon>\n              </nav>\n              <DayPicker\n                captionElement={<NullComponent />}\n                disabledDays={{ after, before: minDate }}\n                firstDayOfWeek={1}\n                modifiers={modifiers}\n                month={this.state.currentMonth}\n                navbarElement={<NullComponent />}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n                selectedDays={selectedDays}\n                weekdaysLong={weekdaysLong}\n                weekdaysShort={weekdaysShort}\n              />\n            </div>\n          )}\n        </span>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nfunction NullComponent() {\n  return null;\n}\n\ntype InputWrapperProps = T.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value'> &\n  InjectedIntlProps & {\n    innerRef: React.Ref<HTMLInputElement>;\n    value: Date | undefined;\n  };\n\nconst InputWrapper = injectIntl(({ innerRef, intl, value, ...other }: InputWrapperProps) => {\n  const formattedValue =\n    value && intl.formatDate(value, { year: 'numeric', month: 'short', day: 'numeric' });\n  return <input {...other} ref={innerRef} value={formattedValue || ''} />;\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".DayPicker{display:inline-block}.DayPicker-wrapper{position:relative;-webkit-user-select:none;-ms-user-select:none;user-select:none;padding-bottom:8px;flex-direction:row}.DayPicker-Months{display:flex;flex-wrap:wrap;justify-content:center}.DayPicker-Month{display:table;border-collapse:collapse;border-spacing:0;-webkit-user-select:none;-ms-user-select:none;user-select:none;margin:8px 8px 0}.DayPicker-Weekdays{display:table-header-group}.DayPicker-WeekdaysRow{display:table-row}.DayPicker-Weekday{display:table-cell;padding:8px;font-size:12px;text-align:center;color:#999}.DayPicker-Weekday abbr[title]{border-bottom:none;text-decoration:none}.DayPicker-Body{display:table-row-group}.DayPicker-Week{display:table-row}.DayPicker-Day{display:table-cell;line-height:15px;padding:8px;text-align:center;cursor:pointer;vertical-align:top;outline:none}.DayPicker--interactionDisabled .DayPicker-Day{cursor:default}.DayPicker-Footer{padding-top:8px}.DayPicker-Day--today{font-weight:700}.DayPicker-Day--outside{cursor:default;color:#8b9898}.DayPicker-Day--disabled{color:#cdcdcd;cursor:not-allowed}.DayPicker-Day--sunday{background-color:#f7f8f8}.DayPicker-Day--sunday:not(.DayPicker-Day--today){color:#dce0e0}.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:#4b9fd5;color:#fff}.DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--highlighted):not(.DayPicker-Day--outside):hover{background-color:#f3f3f3}.DayPicker-Day--highlighted:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside){background-color:#cae3f2}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".date-input-control{position:relative;display:inline-block;cursor:pointer}.date-input-control-input{width:130px;padding-left:24px!important;cursor:pointer}.date-input-control-input.is-filled{padding-right:16px!important}.date-input-control-icon{position:absolute;top:4px;left:4px}.date-input-control-icon path{fill:#cdcdcd;transition:fill .3s ease}.date-input-control-input:focus+.date-input-control-icon path{fill:#4b9fd5}.date-input-control-reset{position:absolute;top:4px;right:4px;border:none}.date-input-calendar{position:absolute;z-index:7500;top:100%;left:0;border:1px solid #e6e6e6;background-color:#fff;box-shadow:0 6px 12px rgba(0,0,0,.175)}.date-input-calendar-nav{display:flex;justify-content:space-between;align-items:center;padding-top:8px;padding-left:8px;padding-right:8px}.date-input-calender-month-select{width:70px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(\n    () => getTask(id),\n    () => getTask(id)\n  );\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateInput from './DateInput';\n\ntype DateRange = { from?: Date; to?: Date };\n\ninterface Props {\n  className?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  onChange: (date: DateRange) => void;\n  value?: DateRange;\n}\n\nexport default class DateRangeInput extends React.PureComponent<Props> {\n  toDateInput?: DateInput | null;\n\n  get from() {\n    return this.props.value && this.props.value.from;\n  }\n\n  get to() {\n    return this.props.value && this.props.value.to;\n  }\n\n  handleFromChange = (from: Date | undefined) => {\n    this.props.onChange({ from, to: this.to });\n\n    // use `setTimeout` to work around the immediate closing of the `toDateInput`\n    setTimeout(() => {\n      if (from && !this.to && this.toDateInput) {\n        this.toDateInput.focus();\n      }\n    }, 0);\n  };\n\n  handleToChange = (to: Date | undefined) => {\n    this.props.onChange({ from: this.from, to });\n  };\n\n  render() {\n    return (\n      <div className={classNames('display-inline-flex-center', this.props.className)}>\n        <DateInput\n          currentMonth={this.to}\n          data-test=\"from\"\n          highlightTo={this.to}\n          maxDate={this.to}\n          onChange={this.handleFromChange}\n          placeholder={translate('start_date')}\n          value={this.from}\n        />\n        <span className=\"note little-spacer-left little-spacer-right\">{translate('to_')}</span>\n        <DateInput\n          currentMonth={this.from}\n          data-test=\"to\"\n          highlightFrom={this.from}\n          minDate={this.from}\n          onChange={this.handleToChange}\n          placeholder={translate('end_date')}\n          ref={element => (this.toDateInput = element)}\n          value={this.to}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}