{"version":3,"sources":["webpack:///./src/main/js/components/hoc/withUserOrganizations.tsx","webpack:///./src/main/js/apps/create/project/style.css?00fe","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?95f7","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/apps/create/components/OrganizationSelect.tsx","webpack:///./src/main/js/apps/create/project/OrganizationInput.tsx","webpack:///./src/main/js/apps/create/project/AlmRepositoryItem.tsx","webpack:///./src/main/js/apps/create/project/SetupProjectBox.tsx","webpack:///./src/main/js/apps/create/project/RemoteRepositories.tsx","webpack:///./src/main/js/apps/create/project/AutoProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageHeader.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarCloud.tsx","webpack:///./src/main/js/apps/create/project/types.ts","webpack:///./src/main/js/apps/create/project/BitbucketProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/BitbucketRepositories.tsx","webpack:///./src/main/js/apps/create/project/BitbucketSearchResults.tsx","webpack:///./src/main/js/apps/create/project/BitbucketImportRepositoryForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketPersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreate.tsx","webpack:///./src/main/js/api/alm-integrations.ts","webpack:///./src/main/js/apps/create/project/CreateProjectModeSelection.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarQube.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/components/hoc/utils.ts","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/components/hoc/withCurrentUser.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/apps/create/organization/utils.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationAdvantages.tsx","webpack:///./src/main/js/apps/create/components/BillingFormShim.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationModal.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationBox.tsx","webpack:///./src/main/js/api/billing.ts","webpack:///./src/main/js/api/alm-integration.ts"],"names":["withUserOrganizations","WrappedComponent","Wrapper","this","props","fetchMyOrganizations","displayName","mapDispatchToProps","state","userOrganizations","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","OrganizationSelect","hideIcons","onChange","organization","organizations","optionRenderer","icon","alm","key","isPaidOrg","subscription","className","alt","height","src","name","getOptionRenderer","autoFocus","clearable","id","labelKey","o","toLowerCase","placeholder","required","value","valueKey","valueRenderer","handleLinkClick","event","preventDefault","stopPropagation","Date","now","toString","router","pathname","tab","autoImport","htmlFor","href","onClick","handleMouseEnter","highlightUpgradeBox","handleMouseLeave","handleToggle","disabled","repository","linkedProjectKey","toggleRepository","identityProvider","selected","alreadyImported","Boolean","overlay","undefined","imported","onMouseEnter","onMouseLeave","role","fill","disableGrayText","checked","onCheck","width","label","private","green","defaultMessage","values","link","to","mounted","submitting","canSubmit","selectedRepositories","length","handleFormSubmit","setState","installationKeys","map","repo","installationKey","then","projects","onProjectCreate","project","projectKey","handleProvisionFail","onProvisionFail","hasSelectedRepositories","privateRepos","publicRepos","open","onSubmit","loading","checkAllRepositories","highlight","repositories","search","successfullyUpgraded","fetchRepositories","filterBySearch","includes","handleHighlightUpgradeBox","handleOrganizationUpgrade","onOrganizationUpgrade","updateSelectedRepositories","Object","keys","forEach","newRepository","find","r","handleSearch","onCheckAllRepositories","nextState","validRepositories","filter","filterByPlan","filterByImportable","prevProps","almApplication","hasPrivateRepositories","some","showSearchBox","showCheckAll","showUpgradebox","actions","admin","filteredRepositories","minLength","Alert","variant","UpgradeOrganizationBox","super","handleInstallAppClick","handleOrganizationSelect","selectedOrganization","getInitialSelectedOrganization","boundOrganizations","backgroundColor","iconPath","small","url","installationUrl","CreateProjectPageHeader","additionalActions","showBreadcrumb","title","checkFreeKey","component","alreadyExist","projectKeyError","touched","validating","catch","canChoosePrivate","getOrganization","organizationKey","projectName","trim","visibility","selectedVisibility","prevState","handleProjectKeyChange","currentTarget","validateKey","projectNameChanged","projectNameError","validateName","handleProjectNameChange","handleVisibilityChange","test","branchesEnabled","projectKeyIsInvalid","projectKeyIsValid","projectNameIsInvalid","projectNameIsValid","description","error","help","isInvalid","isValid","maxLength","type","handleProjectCreate","projectKeys","skipOnboarding","fetchAlmApplication","application","onTabChange","updateUrl","replace","location","query","currentUser","header","showManualTab","titleTemplate","tabs","node","provision","whenLoggedIn","CreateProjectModes","BitbucketProjectAccordion","disableRepositories","selectedRepository","showingAllRepositories","repositoryCount","mode","BitbucketServer","resetPat","sqProjectKey","size","onSelectRepository","String","BitbucketRepositories","projectRepositories","openProjectKeys","setOpenProjectKeys","allAreExpanded","p","isOpen","allShown","handleClick","BitbucketSearchResults","searching","searchResults","filteredProjects","BitbucketImportRepositoryForm","onSearch","BitbucketPersonalAccessTokenForm","bitbucketSetting","validationFailed","setTouched","e","FormData","get","onPersonalAccessTokenCreate","display","rel","target","perm","BitbucketProjectCreateRenderer","canAdmin","importing","showPersonalAccessTokenForm","submittingToken","tokenValidationFailed","onImportRepository","category","fetchInitialData","async","patIsValid","checkPersonalAccessToken","fetchBitbucketProjects","fetchBitbucketRepositories","almSetting","response","status","throwGlobalError","Promise","resolve","all","isLastPage","results","reduce","acc","handlePersonalAccessTokenCreate","token","pat","handleImportRepository","repositorySlug","slug","repositoryName","handleSelectRepository","bitbucketSettings","loadingBindings","CreateProjectModeSelection","bbsBindingCount","onSelectMode","Manual","style","lineHeight","fetchAlmBindings","almSettings","s","Bitbucket","handleModeSelect","appState","showManualForm","showBBSForm","withAppState","CreateProjectPage","A11ySkipTarget","anchor","getWrappedDisplayName","hocName","wrappedDisplayName","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","withCurrentUser","librariesExposed","installScript","scriptTag","document","createElement","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","exposeLibraries","start","reject","getAlmMembersUrl","endsWith","isGithub","getUserAlmKey","user","externalProvider","sanitizeAlmId","hasAdvancedALMIntegration","isBitbucket","almKey","startsWith","isVSTS","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","org","AlmKeys","ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP","ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP","BIND_ORGANIZATION_KEY","BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP","Step","formatPrice","price","noSign","priceFormatted","urlQuery","almInstallId","jwt","iss","getAlmDefinitions","getAlmSettings","createGithubConfiguration","data","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createGitlabConfiguration","updateGitlabConfiguration","deleteConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY","UpgradeOrganizationAdvantages","Advantage","children","lightGreen","BillingForm","window","SonarBilling","ready","contentLabel","noBackdrop","insideModal","onRequestClose","onClose","shouldCloseOnOverlayClick","onCommit","onUpgradeDone","subscriptionPlans","processingUpgrade","renderFormFields","renderNextCharge","renderRecap","renderSubmitButton","upgradeOrganizationModal","fetchSubscriptionPlans","handleUpgradeClick","handleUpgradeOrganizationModalClose","startingPrice","titleInfo","getAlmAppInfo","getRepositories","provisionProject","join"],"mappings":"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","file":"js/320.m.45cea597.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMyOrganizations } from '../../apps/account/organizations/actions';\nimport { getMyOrganizations, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\ninterface OwnProps {\n  fetchMyOrganizations: () => Promise<void>;\n  userOrganizations: T.Organization[];\n}\n\nexport function withUserOrganizations<P>(\n  WrappedComponent: React.ComponentType<P & Partial<OwnProps>>\n) {\n  class Wrapper extends React.Component<P & OwnProps> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withUserOrganizations');\n\n    componentDidMount() {\n      this.props.fetchMyOrganizations();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = { fetchMyOrganizations: fetchMyOrganizations as any };\n\n  function mapStateToProps(state: Store) {\n    return { userOrganizations: getMyOrganizations(state) };\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n}\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#create-project{padding-top:0!important}#create-project header{padding-top:20px}.white-page #create-project header{background-color:#fff;position:-webkit-sticky;position:sticky;top:48px;z-index:50}.create-project{display:flex!important;justify-content:space-between}.create-project-repository{display:flex;align-items:center;min-width:500px;height:40px;border:1px solid #e6e6e6;padding:8px 16px;margin-bottom:8px;box-sizing:border-box;cursor:pointer;transition:all .3s ease}.create-project-repository.disabled{background-color:#ebebeb;border-color:#ddd;cursor:default}.create-project-repository.imported{cursor:default}.create-project-repository.selected{background-color:#cae3f2;border-color:#236a97}.create-project-repository:not(.imported):not(.disabled):active,.create-project-repository:not(.imported):not(.disabled):focus,.create-project-repository:not(.imported):not(.disabled):hover{border-color:#4b9fd5;box-shadow:none}.create-project-side-with-search{margin-top:32px}.create-project-side-sticky{position:-webkit-sticky;position:sticky;top:68px}.create-project-setup{display:flex;overflow:hidden;opacity:0;flex-direction:column;height:0;width:450px;margin-bottom:0;color:#fff;background-color:#0b3c62;border:none;border-radius:3px;transition:height .5s ease,opacity .4s ease-out,margin-bottom .5s ease-in}.create-project-setup.open{opacity:1;height:160px;margin-bottom:20px}.create-project-setup h2{color:#fff;font-weight:700;font-size:16px}.create-project-setup .boxed-group-inner{display:flex;flex-direction:column;flex-grow:1}.create-project-setup .button{border-color:#4c9bd6;background-color:#4c9bd6;color:#fff;transition:border-color .2s ease,box-shadow .2s ease,background-color .2s ease}.create-project-setup .button:focus,.create-project-setup .button:hover{border-color:#327bb3;background-color:#327bb3}.create-project-actions{min-width:500px;display:flex;justify-content:space-between;align-items:center;padding:8px 0 8px 16px;border-left:1px solid transparent}.create-project-actions .icon-checkbox{margin-right:8px}.create-project-modes{margin:0 auto;max-width:500px}.create-project-import-bbs .open .boxed-group-header{border-bottom:1px solid #e6e6e6}.create-project-import-bbs .boxed-group-inner{padding-top:24px}.create-project-import-bbs-repo{width:250px;min-height:40px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  hideIcons?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationSelect({\n  hideIcons,\n  onChange,\n  organization,\n  organizations\n}: Props) {\n  const optionRenderer = getOptionRenderer(hideIcons);\n  return (\n    <Select\n      autoFocus={!organization}\n      className=\"input-super-large\"\n      clearable={false}\n      id=\"select-organization\"\n      labelKey=\"name\"\n      onChange={onChange}\n      optionRenderer={optionRenderer}\n      options={sortBy(organizations, o => o.name.toLowerCase())}\n      placeholder={translate('onboarding.import_organization.choose_organization')}\n      required={true}\n      value={organization}\n      valueKey=\"key\"\n      valueRenderer={optionRenderer}\n    />\n  );\n}\n\nexport function getOptionRenderer(hideIcons?: boolean) {\n  return function optionRenderer(organization: T.Organization) {\n    const icon = organization.alm\n      ? `sonarcloud/${sanitizeAlmId(organization.alm.key)}`\n      : 'sonarcloud-square-logo';\n    const isPaidOrg = organization.subscription === 'PAID';\n    return (\n      <div className=\"display-flex-space-between\">\n        <span className=\"text-ellipsis flex-1\">\n          {!hideIcons && (\n            <img\n              alt={organization.alm ? organization.alm.key : 'SonarCloud'}\n              className=\"little-spacer-right\"\n              height={14}\n              src={`${getBaseUrl()}/images/${icon}.svg`}\n            />\n          )}\n          {organization.name}\n          <span className=\"note little-spacer-left\">{organization.key}</span>\n        </span>\n        {isPaidOrg && <div className=\"badge\">{translate('organization.paid_plan.badge')}</div>}\n      </div>\n    );\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport { ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP } from '../organization/utils';\n\ninterface Props {\n  autoImport?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport class OrganizationInput extends React.PureComponent<Props & WithRouterProps> {\n  handleLinkClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n    this.props.router.push({\n      pathname: '/create-organization',\n      state: { tab: this.props.autoImport ? 'auto' : 'manual' }\n    });\n  };\n\n  render() {\n    const { autoImport, onChange, organization, organizations } = this.props;\n    return (\n      <div className=\"form-field spacer-bottom\">\n        <label htmlFor=\"select-organization\">\n          <span className=\"text-middle\">\n            <strong>{translate('onboarding.create_project.organization')}</strong>\n            <em className=\"mandatory\">*</em>\n          </span>\n        </label>\n        <OrganizationSelect\n          hideIcons={!autoImport}\n          onChange={onChange}\n          organization={organization}\n          organizations={organizations}\n        />\n        <a className=\"big-spacer-left js-new-org\" href=\"#\" onClick={this.handleLinkClick}>\n          {autoImport\n            ? translate('onboarding.create_project.import_new_org')\n            : translate('onboarding.create_project.create_new_org')}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OrganizationInput);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { identity } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\n\ninterface Props {\n  disabled: boolean;\n  highlightUpgradeBox: (highlight: boolean) => void;\n  identityProvider: T.IdentityProvider;\n  repository: T.AlmRepository;\n  selected: boolean;\n  toggleRepository: (repository: T.AlmRepository) => void;\n}\n\nexport default class AlmRepositoryItem extends React.PureComponent<Props> {\n  handleMouseEnter = () => {\n    this.props.highlightUpgradeBox(true);\n  };\n\n  handleMouseLeave = () => {\n    this.props.highlightUpgradeBox(false);\n  };\n\n  handleToggle = () => {\n    if (!this.props.disabled && !this.props.repository.linkedProjectKey) {\n      this.props.toggleRepository(this.props.repository);\n    }\n  };\n\n  render() {\n    const { disabled, identityProvider, repository, selected } = this.props;\n    const alreadyImported = Boolean(repository.linkedProjectKey);\n    return (\n      <Tooltip\n        overlay={\n          disabled\n            ? translate('onboarding.create_project.subscribe_to_import_private_repositories')\n            : undefined\n        }>\n        <li>\n          <div\n            className={classNames('create-project-repository', {\n              disabled,\n              imported: alreadyImported,\n              selected\n            })}\n            onClick={this.handleToggle}\n            onMouseEnter={disabled ? this.handleMouseEnter : undefined}\n            onMouseLeave={disabled ? this.handleMouseLeave : undefined}\n            role=\"listitem\">\n            <div className=\"flex-1 display-flex-center\">\n              {disabled ? (\n                <LockIcon fill={colors.disableGrayText} />\n              ) : (\n                <Checkbox\n                  checked={selected || alreadyImported}\n                  disabled={disabled || alreadyImported}\n                  onCheck={identity}\n                />\n              )}\n              <img\n                alt={identityProvider.name}\n                className={classNames('spacer-left', { 'icon-half-transparent': disabled })}\n                height={14}\n                src={`${getBaseUrl()}/images/sonarcloud/${identityProvider.key}.svg`}\n                width={14}\n              />\n              <span className=\"spacer-left\">{this.props.repository.label}</span>\n              {repository.private && (\n                <div className=\"badge spacer-left\">{translate('visibility.private')}</div>\n              )}\n            </div>\n\n            {repository.linkedProjectKey && (\n              <span>\n                <CheckIcon className=\"little-spacer-right\" fill={colors.green} />\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.repository_imported')}\n                  id=\"onboarding.create_project.repository_imported\"\n                  values={{\n                    link: (\n                      <Link to={getProjectUrl(repository.linkedProjectKey)}>\n                        {translate('onboarding.create_project.see_project')}\n                      </Link>\n                    )\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        </li>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { partition } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { provisionProject } from '../../../api/alm-integration';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  onProvisionFail: () => Promise<void>;\n  organization: T.Organization;\n  selectedRepositories: T.AlmRepository[];\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SetupProjectBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit = () => {\n    return !this.state.submitting && this.props.selectedRepositories.length > 0;\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.canSubmit()) {\n      const { selectedRepositories } = this.props;\n      this.setState({ submitting: true });\n      provisionProject({\n        installationKeys: selectedRepositories.map(repo => repo.installationKey),\n        organization: this.props.organization.key\n      }).then(\n        ({ projects }) =>\n          this.props.onProjectCreate(\n            projects.map(project => project.projectKey),\n            this.props.organization.key\n          ),\n        this.handleProvisionFail\n      );\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.props.onProvisionFail().then(() => {\n      if (this.mounted) {\n        this.setState({ submitting: false });\n      }\n    });\n  };\n\n  render() {\n    const { selectedRepositories } = this.props;\n    const hasSelectedRepositories = selectedRepositories.length > 0;\n    const [privateRepos = [], publicRepos = []] = partition(\n      selectedRepositories,\n      repo => repo.private\n    );\n    return (\n      <form\n        className={classNames('create-project-setup boxed-group', {\n          open: hasSelectedRepositories\n        })}\n        onSubmit={this.handleFormSubmit}>\n        <div className=\"boxed-group-header\">\n          <h2 className=\"spacer-top\">\n            {selectedRepositories.length > 1\n              ? translateWithParameters(\n                  'onboarding.create_project.x_repositories_selected',\n                  selectedRepositories.length\n                )\n              : translate('onboarding.create_project.1_repository_selected')}\n          </h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          <div className=\"flex-1\">\n            {publicRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_public')}</p>\n            )}\n            {publicRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_public',\n                  publicRepos.length\n                )}\n              </p>\n            )}\n            {privateRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_private')}</p>\n            )}\n            {privateRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_private',\n                  privateRepos.length\n                )}\n              </p>\n            )}\n          </div>\n          <div>\n            <SubmitButton className=\"button-large\" disabled={this.state.submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={this.state.submitting} />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getRepositories } from '../../../api/alm-integration';\nimport { isPaidOrganization } from '../../../helpers/organizations';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport AlmRepositoryItem from './AlmRepositoryItem';\nimport SetupProjectBox from './SetupProjectBox';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization: T.Organization;\n}\n\ntype SelectedRepositories = T.Dict<T.AlmRepository | undefined>;\n\ninterface State {\n  checkAllRepositories: boolean;\n  highlight: boolean;\n  loading: boolean;\n  repositories: T.AlmRepository[];\n  search: string;\n  selectedRepositories: SelectedRepositories;\n  successfullyUpgraded: boolean;\n}\n\nexport default class RemoteRepositories extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    checkAllRepositories: false,\n    highlight: false,\n    loading: true,\n    repositories: [],\n    search: '',\n    selectedRepositories: {},\n    successfullyUpgraded: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRepositories();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.organization.key !== this.props.organization.key) {\n      this.setState({ loading: true, selectedRepositories: {} });\n      this.fetchRepositories();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRepositories = () => {\n    const { organization } = this.props;\n    return getRepositories({ organization: organization.key }).then(\n      ({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, repositories });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  filterBySearch = (search: String) => (repo: T.AlmRepository) => {\n    return repo.label.toLowerCase().includes(search.toLowerCase());\n  };\n\n  handleHighlightUpgradeBox = (highlight: boolean) => {\n    this.setState({ highlight });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    if (this.mounted) {\n      this.setState({ successfullyUpgraded: true });\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.fetchRepositories().then(() => {\n      if (this.mounted) {\n        this.setState(({ repositories, selectedRepositories }) => {\n          const updateSelectedRepositories: SelectedRepositories = {};\n          Object.keys(selectedRepositories).forEach(installationKey => {\n            const newRepository = repositories.find(r => r.installationKey === installationKey);\n            if (newRepository && !newRepository.linkedProjectKey) {\n              updateSelectedRepositories[newRepository.installationKey] = newRepository;\n            }\n          });\n          return { selectedRepositories: updateSelectedRepositories };\n        });\n      }\n    });\n  };\n\n  handleSearch = (search: string) => {\n    this.setState({ search, checkAllRepositories: false, selectedRepositories: {} });\n  };\n\n  onCheckAllRepositories = () => {\n    this.setState(({ checkAllRepositories, repositories, search }) => {\n      const { organization } = this.props;\n\n      const isPaidOrg = isPaidOrganization(organization);\n      const filterByPlan = (repo: T.AlmRepository) => (isPaidOrg ? true : !repo.private);\n      const filterByImportable = (repo: T.AlmRepository) => !repo.linkedProjectKey;\n\n      const nextState = {\n        selectedRepositories: {},\n        checkAllRepositories: !checkAllRepositories\n      };\n\n      if (nextState.checkAllRepositories) {\n        const validRepositories = repositories.filter(\n          repo =>\n            this.filterBySearch(search)(repo) && filterByPlan(repo) && filterByImportable(repo)\n        );\n        nextState.selectedRepositories = keyBy(validRepositories, 'installationKey');\n      }\n\n      return nextState;\n    });\n  };\n\n  toggleRepository = (repository: T.AlmRepository) => {\n    this.setState(({ selectedRepositories }) => ({\n      selectedRepositories: {\n        ...selectedRepositories,\n        [repository.installationKey]: selectedRepositories[repository.installationKey]\n          ? undefined\n          : repository\n      }\n    }));\n  };\n\n  render() {\n    const { highlight, loading, repositories, search, selectedRepositories } = this.state;\n    const { almApplication, organization } = this.props;\n    const isPaidOrg = isPaidOrganization(organization);\n    const hasPrivateRepositories = repositories.some(repository => Boolean(repository.private));\n    const showSearchBox = repositories.length > 5;\n    const showCheckAll = repositories.length > 1;\n    const showUpgradebox =\n      !isPaidOrg && hasPrivateRepositories && organization.actions && organization.actions.admin;\n    const filteredRepositories = repositories.filter(this.filterBySearch(search));\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <div className=\"spacer-bottom create-project-actions\">\n            <div>\n              {showCheckAll && (\n                <Checkbox\n                  checked={this.state.checkAllRepositories}\n                  disabled={filteredRepositories.length === 0}\n                  onCheck={this.onCheckAllRepositories}>\n                  {translate('onboarding.create_project.select_all_repositories')}\n                </Checkbox>\n              )}\n            </div>\n            {showSearchBox && (\n              <SearchBox\n                minLength={1}\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_repositories')}\n                value={this.state.search}\n              />\n            )}\n          </div>\n\n          {this.state.successfullyUpgraded && (\n            <Alert variant=\"success\">\n              {translateWithParameters(\n                'onboarding.create_project.subscribtion_success_x',\n                organization.name\n              )}\n            </Alert>\n          )}\n          <DeferredSpinner loading={loading}>\n            <ul>\n              {filteredRepositories.length === 0 && (\n                <li className=\"big-spacer-top note\">\n                  {showUpgradebox\n                    ? translateWithParameters('no_results_for_x', search)\n                    : translate('onboarding.create_project.no_repositories')}\n                </li>\n              )}\n              {filteredRepositories.map(repo => (\n                <AlmRepositoryItem\n                  disabled={Boolean(repo.private && !isPaidOrg)}\n                  highlightUpgradeBox={this.handleHighlightUpgradeBox}\n                  identityProvider={almApplication}\n                  key={repo.installationKey}\n                  repository={repo}\n                  selected={Boolean(selectedRepositories[repo.installationKey])}\n                  toggleRepository={this.toggleRepository}\n                />\n              ))}\n            </ul>\n          </DeferredSpinner>\n        </div>\n        {organization && (\n          <div className={classNames({ 'create-project-side-with-search': showSearchBox })}>\n            <div className=\"create-project-side-sticky\">\n              <SetupProjectBox\n                onProjectCreate={this.props.onProjectCreate}\n                onProvisionFail={this.handleProvisionFail}\n                organization={organization}\n                selectedRepositories={Object.keys(selectedRepositories)\n                  .map(r => selectedRepositories[r])\n                  .filter(isDefined)}\n              />\n              {showUpgradebox && (\n                <UpgradeOrganizationBox\n                  className={classNames({ highlight })}\n                  onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                  organization={organization}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport IdentityProviderLink from 'sonar-ui-common/components/controls/IdentityProviderLink';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport {\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP\n} from '../organization/utils';\nimport OrganizationInput from './OrganizationInput';\nimport RemoteRepositories from './RemoteRepositories';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  boundOrganizations: T.Organization[];\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization?: string;\n}\n\ninterface State {\n  selectedOrganization: string;\n}\n\nexport default class AutoProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { selectedOrganization: this.getInitialSelectedOrganization(props) };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.organization) {\n      return props.organization;\n    } else if (props.boundOrganizations.length === 1) {\n      return props.boundOrganizations[0].key;\n    } else {\n      return '';\n    }\n  }\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    this.setState({ selectedOrganization: key });\n  };\n\n  render() {\n    const { almApplication, boundOrganizations, onProjectCreate } = this.props;\n\n    if (boundOrganizations.length === 0) {\n      return (\n        <>\n          <p className=\"spacer-bottom\">\n            {translate('onboarding.create_project.install_app_description', almApplication.key)}\n          </p>\n          <IdentityProviderLink\n            backgroundColor={almApplication.backgroundColor}\n            className=\"display-inline-block\"\n            iconPath={almApplication.iconPath}\n            name={almApplication.name}\n            onClick={this.handleInstallAppClick}\n            small={true}\n            url={almApplication.installationUrl}>\n            {translate(\n              'onboarding.import_organization.choose_organization_button',\n              almApplication.key\n            )}\n          </IdentityProviderLink>\n        </>\n      );\n    }\n\n    const { selectedOrganization } = this.state;\n    const organization = boundOrganizations.find(o => o.key === selectedOrganization);\n\n    return (\n      <>\n        <OrganizationInput\n          autoImport={true}\n          onChange={this.handleOrganizationSelect}\n          organization={selectedOrganization}\n          organizations={this.props.boundOrganizations}\n        />\n        {organization && (\n          <RemoteRepositories\n            almApplication={almApplication}\n            onOrganizationUpgrade={this.props.onOrganizationUpgrade}\n            onProjectCreate={onProjectCreate}\n            organization={organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface CreateProjectPageHeaderProps {\n  additionalActions?: React.ReactNode;\n  showBreadcrumb?: boolean;\n  title: React.ReactNode;\n}\n\nexport default function CreateProjectPageHeader(props: CreateProjectPageHeaderProps) {\n  const { additionalActions, showBreadcrumb, title } = props;\n\n  return (\n    <header className=\"huge-spacer-bottom bordered-bottom overflow-hidden\">\n      <h1 className=\"pull-left huge big-spacer-bottom\">\n        {showBreadcrumb && (\n          <>\n            <Link to=\"/projects/create\">{translate('my_account.create_new.TRK')}</Link>\n            <span className=\"big-spacer-left big-spacer-right slash-separator\" />\n          </>\n        )}\n        {title}\n      </h1>\n\n      {additionalActions}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport { isSonarCloud } from '../../../helpers/system';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport './ManualProjectCreate.css';\nimport OrganizationInput from './OrganizationInput';\n\ninterface Props {\n  branchesEnabled?: boolean;\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations?: () => Promise<void>;\n  onProjectCreate: (projectKeys: string[]) => void;\n  organization?: string;\n  userOrganizations?: T.Organization[];\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectNameError?: string;\n  projectKey: string;\n  projectKeyError?: string;\n  selectedOrganization?: T.Organization;\n  selectedVisibility?: T.Visibility;\n  submitting: boolean;\n  touched: boolean;\n  validating: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      selectedOrganization: this.getInitialSelectedOrganization(props),\n      submitting: false,\n      touched: false,\n      validating: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          if (!alreadyExist) {\n            this.setState({ projectKeyError: undefined, validating: false });\n          } else {\n            this.setState({\n              projectKeyError: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validating: false });\n        }\n      });\n  };\n\n  canChoosePrivate = (selectedOrganization: T.Organization | undefined) => {\n    return Boolean(selectedOrganization && selectedOrganization.subscription === 'PAID');\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization\n    } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0 &&\n        (!isSonarCloud() || selectedOrganization)\n    );\n  }\n\n  getInitialSelectedOrganization = (props: Props) => {\n    if (props.organization) {\n      return this.getOrganization(props.organization);\n    } else if (props.userOrganizations && props.userOrganizations.length === 1) {\n      return props.userOrganizations[0];\n    } else {\n      return undefined;\n    }\n  };\n\n  getOrganization = (organizationKey: string) => {\n    return (\n      this.props.userOrganizations &&\n      this.props.userOrganizations.find(({ key }: T.Organization) => key === organizationKey)\n    );\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim(),\n        organization: state.selectedOrganization && state.selectedOrganization.key,\n        visibility: this.state.selectedVisibility\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    const selectedOrganization = this.getOrganization(key);\n    let { selectedVisibility } = this.state;\n\n    if (selectedVisibility === undefined) {\n      selectedVisibility = this.canChoosePrivate(selectedOrganization) ? 'private' : 'public';\n    }\n\n    this.setState({\n      selectedOrganization,\n      selectedVisibility\n    });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.fetchMyOrganizations!().then(\n      () => {\n        this.setState(prevState => {\n          if (prevState.selectedOrganization) {\n            const selectedOrganization = this.getOrganization(prevState.selectedOrganization.key);\n            return {\n              selectedOrganization\n            };\n          }\n          return null;\n        });\n      },\n      () => {}\n    );\n  };\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectKey = event.currentTarget.value || '';\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState(prevState => {\n      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;\n      return {\n        projectKey,\n        projectKeyError,\n        projectName,\n        projectNameError: this.validateName(projectName),\n        touched: true,\n        validating: projectKeyError === undefined\n      };\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({\n      projectName,\n      projectNameChanged: true,\n      projectNameError: this.validateName(projectName)\n    });\n  };\n\n  handleVisibilityChange = (selectedVisibility: T.Visibility) => {\n    this.setState({ selectedVisibility });\n  };\n\n  validateKey = (projectKey: string) => {\n    return projectKey.length > 400 || !/^[\\w-.:]*[a-zA-Z]+[\\w-.:]*$/.test(projectKey)\n      ? translate('onboarding.create_project.project_key.error')\n      : undefined;\n  };\n\n  validateName = (projectName: string) => {\n    return projectName.length === 0 || projectName.length > 255\n      ? translate('onboarding.create_project.display_name.error')\n      : undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization,\n      submitting,\n      touched,\n      validating\n    } = this.state;\n    const { branchesEnabled } = this.props;\n    const projectKeyIsInvalid = touched && projectKeyError !== undefined;\n    const projectKeyIsValid = touched && !validating && projectKeyError === undefined;\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n    const canChoosePrivate = this.canChoosePrivate(selectedOrganization);\n\n    return (\n      <>\n        <CreateProjectPageHeader\n          showBreadcrumb={branchesEnabled}\n          title={translate('onboarding.create_project.setup_manually')}\n        />\n\n        <div className=\"create-project\">\n          <div className=\"flex-1 huge-spacer-right\">\n            <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n              {isSonarCloud() && this.props.userOrganizations && (\n                <OrganizationInput\n                  onChange={this.handleOrganizationSelect}\n                  organization={selectedOrganization ? selectedOrganization.key : ''}\n                  organizations={this.props.userOrganizations}\n                />\n              )}\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.project_key.description')}\n                error={projectKeyError}\n                help={translate('onboarding.create_project.project_key.help')}\n                id=\"project-key\"\n                isInvalid={projectKeyIsInvalid}\n                isValid={projectKeyIsValid}\n                label={translate('onboarding.create_project.project_key')}\n                required={true}>\n                <input\n                  autoFocus={true}\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectKeyIsInvalid,\n                    'is-valid': projectKeyIsValid\n                  })}\n                  id=\"project-key\"\n                  maxLength={400}\n                  minLength={1}\n                  onChange={this.handleProjectKeyChange}\n                  type=\"text\"\n                  value={projectKey}\n                />\n              </ValidationInput>\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.display_name.description')}\n                error={projectNameError}\n                help={translate('onboarding.create_project.display_name.help')}\n                id=\"project-name\"\n                isInvalid={projectNameIsInvalid}\n                isValid={projectNameIsValid}\n                label={translate('onboarding.create_project.display_name')}\n                required={true}>\n                <input\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectNameIsInvalid,\n                    'is-valid': projectNameIsValid\n                  })}\n                  id=\"project-name\"\n                  maxLength={255}\n                  minLength={1}\n                  onChange={this.handleProjectNameChange}\n                  type=\"text\"\n                  value={projectName}\n                />\n              </ValidationInput>\n\n              <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n                {translate('set_up')}\n              </SubmitButton>\n              <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n            </form>\n          </div>\n\n          {isSonarCloud() && selectedOrganization && (\n            <div className=\"create-project-side-sticky\">\n              <UpgradeOrganizationBox\n                className={classNames('animated', { open: !canChoosePrivate })}\n                onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                organization={selectedOrganization}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport Tabs from 'sonar-ui-common/components/controls/Tabs';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmAppInfo } from '../../../api/alm-integration';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { hasAdvancedALMIntegration } from '../../../helpers/almIntegrations';\nimport { getOrganizationUrl, getProjectUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport AutoProjectCreate from './AutoProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations: () => Promise<void>;\n  skipOnboarding: () => void;\n  userOrganizations: T.Organization[];\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  loading: boolean;\n}\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  organization?: string;\n  tab?: TabKeys;\n}\n\nexport class CreateProjectPageSonarCloud extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (hasAdvancedALMIntegration(this.props.currentUser)) {\n      this.fetchAlmApplication();\n    } else {\n      this.setState({ loading: false });\n    }\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[], organization?: string) => {\n    this.props.skipOnboarding();\n    if (projectKeys.length > 1) {\n      this.props.router.push({\n        pathname: (organization ? getOrganizationUrl(organization) : '') + '/projects'\n      });\n    } else if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(\n      ({ application }) => {\n        if (this.mounted) {\n          this.setState({ almApplication: application, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrl({ tab });\n  };\n\n  updateUrl = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  render() {\n    const { currentUser, location, userOrganizations } = this.props;\n    const { almApplication, loading } = this.state;\n    const state: LocationState = location.state || {};\n    const header = translate('onboarding.create_project.header');\n    const showManualTab = state.tab === 'manual';\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <>\n              {almApplication && (\n                <Tabs<TabKeys>\n                  onChange={this.onTabChange}\n                  selected={state.tab || 'auto'}\n                  tabs={[\n                    {\n                      key: 'auto',\n                      node: translate('onboarding.create_project.select_repositories')\n                    },\n                    { key: 'manual', node: translate('onboarding.create_project.setup_manually') }\n                  ]}\n                />\n              )}\n\n              {showManualTab || !almApplication ? (\n                <ManualProjectCreate\n                  currentUser={currentUser}\n                  fetchMyOrganizations={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                  userOrganizations={userOrganizations.filter(\n                    ({ actions = {} }) => actions.provision\n                  )}\n                />\n              ) : (\n                <AutoProjectCreate\n                  almApplication={almApplication}\n                  boundOrganizations={userOrganizations.filter(\n                    ({ alm, actions = {} }) => alm && actions.provision\n                  )}\n                  onOrganizationUpgrade={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { skipOnboarding };\n\nexport default whenLoggedIn(\n  withUserOrganizations(connect(null, mapDispatchToProps)(CreateProjectPageSonarCloud))\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum CreateProjectModes {\n  Manual = 'manual',\n  BitbucketServer = 'bbs'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketProjectAccordionProps {\n  disableRepositories: boolean;\n  onClick?: () => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  open: boolean;\n  project: BitbucketProject;\n  repositories: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showingAllRepositories: boolean;\n}\n\nexport default function BitbucketProjectAccordion(props: BitbucketProjectAccordionProps) {\n  const {\n    disableRepositories,\n    open,\n    project,\n    repositories,\n    selectedRepository,\n    showingAllRepositories\n  } = props;\n\n  const repositoryCount = repositories.length;\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open,\n        'not-clickable': !props.onClick,\n        'no-hover': !props.onClick\n      })}\n      key={project.key}\n      onClick={\n        props.onClick\n          ? props.onClick\n          : () => {\n              /* noop */\n            }\n      }\n      open={open}\n      title={<h3>{project.name}</h3>}>\n      {open && (\n        <div className=\"display-flex-wrap\">\n          {repositoryCount === 0 && (\n            <Alert variant=\"warning\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.create_project.no_bbs_repos')}\n                id=\"onboarding.create_project.no_bbs_repos\"\n                values={{\n                  link: (\n                    <Link\n                      to={{\n                        pathname: '/projects/create',\n                        query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                      }}>\n                      {translate('onboarding.create_project.update_your_token')}\n                    </Link>\n                  )\n                }}\n              />\n            </Alert>\n          )}\n\n          {repositories.map(repo =>\n            repo.sqProjectKey ? (\n              <div\n                className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"\n                key={repo.id}>\n                <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                <div className=\"overflow-hidden\">\n                  <div className=\"little-spacer-bottom text-ellipsis\">\n                    <strong title={repo.name}>\n                      <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}</Link>\n                    </strong>\n                  </div>\n                  <em>{translate('onboarding.create_project.repository_imported')}</em>\n                </div>\n              </div>\n            ) : (\n              <Radio\n                checked={selectedRepository?.id === repo.id}\n                className={classNames(\n                  'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',\n                  {\n                    disabled: disableRepositories,\n                    'text-muted': disableRepositories,\n                    'link-no-underline': disableRepositories\n                  }\n                )}\n                key={repo.id}\n                onCheck={() => props.onSelectRepository(repo)}\n                value={String(repo.id)}>\n                <strong className=\"text-ellipsis\" title={repo.name}>\n                  {repo.name}\n                </strong>\n              </Radio>\n            )\n          )}\n\n          {!showingAllRepositories && repositoryCount > 0 && (\n            <Alert variant=\"warning\">\n              {translateWithParameters(\n                'onboarding.create_project.only_showing_X_first_repos',\n                repositoryCount\n              )}\n            </Alert>\n          )}\n        </div>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq, without } from 'lodash';\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketRepositoriesProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  projectRepositories: BitbucketProjectRepositories;\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketRepositories(props: BitbucketRepositoriesProps) {\n  const { disableRepositories, projects, projectRepositories, selectedRepository } = props;\n\n  const [openProjectKeys, setOpenProjectKeys] = React.useState(\n    projects.length > 0 ? [projects[0].key] : []\n  );\n\n  const allAreExpanded = projects.length <= openProjectKeys.length;\n\n  const handleClick = (isOpen: boolean, projectKey: string) => {\n    setOpenProjectKeys(\n      isOpen ? without(openProjectKeys, projectKey) : uniq([...openProjectKeys, projectKey])\n    );\n  };\n\n  return (\n    <>\n      <div className=\"overflow-hidden spacer-bottom\">\n        <ButtonLink\n          className=\"pull-right\"\n          onClick={() => setOpenProjectKeys(allAreExpanded ? [] : projects.map(p => p.key))}>\n          {allAreExpanded ? translate('collapse_all') : translate('expand_all')}\n        </ButtonLink>\n      </div>\n\n      {projects.map(project => {\n        const isOpen = openProjectKeys.includes(project.key);\n        const { allShown, repositories = [] } = projectRepositories[project.key] || {};\n\n        return (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            key={project.key}\n            onClick={() => handleClick(isOpen, project.key)}\n            onSelectRepository={props.onSelectRepository}\n            open={isOpen}\n            project={project}\n            repositories={repositories}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={allShown}\n          />\n        );\n      })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq } from 'lodash';\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketSearchResultsProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketSearchResults(props: BitbucketSearchResultsProps) {\n  const {\n    disableRepositories,\n    projects,\n    searching,\n    searchResults = [],\n    selectedRepository\n  } = props;\n\n  const filteredProjects = uniq(\n    searchResults.map(r => projects.find(p => p.key === r.projectKey)).filter(isDefined)\n  );\n\n  return filteredProjects.length === 0 && !searching ? (\n    <Alert className=\"big-spacer-top\" variant=\"warning\">\n      {translate('onboarding.create_project.no_bbs_repos.filter')}\n    </Alert>\n  ) : (\n    <div className=\"big-spacer-top\">\n      <DeferredSpinner loading={searching}>\n        {filteredProjects.map(project => {\n          const repositories = searchResults.filter(r => r.projectKey === project.key);\n\n          return (\n            <BitbucketProjectAccordion\n              disableRepositories={disableRepositories}\n              key={project.key}\n              onSelectRepository={props.onSelectRepository}\n              open={true}\n              project={project}\n              repositories={repositories}\n              selectedRepository={selectedRepository}\n              showingAllRepositories={true}\n            />\n          );\n        })}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketRepositories from './BitbucketRepositories';\nimport BitbucketSearchResults from './BitbucketSearchResults';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketImportRepositoryFormProps {\n  disableRepositories: boolean;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketImportRepositoryForm(props: BitbucketImportRepositoryFormProps) {\n  const {\n    disableRepositories,\n    projects = [],\n    projectRepositories = {},\n    searchResults,\n    searching,\n    selectedRepository\n  } = props;\n\n  if (projects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.no_bbs_projects')}\n          id=\"onboarding.create_project.no_bbs_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"create-project-import-bbs\">\n      <SearchBox\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_repositories_by_name')}\n      />\n\n      {searching || searchResults ? (\n        <BitbucketSearchResults\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projects={projects}\n          searchResults={searchResults}\n          searching={searching}\n          selectedRepository={selectedRepository}\n        />\n      ) : (\n        <BitbucketRepositories\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projectRepositories={projectRepositories}\n          projects={projects}\n          selectedRepository={selectedRepository}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface BitbucketPersonalAccessTokenFormProps {\n  bitbucketSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n}\n\nexport default function BitbucketPersonalAccessTokenForm(\n  props: BitbucketPersonalAccessTokenFormProps\n) {\n  const {\n    bitbucketSetting: { url },\n    submitting = false,\n    validationFailed\n  } = props;\n  const [touched, setTouched] = React.useState(false);\n\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const isInvalid = validationFailed && !touched;\n\n  return (\n    <div className=\"display-flex-start\">\n      <form\n        onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          const value = new FormData(e.currentTarget).get('personal_access_token') as string;\n          props.onPersonalAccessTokenCreate(value);\n        }}>\n        <h2 className=\"big\">{translate('onboarding.create_project.grant_access_to_bbs.title')}</h2>\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.grant_access_to_bbs.help')}\n        </p>\n\n        <ValidationInput\n          error={isInvalid ? translate('onboarding.create_project.pat_incorrect') : undefined}\n          id=\"personal_access_token\"\n          isInvalid={isInvalid}\n          isValid={false}\n          label={translate('onboarding.create_project.enter_pat')}\n          required={true}>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid\n            })}\n            id=\"personal_access_token\"\n            minLength={1}\n            name=\"personal_access_token\"\n            onChange={() => {\n              setTouched(true);\n            }}\n            type=\"text\"\n          />\n        </ValidationInput>\n\n        <SubmitButton disabled={isInvalid || submitting || !touched}>\n          {translate('save')}\n        </SubmitButton>\n        <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n      </form>\n\n      <Alert className=\"big-spacer-left big-spacer-top\" display=\"block\" variant=\"info\">\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.bbs_help_1')}\n        </p>\n\n        {url && (\n          <div className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"16\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            <a\n              href={`${url.replace(/\\/$/, '')}/plugins/servlet/access-tokens/add`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.create_project.pat_help.link')}\n            </a>\n          </div>\n        )}\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.bbs_help_2')}\n        </p>\n\n        <ul>\n          <li>\n            <FormattedMessage\n              defaultMessage={translate(\n                'onboarding.create_project.pat_help.bbs_permission_projects'\n              )}\n              id=\"onboarding.create_project.pat_help.bbs_permission_projects\"\n              values={{\n                perm: (\n                  <strong>{translate('onboarding.create_project.pat_help.read_permission')}</strong>\n                )\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.pat_help.bbs_permission_repos')}\n              id=\"onboarding.create_project.pat_help.bbs_permission_repos\"\n              values={{\n                perm: (\n                  <strong>{translate('onboarding.create_project.pat_help.read_permission')}</strong>\n                )\n              }}\n            />\n          </li>\n        </ul>\n      </Alert>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\nimport BitbucketImportRepositoryForm from './BitbucketImportRepositoryForm';\nimport BitbucketPersonalAccessTokenForm from './BitbucketPersonalAccessTokenForm';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\n\nexport interface BitbucketProjectCreateRendererProps {\n  bitbucketSetting?: AlmSettingsInstance;\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  onImportRepository: () => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onProjectCreate: (projectKeys: string[]) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function BitbucketProjectCreateRenderer(props: BitbucketProjectCreateRendererProps) {\n  const {\n    bitbucketSetting,\n    canAdmin,\n    importing,\n    loading,\n    projects,\n    projectRepositories,\n    selectedRepository,\n    searching,\n    searchResults,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        showBreadcrumb={true}\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            {translate('onboarding.create_project.from_bbs')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !bitbucketSetting && (\n        <Alert variant=\"error\">\n          {canAdmin ? (\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.no_bbs_binding.admin')}\n              id=\"onboarding.create_project.no_bbs_binding.admin\"\n              values={{\n                url: (\n                  <Link\n                    to={{\n                      pathname: '/admin/settings',\n                      query: { category: ALM_INTEGRATION }\n                    }}>\n                    {translate('settings.page')}\n                  </Link>\n                )\n              }}\n            />\n          ) : (\n            translate('onboarding.create_project.no_bbs_binding')\n          )}\n        </Alert>\n      )}\n\n      {!loading &&\n        bitbucketSetting &&\n        (showPersonalAccessTokenForm ? (\n          <BitbucketPersonalAccessTokenForm\n            bitbucketSetting={bitbucketSetting}\n            onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n            submitting={submittingToken}\n            validationFailed={tokenValidationFailed}\n          />\n        ) : (\n          <BitbucketImportRepositoryForm\n            disableRepositories={importing}\n            onSearch={props.onSearch}\n            onSelectRepository={props.onSelectRepository}\n            projectRepositories={projectRepositories}\n            projects={projects}\n            searchResults={searchResults}\n            searching={searching}\n            selectedRepository={selectedRepository}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getBitbucketServerProjects,\n  getBitbucketServerRepositories,\n  importBitbucketServerProject,\n  searchForBitbucketServerRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCreateProjectRenderer from './BitbucketProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  bitbucketSettings: AlmSettingsInstance[];\n  canAdmin?: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n}\n\ninterface State {\n  bitbucketSetting?: AlmSettingsInstance;\n  importing: boolean;\n  loading: boolean;\n  patIsValid?: boolean;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport class BitbucketProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      bitbucketSetting: props.bitbucketSettings[0],\n      importing: false,\n      loading: false,\n      searching: false,\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.bitbucketSettings.length === 0 && this.props.bitbucketSettings.length > 0) {\n      this.setState({ bitbucketSetting: this.props.bitbucketSettings[0] }, () =>\n        this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects;\n    if (patIsValid) {\n      projects = await this.fetchBitbucketProjects().catch(() => undefined);\n    }\n\n    let projectRepositories;\n    if (projects && projects.length > 0) {\n      projectRepositories = await this.fetchBitbucketRepositories(projects).catch(() => undefined);\n    }\n\n    if (this.mounted) {\n      this.setState({\n        patIsValid,\n        projects,\n        projectRepositories,\n        loading: false\n      });\n    }\n  };\n\n  checkPersonalAccessToken = () => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(bitbucketSetting.key);\n  };\n\n  fetchBitbucketProjects = (): Promise<BitbucketProject[] | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return getBitbucketServerProjects(bitbucketSetting.key).then(({ projects }) => projects);\n  };\n\n  fetchBitbucketRepositories = (\n    projects: BitbucketProject[]\n  ): Promise<BitbucketProjectRepositories | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return Promise.all(\n      projects.map(p => {\n        return getBitbucketServerRepositories(bitbucketSetting.key, p.name).then(\n          ({ isLastPage, repositories }) => ({\n            isLastPage,\n            repositories,\n            projectKey: p.key\n          })\n        );\n      })\n    ).then(results => {\n      return results.reduce(\n        (acc: BitbucketProjectRepositories, { isLastPage, projectKey, repositories }) => {\n          return { ...acc, [projectKey]: { allShown: isLastPage, repositories } };\n        },\n        {}\n      );\n    });\n  };\n\n  handlePersonalAccessTokenCreate = (token: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n    setAlmPersonalAccessToken(bitbucketSetting.key, token)\n      .then(this.checkPersonalAccessToken)\n      .then(patIsValid => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n          if (patIsValid) {\n            this.fetchInitialData();\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false });\n        }\n      });\n  };\n\n  handleImportRepository = () => {\n    const { bitbucketSetting, selectedRepository } = this.state;\n\n    if (!bitbucketSetting || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n    importBitbucketServerProject(\n      bitbucketSetting.key,\n      selectedRepository.projectKey,\n      selectedRepository.slug\n    )\n      .then(({ project: { key } }) => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n          this.props.onProjectCreate([key]);\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      });\n  };\n\n  handleSearch = (query: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return;\n    }\n\n    if (!query) {\n      this.setState({ searching: false, searchResults: undefined, selectedRepository: undefined });\n      return;\n    }\n\n    this.setState({ searching: true, selectedRepository: undefined });\n    searchForBitbucketServerRepositories(bitbucketSetting.key, query)\n      .then(({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ searching: false, searchResults: repositories });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ searching: false });\n        }\n      });\n  };\n\n  handleSelectRepository = (selectedRepository: BitbucketRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      bitbucketSetting,\n      importing,\n      loading,\n      patIsValid,\n      projectRepositories,\n      projects,\n      searching,\n      searchResults,\n      selectedRepository,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <BitbucketCreateProjectRenderer\n        bitbucketSetting={bitbucketSetting}\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        onImportRepository={this.handleImportRepository}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onProjectCreate={this.props.onProjectCreate}\n        onSearch={this.handleSearch}\n        onSelectRepository={this.handleSelectRepository}\n        projectRepositories={projectRepositories}\n        projects={projects}\n        searchResults={searchResults}\n        searching={searching}\n        selectedRepository={selectedRepository}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const { canAdmin } = getAppState(state);\n  return { canAdmin };\n};\n\nexport default connect(mapStateToProps)(BitbucketProjectCreate);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BitbucketProject, BitbucketRepository } from '../types/alm-integration';\nimport { ProjectBase } from './components';\n\nexport function setAlmPersonalAccessToken(almSetting: string, pat: string): Promise<void> {\n  return post('/api/alm_integrations/set_pat', { almSetting, pat }).catch(throwGlobalError);\n}\n\nexport function checkPersonalAccessTokenIsValid(almSetting: string): Promise<boolean> {\n  return get('/api/alm_integrations/check_pat', { almSetting })\n    .then(() => true)\n    .catch(response => {\n      if (response.status === 400) {\n        return false;\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function getBitbucketServerProjects(\n  almSetting: string\n): Promise<{ projects: BitbucketProject[] }> {\n  return getJSON('/api/alm_integrations/list_bitbucketserver_projects', { almSetting });\n}\n\nexport function getBitbucketServerRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    projectName\n  });\n}\n\nexport function importBitbucketServerProject(\n  almSetting: string,\n  projectKey: string,\n  repositorySlug: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_bitbucketserver_project', {\n    almSetting,\n    projectKey,\n    repositorySlug\n  }).catch(throwGlobalError);\n}\n\nexport function searchForBitbucketServerRepositories(\n  almSetting: string,\n  repositoryName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    repositoryName\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { CreateProjectModes } from './types';\n\nexport interface CreateProjectModeSelectionProps {\n  bbsBindingCount: number;\n  loadingBindings: boolean;\n  onSelectMode: (mode: CreateProjectModes) => void;\n}\n\nexport default function CreateProjectModeSelection(props: CreateProjectModeSelectionProps) {\n  const { bbsBindingCount, loadingBindings } = props;\n\n  return (\n    <>\n      <header className=\"huge-spacer-top big-spacer-bottom padded\">\n        <h1 className=\"text-center huge big-spacer-bottom\">\n          {translate('my_account.create_new.TRK')}\n        </h1>\n        <p className=\"text-center big\">{translate('onboarding.create_project.select_method')}</p>\n      </header>\n\n      <div className=\"create-project-modes huge-spacer-top display-flex-space-around\">\n        <button\n          className=\"button button-huge display-flex-column create-project-mode-type-manual\"\n          onClick={() => props.onSelectMode(CreateProjectModes.Manual)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/sonarcloud/analysis/manual.svg`}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.manual')}\n          </div>\n        </button>\n\n        <button\n          className=\"button button-huge big-spacer-left display-flex-column create-project-mode-type-bbs\"\n          disabled={bbsBindingCount !== 1}\n          onClick={() => props.onSelectMode(CreateProjectModes.BitbucketServer)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            width={80}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.from_bbs')}\n          </div>\n\n          {loadingBindings && (\n            <span>\n              {translate('onboarding.create_project.check_bbs_supported')}\n              <i className=\"little-spacer-left spinner\" />\n            </span>\n          )}\n\n          {!loadingBindings && bbsBindingCount !== 1 && (\n            <div className=\"text-muted small spacer-top\" style={{ lineHeight: 1.5 }}>\n              {translate('onboarding.create_project.bbs_not_configured')}\n              <HelpTooltip\n                className=\"little-spacer-left\"\n                overlay={\n                  bbsBindingCount === 0\n                    ? translate('onboarding.create_project.zero_bbs_instances')\n                    : translateWithParameters(\n                        'onboarding.create_project.too_many_bbs_instances_X',\n                        bbsBindingCount\n                      )\n                }\n              />\n            </div>\n          )}\n        </button>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmSettings } from '../../../api/alm-settings';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketProjectCreate from './BitbucketProjectCreate';\nimport CreateProjectModeSelection from './CreateProjectModeSelection';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\nimport { CreateProjectModes } from './types';\n\ninterface Props extends Pick<WithRouterProps, 'router' | 'location'> {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  bitbucketSettings: AlmSettingsInstance[];\n  loading: boolean;\n}\n\nexport class CreateProjectPageSonarQube extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { bitbucketSettings: [], loading: false };\n\n  componentDidMount() {\n    const {\n      appState: { branchesEnabled },\n      location\n    } = this.props;\n    this.mounted = true;\n    if (branchesEnabled) {\n      this.fetchAlmBindings();\n    }\n\n    if (location.query?.mode || !branchesEnabled) {\n      addWhitePageClass();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.location.query?.mode && !prevProps.location.query?.mode) {\n      addWhitePageClass();\n    } else if (!this.props.location.query?.mode && prevProps.location.query?.mode) {\n      removeWhitePageClass();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  fetchAlmBindings = () => {\n    this.setState({ loading: true });\n    getAlmSettings()\n      .then(almSettings => {\n        if (this.mounted) {\n          this.setState({\n            bitbucketSettings: almSettings.filter(s => s.alm === AlmKeys.Bitbucket),\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  handleModeSelect = (mode: CreateProjectModes) => {\n    const { router, location } = this.props;\n    router.push({\n      pathname: location.pathname,\n      query: { mode }\n    });\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled },\n      currentUser,\n      location\n    } = this.props;\n    const { bitbucketSettings, loading } = this.state;\n\n    const mode: CreateProjectModes | undefined = location.query?.mode;\n    const showManualForm = !branchesEnabled || mode === CreateProjectModes.Manual;\n    const showBBSForm = branchesEnabled && mode === CreateProjectModes.BitbucketServer;\n\n    return (\n      <>\n        <Helmet title={translate('my_account.create_new.TRK')} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-bottom position-relative\" id=\"create-project\">\n          {!showBBSForm && !showManualForm && (\n            <CreateProjectModeSelection\n              bbsBindingCount={bitbucketSettings.length}\n              loadingBindings={loading}\n              onSelectMode={this.handleModeSelect}\n            />\n          )}\n\n          {showManualForm && (\n            <ManualProjectCreate\n              branchesEnabled={branchesEnabled}\n              currentUser={currentUser}\n              onProjectCreate={this.handleProjectCreate}\n            />\n          )}\n\n          {showBBSForm && (\n            <BitbucketProjectCreate\n              bitbucketSettings={bitbucketSettings}\n              loadingBindings={loading}\n              location={location}\n              onProjectCreate={this.handleProjectCreate}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(withAppState(CreateProjectPageSonarQube));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { isSonarCloud } from '../../../helpers/system';\nimport CreateProjectPageSonarCloud from './CreateProjectPageSonarCloud';\nimport CreateProjectPageSonarQube from './CreateProjectPageSonarQube';\n\nexport default function CreateProjectPage(props: WithRouterProps) {\n  return (\n    <>\n      <A11ySkipTarget anchor=\"create_project_main\" />\n      {isSonarCloud() ? (\n        <CreateProjectPageSonarCloud {...props} />\n      ) : (\n        <CreateProjectPageSonarQube {...props} />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function getWrappedDisplayName<P>(\n  WrappedComponent: React.ComponentType<P>,\n  hocName: string\n) {\n  const wrappedDisplayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return `${hocName}(${wrappedDisplayName})`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withCurrentUser<P>(\n  WrappedComponent: React.ComponentType<P & { currentUser: T.CurrentUser }>\n) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withCurrentUser');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { currentUser: getCurrentUser(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum AlmKeys {\n  Azure = 'azure',\n  Bitbucket = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n\nexport interface AlmBindingDefinition {\n  key: string;\n}\n\nexport interface AzureBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmBindingDefinition {\n  appId: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url?: string;\n}\n\nexport interface ProjectAlmBinding {\n  key: string;\n  repository?: string;\n  slug?: string;\n  summaryCommentEnabled?: boolean;\n}\n\nexport interface AzureProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n\nexport interface BitbucketProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  summaryCommentEnabled: boolean;\n}\n\nexport interface GitlabProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository?: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: AlmKeys;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  azure: AzureBindingDefinition[];\n  bitbucket: BitbucketBindingDefinition[];\n  github: GithubBindingDefinition[];\n  gitlab: GitlabBindingDefinition[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { cleanQuery, parseAsOptionalString, serializeString } from 'sonar-ui-common/helpers/query';\nimport { decodeJwt } from 'sonar-ui-common/helpers/strings';\nimport { isBitbucket, isGithub } from '../../../helpers/almIntegrations';\n\nexport const ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP =\n  'sonarcloud.import_org.binding_in_progress';\n\nexport const ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP =\n  'sonarcloud.import_org.redirect_to_projects';\n\nexport const BIND_ORGANIZATION_KEY = 'sonarcloud.bind_org.key';\n\nexport const BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP = 'sonarcloud.bind_org.redirect_to_org';\n\nexport enum Step {\n  OrganizationDetails,\n  Plan\n}\n\nexport function formatPrice(price?: number, noSign?: boolean) {\n  const priceFormatted = formatMeasure(price, 'FLOAT')\n    .replace(/[.|,]0$/, '')\n    .replace(/([.|,]\\d)$/, '$10');\n  return noSign ? priceFormatted : translateWithParameters('billing.price_format', priceFormatted);\n}\n\nexport interface Query {\n  almInstallId?: string;\n  almKey?: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery = {}): Query => {\n    let almInstallId = undefined;\n    let almKey = undefined;\n\n    if (urlQuery['installation_id']) {\n      almKey = 'github';\n      almInstallId = parseAsOptionalString(urlQuery['installation_id']);\n    } else if (urlQuery['clientKey']) {\n      almKey = 'bitbucket';\n      almInstallId = parseAsOptionalString(urlQuery['clientKey']);\n    } else if (urlQuery['jwt']) {\n      const jwt = decodeJwt(urlQuery['jwt']);\n      if (jwt && jwt.iss) {\n        almKey = 'bitbucket';\n        almInstallId = jwt.iss;\n      }\n    }\n    return { almInstallId, almKey };\n  }\n);\n\nexport const serializeQuery = (query: Query): T.RawQuery =>\n  cleanQuery({\n    installation_id: isGithub(query.almKey) ? serializeString(query.almInstallId) : undefined,\n    clientKey: isBitbucket(query.almKey) ? serializeString(query.almInstallId) : undefined\n  });\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBinding,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBinding,\n  GithubBindingDefinition,\n  GithubProjectAlmBinding,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBinding,\n  ProjectAlmBinding\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions').catch(throwGlobalError);\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBinding> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBinding) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBinding) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBinding) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBinding) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\n\nconst TRIAL_DURATION_DAYS = 14;\n\nexport default function UpgradeOrganizationAdvantages() {\n  return (\n    <ul className=\"note\">\n      <Advantage>{translate('billing.upgrade_box.unlimited_private_projects')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.strict_control_private_data')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.cancel_anytime')}</Advantage>\n      <Advantage>\n        <strong>\n          {translateWithParameters('billing.upgrade_box.free_trial_x', TRIAL_DURATION_DAYS)}\n        </strong>\n      </Advantage>\n    </ul>\n  );\n}\n\nexport function Advantage({ children }: { children: React.ReactNode }) {\n  return (\n    <li className=\"display-flex-center little-spacer-bottom\">\n      <CheckIcon className=\"spacer-right\" fill={colors.lightGreen} />\n      {children}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ChildrenProps {\n  onSubmit: React.FormEventHandler;\n  processingUpgrade: boolean;\n  renderFormFields: () => React.ReactNode;\n  renderNextCharge: (className?: string) => React.ReactNode;\n  renderRecap: () => React.ReactNode;\n  renderSubmitButton: (submitText?: string) => React.ReactNode;\n  renderSubmitGroup: (submitText?: string) => React.ReactNode;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  initialCountry?: string;\n  currentUser: T.CurrentUser;\n  onCommit: () => void | Promise<void>;\n  onFailToUpgrade?: () => void;\n  organizationKey: string | (() => Promise<string>);\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\nexport default class BillingFormShim extends React.Component<Props> {\n  render() {\n    const { BillingForm } = (window as any).SonarBilling;\n    return <BillingForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport BillingFormShim from './BillingFormShim';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  insideModal?: boolean;\n  onUpgradeDone: () => void;\n  onClose: () => void;\n  organization: T.Organization;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  ready: boolean;\n}\n\nexport default class UpgradeOrganizationModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { ready: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const header = translate('billing.upgrade_box.upgrade_to_paid_plan');\n\n    if (!this.state.ready) {\n      return null;\n    }\n\n    return (\n      <Modal\n        contentLabel={header}\n        noBackdrop={this.props.insideModal}\n        onRequestClose={this.props.onClose}\n        shouldCloseOnOverlayClick={false}\n        size=\"medium\">\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <BillingForm\n          onCommit={this.props.onUpgradeDone}\n          organizationKey={this.props.organization.key}\n          subscriptionPlans={this.props.subscriptionPlans}>\n          {({\n            onSubmit,\n            processingUpgrade,\n            renderFormFields,\n            renderNextCharge,\n            renderRecap,\n            renderSubmitButton\n          }) => (\n            <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n              <div className=\"modal-body modal-container\">\n                <div className=\"huge-spacer-bottom\">\n                  <p className=\"spacer-bottom\">\n                    <FormattedMessage\n                      defaultMessage={translate('billing.upgrade.org_x_advantages')}\n                      id=\"billing.coupon.description\"\n                      values={{\n                        org: <strong>{this.props.organization.name}</strong>\n                      }}\n                    />\n                  </p>\n                  <UpgradeOrganizationAdvantages />\n                </div>\n                {renderFormFields()}\n                <div className=\"big-spacer-top\">{renderRecap()}</div>\n              </div>\n              <footer className=\"modal-foot display-flex-center display-flex-space-between\">\n                {renderNextCharge() || <span />}\n                <div>\n                  <DeferredSpinner loading={processingUpgrade} />\n                  {renderSubmitButton()}\n                  <ResetButtonLink onClick={this.props.onClose}>\n                    {translate('cancel')}\n                  </ResetButtonLink>\n                </div>\n              </footer>\n            </form>\n          )}\n        </BillingForm>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport { formatPrice } from '../organization/utils';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport UpgradeOrganizationModal from './UpgradeOrganizationModal';\n\ninterface Props {\n  className?: string;\n  insideModal?: boolean;\n  onOrganizationUpgrade: () => void;\n  organization: T.Organization;\n}\n\ninterface State {\n  subscriptionPlans: T.SubscriptionPlan[];\n  upgradeOrganizationModal: boolean;\n}\n\nexport default class UpgradeOrganizationBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { subscriptionPlans: [], upgradeOrganizationModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSubscriptionPlans();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleUpgradeClick = () => {\n    this.setState({ upgradeOrganizationModal: true });\n  };\n\n  handleUpgradeOrganizationModalClose = () => {\n    if (this.mounted) {\n      this.setState({ upgradeOrganizationModal: false });\n    }\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    this.handleUpgradeOrganizationModalClose();\n  };\n\n  render() {\n    if (!hasMessage('billing.upgrade_box.header')) {\n      return null;\n    }\n\n    const { subscriptionPlans, upgradeOrganizationModal } = this.state;\n    const startingPrice = subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <RadioCard\n          className={this.props.className}\n          title={translate('billing.upgrade_box.header')}\n          titleInfo={\n            startingPrice !== undefined && (\n              <FormattedMessage\n                defaultMessage={translate('billing.price_from_x')}\n                id=\"billing.price_from_x\"\n                values={{\n                  price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n                }}\n              />\n            )\n          }>\n          <>\n            <UpgradeOrganizationAdvantages />\n            <div className=\"big-spacer-left\">\n              <Button className=\"js-upgrade-organization\" onClick={this.handleUpgradeClick}>\n                {translate('billing.paid_plan.upgrade')}\n              </Button>\n              <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n                {translate('billing.pricing.learn_more')}\n              </Link>\n            </div>\n          </>\n        </RadioCard>\n        {upgradeOrganizationModal && (\n          <UpgradeOrganizationModal\n            insideModal={this.props.insideModal}\n            onClose={this.handleUpgradeOrganizationModalClose}\n            onUpgradeDone={this.handleOrganizationUpgrade}\n            organization={this.props.organization}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getSubscriptionPlans(): Promise<T.SubscriptionPlan[]> {\n  return getJSON('/api/billing/show_subscription_plans').then(\n    ({ subscriptionPlans }) => subscriptionPlans,\n    throwGlobalError\n  );\n}\n\nexport function giveDowngradeFeedback(data: {\n  organization: string;\n  feedback: string;\n  additionalFeedback?: string;\n}): Promise<void> {\n  return post('/api/billing/send_feedback', data);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getCorsJSON,\n  getJSON,\n  post,\n  postJSON,\n  requestTryAndRepeatUntil\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n"],"sourceRoot":""}