{"version":3,"sources":["webpack:///./src/main/js/components/workspace/WorkspaceComponentTitle.tsx","webpack:///./src/main/js/components/workspace/WorkspaceHeader.tsx","webpack:///./src/main/js/components/workspace/WorkspaceComponentViewer.tsx","webpack:///./src/main/js/components/SourceViewer/SourceViewer.tsx"],"names":["WorkspaceComponentTitle","component","limited","name","qualifier","className","handleDrag","_event","data","props","onResize","deltaY","render","this","children","offsetParent","document","body","onDrag","WorkspaceHeaderButton","icon","onClick","onCollapse","tooltip","maximized","onMinimize","onMaximize","onClose","color","Icon","fill","undefined","handleClose","key","handleIssueChange","_","refreshBranchStatus","handleLoaded","onLoad","path","q","container","line","row","querySelector","smooth","parent","topOffset","bottomOffset","branchLike","then","parents","length","fetchBranchStatus","pop","componentDidMount","documentElement","classList","add","componentWillUnmount","remove","ref","node","style","height","aroundLine","highlightedLine","onIssueChange","onLoaded","mapDispatchToProps","WorkspaceComponentViewer","SourceViewer"],"mappings":"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","file":"js/375.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { collapsePath } from 'sonar-ui-common/helpers/path';\nimport { ComponentDescriptor } from './context';\n\ninterface Props {\n  component: ComponentDescriptor;\n  limited?: boolean;\n}\n\nexport default function WorkspaceComponentTitle({ component, limited }: Props) {\n  const { name = 'â€”' } = component;\n  return (\n    <>\n      {component.qualifier && (\n        <QualifierIcon className=\"little-spacer-right\" qualifier={component.qualifier} />\n      )}\n      {limited ? collapsePath(name, 15) : name}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DraggableCore, DraggableData } from 'react-draggable';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport CollapseIcon from 'sonar-ui-common/components/icons/CollapseIcon';\nimport ExpandIcon from 'sonar-ui-common/components/icons/ExpandIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport MinimizeIcon from 'sonar-ui-common/components/icons/MinimizeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  children: React.ReactNode;\n  maximized?: boolean;\n  onClose: () => void;\n  onCollapse: () => void;\n  onMaximize: () => void;\n  onMinimize: () => void;\n  onResize: (deltaY: number) => void;\n}\n\nexport default class WorkspaceHeader extends React.PureComponent<Props> {\n  handleDrag = (_event: MouseEvent, data: DraggableData) => {\n    this.props.onResize(data.deltaY);\n  };\n\n  render() {\n    return (\n      <header className=\"workspace-viewer-header\">\n        <h6 className=\"workspace-viewer-name\">{this.props.children}</h6>\n\n        <DraggableCore offsetParent={document.body} onDrag={this.handleDrag}>\n          <div className=\"workspace-viewer-resize js-resize\" />\n        </DraggableCore>\n\n        <div className=\"workspace-viewer-actions\">\n          <WorkspaceHeaderButton\n            icon={MinimizeIcon}\n            onClick={this.props.onCollapse}\n            tooltip=\"workspace.minimize\"\n          />\n\n          {this.props.maximized ? (\n            <WorkspaceHeaderButton\n              icon={CollapseIcon}\n              onClick={this.props.onMinimize}\n              tooltip=\"workspace.normal_size\"\n            />\n          ) : (\n            <WorkspaceHeaderButton\n              icon={ExpandIcon}\n              onClick={this.props.onMaximize}\n              tooltip=\"workspace.full_window\"\n            />\n          )}\n\n          <WorkspaceHeaderButton\n            icon={ClearIcon}\n            onClick={this.props.onClose}\n            tooltip=\"workspace.close\"\n          />\n        </div>\n      </header>\n    );\n  }\n}\n\ninterface WorkspaceHeaderButtonProps {\n  icon: React.SFC<IconProps>;\n  onClick: () => void;\n  tooltip: string;\n}\n\nfunction WorkspaceHeaderButton({ icon: Icon, onClick, tooltip }: WorkspaceHeaderButtonProps) {\n  return (\n    <ButtonIcon\n      className=\"workspace-header-icon\"\n      color=\"#fff\"\n      onClick={onClick}\n      tooltip={translate(tooltip)}>\n      <Icon fill={undefined} />\n    </ButtonIcon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { getParents } from '../../api/components';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { fetchBranchStatus } from '../../store/rootActions';\nimport { BranchLike } from '../../types/branch-like';\nimport SourceViewer from '../SourceViewer/SourceViewer';\nimport { ComponentDescriptor } from './context';\nimport WorkspaceComponentTitle from './WorkspaceComponentTitle';\nimport WorkspaceHeader, { Props as WorkspaceHeaderProps } from './WorkspaceHeader';\n\nexport interface Props extends T.Omit<WorkspaceHeaderProps, 'children' | 'onClose'> {\n  component: ComponentDescriptor;\n  fetchBranchStatus: (branchLike: BranchLike, projectKey: string) => Promise<void>;\n  height: number;\n  onClose: (componentKey: string) => void;\n  onLoad: (details: { key: string; name: string; qualifier: string }) => void;\n}\n\nexport class WorkspaceComponentViewer extends React.PureComponent<Props> {\n  container?: HTMLElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.refreshBranchStatus = debounce(this.refreshBranchStatus, 1000);\n  }\n\n  componentDidMount() {\n    if (document.documentElement) {\n      document.documentElement.classList.add('with-workspace');\n    }\n  }\n\n  componentWillUnmount() {\n    if (document.documentElement) {\n      document.documentElement.classList.remove('with-workspace');\n    }\n  }\n\n  handleClose = () => {\n    this.props.onClose(this.props.component.key);\n  };\n\n  handleIssueChange = (_: T.Issue) => {\n    this.refreshBranchStatus();\n  };\n\n  handleLoaded = (component: T.SourceViewerFile) => {\n    this.props.onLoad({\n      key: this.props.component.key,\n      name: component.path,\n      qualifier: component.q\n    });\n\n    if (this.container && this.props.component.line) {\n      const row = this.container.querySelector(\n        `.source-line[data-line-number=\"${this.props.component.line}\"]`\n      );\n      if (row) {\n        scrollToElement(row, {\n          smooth: false,\n          parent: this.container,\n          topOffset: 50,\n          bottomOffset: 50\n        });\n      }\n    }\n  };\n\n  refreshBranchStatus = () => {\n    const { component } = this.props;\n    const { branchLike } = component;\n    if (branchLike && isPullRequest(branchLike)) {\n      getParents(component.key).then(\n        (parents?: any[]) => {\n          if (parents && parents.length > 0) {\n            this.props.fetchBranchStatus(branchLike, parents.pop().key);\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { component } = this.props;\n\n    return (\n      <div className=\"workspace-viewer\">\n        <WorkspaceHeader\n          maximized={this.props.maximized}\n          onClose={this.handleClose}\n          onCollapse={this.props.onCollapse}\n          onMaximize={this.props.onMaximize}\n          onMinimize={this.props.onMinimize}\n          onResize={this.props.onResize}>\n          <WorkspaceComponentTitle component={component} />\n        </WorkspaceHeader>\n\n        <div\n          className=\"workspace-viewer-container\"\n          ref={node => (this.container = node)}\n          style={{ height: this.props.height }}>\n          <SourceViewer\n            aroundLine={component.line}\n            branchLike={component.branchLike}\n            component={component.key}\n            highlightedLine={component.line}\n            onIssueChange={this.handleIssueChange}\n            onLoaded={this.handleLoaded}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchBranchStatus: fetchBranchStatus as any };\n\nexport default connect(null, mapDispatchToProps)(WorkspaceComponentViewer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\n\nconst SourceViewer = lazyLoadComponent(\n  () => import(/* webpackPrefetch: true */ './SourceViewerBase'),\n  'SourceViewer'\n);\nexport default SourceViewer;\n"],"sourceRoot":""}