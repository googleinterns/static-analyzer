{"version":3,"sources":["webpack:///./src/main/js/apps/account/organizations/OrganizationCard.tsx","webpack:///./src/main/js/apps/account/organizations/OrganizationsList.tsx","webpack:///./src/main/js/apps/account/organizations/UserOrganizations.tsx"],"names":["OrganizationCard","organization","actions","className","key","OrganizationAvatar","OrganizationLink","name","admin","description","url","href","rel","title","OrganizationsList","organizations","length","map","mounted","state","loading","stopLoading","setState","componentDidMount","this","props","fetchIfAnyoneCanCreateOrganizations","then","componentWillUnmount","render","anyoneCanCreate","canCreateOrganizations","canAdmin","to","mapDispatchToProps","Boolean","value"],"mappings":"4MA4Bc,SAAUA,EAAiB,G,IAAEC,EAAA,EAAAA,aACjC,IAAAC,eAAA,WACR,OACE,uBAAKC,UAAU,iCACb,yBAAOA,UAAU,6BACf,8BAAS,oBAAU,oBAA8B,K,IAAEF,EAAaG,KAGlE,sBAAID,UAAU,wBACZ,gBAACE,EAAA,EAAkB,CAACJ,aAAcA,IAClC,gBAACK,EAAA,EAAgB,CAACH,UAAU,0BAA0BF,aAAcA,GACjEA,EAAaM,MAEfL,EAAQM,OAAS,wBAAML,UAAU,qBAAqB,oBAAU,aAGhEF,EAAaQ,aACd,uBAAKN,UAAU,uBAAuBF,EAAaQ,eAGlDR,EAAaS,KACd,uBAAKP,UAAU,uBACb,qBAAGQ,KAAMV,EAAaS,IAAKE,IAAI,WAAWC,MAAOZ,EAAaS,KAC3DT,EAAaS,OCvBZ,SAAUI,EAAkB,G,IAAEC,EAAA,EAAAA,cAC1C,OAA6B,IAAzBA,EAAcC,OACT,2BAAM,oBAAU,wCAIvB,sBAAIb,UAAU,yBACX,IAAOY,GAAe,SAAAd,GAAgB,OAAAA,EAAaM,KAAb,uBAAuCU,KAC5E,SAAAhB,GAAgB,OACd,sBAAIG,IAAKH,EAAaG,KACpB,gBAACJ,EAAgB,CAACC,aAFN,S,0TCaxB,yE,OACE,EAAAiB,SAAU,EACV,EAAAC,MAAe,CAAEC,SAAS,GAW1B,EAAAC,YAAc,WACR,EAAKH,SACP,EAAKI,SAAS,CAAEF,SAAS,K,EAiC/B,OAhDgC,OAI9B,YAAAG,kBAAA,WACEC,KAAKN,SAAU,EACfM,KAAKC,MAAMC,sCAAsCC,KAAKH,KAAKH,YAAaG,KAAKH,cAG/E,YAAAO,qBAAA,WACEJ,KAAKN,SAAU,GASjB,YAAAW,OAAA,WACU,IAAAC,EAAA,WAAAA,gBACFC,GAA0BP,KAAKL,MAAMC,UAAYU,GAAmBN,KAAKC,MAAMO,UAErF,OACE,uBAAK7B,UAAU,kCACb,gBAAC,IAAM,CAACU,MAAO,oBAAU,8BAEzB,uBAAKV,UAAU,eACZ4B,GACC,uBAAK5B,UAAU,YACb,uBAAKA,UAAU,uBACb,gBAAC,OAAI,CAACA,UAAU,SAAS8B,GAAG,wBACzB,oBAAU,aAKnB,uBAAK9B,UAAU,qBACZqB,KAAKL,MAAMC,QACV,qBAAGjB,UAAU,YAEb,gBAACW,EAAiB,CAACC,cAAeS,KAAKC,MAAMV,oBAO3D,EAhDA,CAAgC,iBA2D1BmB,EAAqB,CACzBR,oCAAqC,KAGxB,6BAbS,SAACP,GACvB,IAAMW,EAAkB,gCAAsBX,EAAO,uCACrD,MAAO,CACLW,gBAAiBK,QAAQL,GAA6C,SAA1BA,EAAgBM,OAC5DJ,SAAU,sBAAYb,GAAOa,SAC7BjB,cAAe,6BAAmBI,MAQEe,EAAzB,CAA6C","file":"js/390.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport OrganizationLink from '../../../components/ui/OrganizationLink';\n\ninterface Props {\n  organization: T.Organization;\n}\n\nexport default function OrganizationCard({ organization }: Props) {\n  const { actions = {} } = organization;\n  return (\n    <div className=\"account-project-card clearfix\">\n      <aside className=\"account-project-side note\">\n        <strong>{translate('organization.key')}:</strong> {organization.key}\n      </aside>\n\n      <h3 className=\"account-project-name\">\n        <OrganizationAvatar organization={organization} />\n        <OrganizationLink className=\"spacer-left text-middle\" organization={organization}>\n          {organization.name}\n        </OrganizationLink>\n        {actions.admin && <span className=\"badge spacer-left\">{translate('admin')}</span>}\n      </h3>\n\n      {!!organization.description && (\n        <div className=\"markdown spacer-top\">{organization.description}</div>\n      )}\n\n      {!!organization.url && (\n        <div className=\"markdown spacer-top\">\n          <a href={organization.url} rel=\"nofollow\" title={organization.url}>\n            {organization.url}\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationCard from './OrganizationCard';\n\ninterface Props {\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationsList({ organizations }: Props) {\n  if (organizations.length === 0) {\n    return <div>{translate('my_account.organizations.no_results')}</div>;\n  }\n\n  return (\n    <ul className=\"account-projects-list\">\n      {sortBy(organizations, organization => organization.name.toLocaleLowerCase()).map(\n        organization => (\n          <li key={organization.key}>\n            <OrganizationCard organization={organization} />\n          </li>\n        )\n      )}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getAppState,\n  getGlobalSettingValue,\n  getMyOrganizations,\n  Store\n} from '../../../store/rootReducer';\nimport { fetchIfAnyoneCanCreateOrganizations } from './actions';\nimport OrganizationsList from './OrganizationsList';\n\ninterface StateProps {\n  anyoneCanCreate: boolean;\n  canAdmin?: boolean;\n  organizations: T.Organization[];\n}\n\ninterface DispatchProps {\n  fetchIfAnyoneCanCreateOrganizations: () => Promise<void>;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\ninterface State {\n  loading: boolean;\n}\n\nclass UserOrganizations extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchIfAnyoneCanCreateOrganizations().then(this.stopLoading, this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { anyoneCanCreate } = this.props;\n    const canCreateOrganizations = !this.state.loading && (anyoneCanCreate || this.props.canAdmin);\n\n    return (\n      <div className=\"account-body account-container\">\n        <Helmet title={translate('my_account.organizations')} />\n\n        <div className=\"boxed-group\">\n          {canCreateOrganizations && (\n            <div className=\"clearfix\">\n              <div className=\"boxed-group-actions\">\n                <Link className=\"button\" to=\"/create-organization\">\n                  {translate('create')}\n                </Link>\n              </div>\n            </div>\n          )}\n          <div className=\"boxed-group-inner\">\n            {this.state.loading ? (\n              <i className=\"spinner\" />\n            ) : (\n              <OrganizationsList organizations={this.props.organizations} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => {\n  const anyoneCanCreate = getGlobalSettingValue(state, 'sonar.organizations.anyoneCanCreate');\n  return {\n    anyoneCanCreate: Boolean(anyoneCanCreate && anyoneCanCreate.value === 'true'),\n    canAdmin: getAppState(state).canAdmin,\n    organizations: getMyOrganizations(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchIfAnyoneCanCreateOrganizations: fetchIfAnyoneCanCreateOrganizations as any\n} as DispatchProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserOrganizations);\n"],"sourceRoot":""}