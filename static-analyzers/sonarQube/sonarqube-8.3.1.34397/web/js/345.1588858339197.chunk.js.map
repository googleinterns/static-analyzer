{"version":3,"sources":["webpack:///./src/main/js/api/user_groups.ts","webpack:///../sonar-docs/src/tooltips/organizations/add-organization-member.md","webpack:///./src/main/js/apps/organizations/components/OrganizationGroupCheckbox.tsx","webpack:///./src/main/js/apps/organizationMembers/ManageMemberGroupsForm.tsx","webpack:///./src/main/js/apps/organizationMembers/RemoveMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersListItem.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersList.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersListHeader.tsx","webpack:///./src/main/js/apps/users/components/UsersSelectSearch.tsx","webpack:///./src/main/js/apps/organizationMembers/AddMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/SyncMemberForm.tsx","webpack:///./src/main/js/apps/organizationMembers/MembersPageHeader.tsx","webpack:///./src/main/js/apps/organizationMembers/OrganizationMembers.tsx","webpack:///./src/main/js/apps/organizationMembers/OrganizationMembersContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/hoc/utils.ts","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/components/hoc/withCurrentUser.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts"],"names":["searchUsersGroups","data","catch","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","then","r","updateGroup","deleteGroup","onCheck","checked","group","default","props","name","toggleCheck","render","className","disabled","onClick","this","mounted","state","loadUserGroups","setState","loading","login","member","organization","key","response","userGroups","groups","isGroupSelected","groupName","status","selected","prevState","handleSubmit","updateMemberGroups","Object","keys","onClose","componentDidMount","componentWillUnmount","header","hasChanges","onSubmit","onCloseClick","onFormSubmit","submitting","organizationGroups","map","id","event","preventDefault","removeMember","contentLabel","onRequestClose","autoFocus","removeMemberForm","manageGroupsForm","handleManageGroupsClick","closeManageGroupsForm","handleRemoveMemberClick","closeRemoveMemberForm","actions","Avatar","hash","avatar","size","admin","groupCount","ActionsDropdown","destructive","currentUser","members","length","sortedMembers","undefined","MembersListHeader","handleSearch","total","minLength","onChange","placeholder","alm","membersSync","overlay","href","url","rel","target","filterSearchResult","users","filter","user","excludedUsers","includes","slice","filterOptions","options","search","searchUsers","Math","min","searchResult","isLoading","handleInputChange","componentDidUpdate","prevProps","noResult","clearable","labelKey","noResultsText","handleValueChange","onInputChange","optionComponent","searchable","value","selectedUser","valueComponent","UsersSelectSearchValue","valueKey","handleMouseDown","evt","stopPropagation","onSelect","option","handleMouseEnter","onFocus","handleMouseMove","isFocused","onMouseDown","onMouseEnter","onMouseMove","role","title","children","open","openForm","closeForm","selectedMember","query","ps","q","addMember","selectedMemberChange","renderModal","memberLogins","handleConfirm","enabled","fetchOrganization","handleMemberSync","handleManualClick","handleAutoClick","refreshMembers","renderModalDescription","to","pathname","renderModalBody","hasOtherMembers","almKey","showWarning","Alert","variant","Boolean","orgMemberSync","cancelButtonText","confirmButtonText","confirmDisable","modalBody","modalHeader","modalHeaderDescription","onConfirm","buttonText","mapDispatchToProps","MembersPageHeader","isAdmin","hasMemberSync","showSyncNotif","isSyncEligible","personal","handleAddMember","DocTooltip","doc","defaultMessage","values","link","display","stopLoading","fetchMembers","paging","fetchGroups","handleSearchMembers","handleLoadMoreMembers","p","pageIndex","handleRemoveMember","updater","add","remove","promises","Promise","all","defer","Suggestions","suggestions","A11ySkipTarget","anchor","count","loadMore","ready","withCurrentUser","ownProps","params","organizationKey","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","getWrappedDisplayName","WrappedComponent","hocName","displayName","DocMarkdownBlock","content","childProps","overlayProps","isTooltip","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","label","weight","getFrontMatterPosition","lines","firstLine","lastLine","i","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","tag","beginning","ending","newContent","start","indexOf","end","substring","console","error","Error","module","exports","getFrontMatter","position","separateFrontMatter","frontmatter","join","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","replace","RegExp","Wrapper","getAlmMembersUrl","endsWith","isGithub","getUserAlmKey","externalProvider","sanitizeAlmId","hasAdvancedALMIntegration","isBitbucket","startsWith","isVSTS"],"mappings":"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","file":"js/345.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: T.Group[]; paging: T.Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<T.Paging & { users: T.UserSelected[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<T.Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n","export default \"Add new members to this organization and manage their permissions. Note that users must have signed up on the service to be able to find and add them.\\n\\n---\\n\\nSee also: [Manage a Team](/organizations/manage-team/)\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\n\ninterface Props {\n  group: T.Group;\n  checked: boolean;\n  onCheck: (name: string, checked: boolean) => void;\n}\n\nexport default class OrganizationGroupCheckbox extends React.PureComponent<Props> {\n  onCheck = (checked: boolean) => {\n    const { group } = this.props;\n    if (!group.default) {\n      this.props.onCheck(group.name, checked);\n    }\n  };\n\n  toggleCheck = () => {\n    this.onCheck(!this.props.checked);\n  };\n\n  render() {\n    const { group } = this.props;\n    return (\n      <li\n        className={classNames('capitalize list-item-checkable-link', { disabled: group.default })}\n        onClick={this.toggleCheck}>\n        <Checkbox checked={this.props.checked} onCheck={this.onCheck} /> {group.name}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy, pickBy, some } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getUserGroups, UserGroup } from '../../api/users';\nimport OrganizationGroupCheckbox from '../organizations/components/OrganizationGroupCheckbox';\n\ninterface Props {\n  onClose: () => void;\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  organizationGroups: T.Group[];\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: string[],\n    remove: string[]\n  ) => Promise<void>;\n}\n\ninterface State {\n  userGroups?: T.Dict<UserGroup & { status?: string }>;\n  loading?: boolean;\n}\n\nexport default class ManageMemberGroupsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadUserGroups();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadUserGroups = () => {\n    this.setState({ loading: true });\n    getUserGroups({\n      login: this.props.member.login,\n      organization: this.props.organization.key\n    }).then(\n      response => {\n        if (this.mounted) {\n          this.setState({ loading: false, userGroups: keyBy(response.groups, 'name') });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  isGroupSelected = (groupName: string) => {\n    if (this.state.userGroups) {\n      const group = this.state.userGroups[groupName] || {};\n      if (group.status) {\n        return group.status === 'add';\n      } else {\n        return group.selected === true;\n      }\n    }\n    return false;\n  };\n\n  onCheck = (groupName: string, checked: boolean) => {\n    this.setState((prevState: State) => {\n      const { userGroups = {} } = prevState;\n      const group = userGroups[groupName] || {};\n      let status = '';\n      if (group.selected && !checked) {\n        status = 'remove';\n      } else if (!group.selected && checked) {\n        status = 'add';\n      }\n      return { userGroups: { ...userGroups, [groupName]: { ...group, status } } };\n    });\n  };\n\n  handleSubmit = () => {\n    return this.props\n      .updateMemberGroups(\n        this.props.member,\n        Object.keys(pickBy(this.state.userGroups, group => group.status === 'add')),\n        Object.keys(pickBy(this.state.userGroups, group => group.status === 'remove'))\n      )\n      .then(this.props.onClose);\n  };\n\n  render() {\n    const { loading, userGroups = {} } = this.state;\n    const header = translate('organization.members.manage_groups');\n    const hasChanges = some(userGroups, group => group.status !== undefined);\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n            <div className=\"modal-body modal-container\">\n              <p>\n                <strong>\n                  {translateWithParameters(\n                    'organization.members.members_groups',\n                    this.props.member.name\n                  )}\n                </strong>\n              </p>\n              {loading ? (\n                <DeferredSpinner className=\"spacer-top\" />\n              ) : (\n                <ul className=\"list-spaced\">\n                  {this.props.organizationGroups.map(group => (\n                    <OrganizationGroupCheckbox\n                      checked={this.isGroupSelected(group.name)}\n                      group={group}\n                      key={group.id}\n                      onCheck={this.onCheck}\n                    />\n                  ))}\n                </ul>\n              )}\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting || !hasChanges}>{translate('save')}</SubmitButton>\n              <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  removeMember: (member: T.OrganizationMember) => void;\n}\n\nexport default class RemoveMemberForm extends React.PureComponent<Props> {\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.removeMember(this.props.member);\n    this.props.onClose();\n  };\n\n  render() {\n    const header = translate('users.remove');\n    return (\n      <Modal contentLabel={header} key=\"remove-member-modal\" onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            {translateWithParameters(\n              'organization.members.remove_x',\n              this.props.member.name,\n              this.props.organization.name\n            )}\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              <SubmitButton autoFocus={true} className=\"button-red\">\n                {translate('remove')}\n              </SubmitButton>\n              <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport Avatar from '../../components/ui/Avatar';\nimport ManageMemberGroupsForm from './ManageMemberGroupsForm';\nimport RemoveMemberForm from './RemoveMemberForm';\n\ninterface Props {\n  member: T.OrganizationMember;\n  organization: T.Organization;\n  organizationGroups: T.Group[];\n  removeMember?: (member: T.OrganizationMember) => void;\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: string[],\n    remove: string[]\n  ) => Promise<void>;\n}\n\ninterface State {\n  removeMemberForm: boolean;\n  manageGroupsForm: boolean;\n}\n\nconst AVATAR_SIZE = 36;\n\nexport default class MembersListItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { removeMemberForm: false, manageGroupsForm: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleManageGroupsClick = () => {\n    this.setState({ manageGroupsForm: true });\n  };\n\n  closeManageGroupsForm = () => {\n    if (this.mounted) {\n      this.setState({ manageGroupsForm: false });\n    }\n  };\n\n  handleRemoveMemberClick = () => {\n    this.setState({ removeMemberForm: true });\n  };\n\n  closeRemoveMemberForm = () => {\n    if (this.mounted) {\n      this.setState({ removeMemberForm: false });\n    }\n  };\n\n  render() {\n    const { member, organization, removeMember } = this.props;\n    const { actions = {} } = organization;\n    return (\n      <tr>\n        <td className=\"thin nowrap\">\n          <Avatar hash={member.avatar} name={member.name} size={AVATAR_SIZE} />\n        </td>\n        <td className=\"nowrap text-middle\">\n          <strong>{member.name}</strong>\n          <span className=\"note little-spacer-left\">{member.login}</span>\n        </td>\n        {actions.admin && (\n          <td className=\"text-right text-middle\">\n            {translateWithParameters(\n              'organization.members.x_groups',\n              formatMeasure(member.groupCount || 0, 'INT')\n            )}\n          </td>\n        )}\n        {actions.admin && (\n          <>\n            <td className=\"nowrap text-middle text-right\">\n              <ActionsDropdown>\n                <ActionsDropdownItem onClick={this.handleManageGroupsClick}>\n                  {translate('organization.members.manage_groups')}\n                </ActionsDropdownItem>\n                {removeMember && (\n                  <>\n                    <ActionsDropdownDivider />\n                    <ActionsDropdownItem destructive={true} onClick={this.handleRemoveMemberClick}>\n                      {translate('organization.members.remove')}\n                    </ActionsDropdownItem>\n                  </>\n                )}\n              </ActionsDropdown>\n            </td>\n\n            {this.state.manageGroupsForm && (\n              <ManageMemberGroupsForm\n                member={this.props.member}\n                onClose={this.closeManageGroupsForm}\n                organization={this.props.organization}\n                organizationGroups={this.props.organizationGroups}\n                updateMemberGroups={this.props.updateMemberGroups}\n              />\n            )}\n\n            {removeMember && this.state.removeMemberForm && (\n              <RemoveMemberForm\n                member={this.props.member}\n                onClose={this.closeRemoveMemberForm}\n                organization={this.props.organization}\n                removeMember={removeMember}\n              />\n            )}\n          </>\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MembersListItem from './MembersListItem';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  members: T.OrganizationMember[];\n  organizationGroups: T.Group[];\n  organization: T.Organization;\n  removeMember?: (member: T.OrganizationMember) => void;\n  updateMemberGroups: (\n    member: T.OrganizationMember,\n    add: Array<string>,\n    remove: Array<string>\n  ) => Promise<void>;\n}\n\nexport default class MembersList extends React.PureComponent<Props> {\n  render() {\n    const { currentUser, members } = this.props;\n\n    if (!members.length) {\n      return <div className=\"note\">{translate('no_results')}</div>;\n    }\n\n    const sortedMembers = sortBy(\n      members,\n      member => member.name,\n      member => member.login\n    );\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <table className=\"data zebra\">\n          <tbody>\n            {sortedMembers.map(member => (\n              <MembersListItem\n                key={member.login}\n                member={member}\n                organization={this.props.organization}\n                organizationGroups={this.props.organizationGroups}\n                removeMember={\n                  currentUser.login !== member.login ? this.props.removeMember : undefined\n                }\n                updateMemberGroups={this.props.updateMemberGroups}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getAlmMembersUrl, sanitizeAlmId } from '../../helpers/almIntegrations';\n\nexport interface Props {\n  handleSearch: (query?: string) => void;\n  organization: T.Organization;\n  total?: number;\n}\n\nexport default function MembersListHeader({ handleSearch, organization, total }: Props) {\n  return (\n    <div className=\"panel panel-vertical bordered-bottom spacer-bottom\">\n      <SearchBox\n        minLength={2}\n        onChange={handleSearch}\n        placeholder={translate('search.search_for_members')}\n      />\n      {total !== undefined && (\n        <span className=\"pull-right little-spacer-top\">\n          <strong>{formatMeasure(total, 'INT')}</strong> {translate('organization.members.members')}\n          {organization.alm && organization.alm.membersSync && (\n            <HelpTooltip\n              className=\"spacer-left\"\n              overlay={\n                <div className=\"abs-width-300 markdown cut-margins\">\n                  <p>\n                    {translate(\n                      'organization.members.auto_sync_total_help',\n                      sanitizeAlmId(organization.alm.key)\n                    )}\n                  </p>\n                  <hr />\n                  <p>\n                    <a\n                      href={getAlmMembersUrl(organization.alm.key, organization.alm.url)}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {translateWithParameters(\n                        'organization.members.see_all_members_on_x',\n                        translate(sanitizeAlmId(organization.alm.key))\n                      )}\n                    </a>\n                  </p>\n                </div>\n              }\n            />\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\n\ninterface Option {\n  login: string;\n  name: string;\n  avatar?: string;\n}\n\ninterface Props {\n  autoFocus?: boolean;\n  excludedUsers: string[];\n  handleValueChange: (option: Option) => void;\n  searchUsers: (query: string, ps: number) => Promise<{ users: Option[] }>;\n  selectedUser?: Option;\n}\n\ninterface State {\n  isLoading: boolean;\n  search: string;\n  searchResult: Option[];\n}\n\nconst LIST_SIZE = 10;\nconst AVATAR_SIZE = 16;\n\nexport default class UsersSelectSearch extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleSearch = debounce(this.handleSearch, 250);\n    this.state = { searchResult: [], isLoading: false, search: '' };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.handleSearch(this.state.search);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.excludedUsers !== prevProps.excludedUsers) {\n      this.handleSearch(this.state.search);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  filterSearchResult = ({ users }: { users: Option[] }) =>\n    users.filter(user => !this.props.excludedUsers.includes(user.login)).slice(0, LIST_SIZE);\n\n  filterOptions = (options: Option[]) => {\n    return options; // We don't filter anything, this is done by the WS\n  };\n\n  handleSearch = (search: string) => {\n    this.props\n      .searchUsers(search, Math.min(this.props.excludedUsers.length + LIST_SIZE, 500))\n      .then(this.filterSearchResult)\n      .then(\n        searchResult => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, searchResult });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ isLoading: false, searchResult: [] });\n          }\n        }\n      );\n  };\n\n  handleInputChange = (search: string) => {\n    if (search == null || search.length === 1) {\n      this.setState({ search });\n    } else {\n      this.setState({ isLoading: true, search });\n      this.handleSearch(search);\n    }\n  };\n\n  render() {\n    const noResult =\n      this.state.search.length === 1\n        ? translateWithParameters('select2.tooShort', 2)\n        : translate('no_results');\n    return (\n      <Select\n        autoFocus={this.props.autoFocus}\n        className=\"Select-big\"\n        clearable={false}\n        filterOptions={this.filterOptions}\n        isLoading={this.state.isLoading}\n        labelKey=\"name\"\n        noResultsText={noResult}\n        onChange={this.props.handleValueChange}\n        onInputChange={this.handleInputChange}\n        optionComponent={UsersSelectSearchOption}\n        options={this.state.searchResult}\n        placeholder=\"\"\n        searchable={true}\n        value={this.props.selectedUser}\n        valueComponent={UsersSelectSearchValue}\n        valueKey=\"login\"\n      />\n    );\n  }\n}\n\ninterface OptionProps {\n  children?: React.ReactNode;\n  className?: string;\n  isFocused?: boolean;\n  onFocus: (option: Option, evt: React.MouseEvent<HTMLDivElement>) => void;\n  onSelect: (option: Option, evt: React.MouseEvent<HTMLDivElement>) => void;\n  option: Option;\n}\n\nexport class UsersSelectSearchOption extends React.PureComponent<OptionProps> {\n  handleMouseDown = (evt: React.MouseEvent<HTMLDivElement>) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.props.onSelect(this.props.option, evt);\n  };\n\n  handleMouseEnter = (evt: React.MouseEvent<HTMLDivElement>) => {\n    this.props.onFocus(this.props.option, evt);\n  };\n\n  handleMouseMove = (evt: React.MouseEvent<HTMLDivElement>) => {\n    if (this.props.isFocused) {\n      return;\n    }\n    this.props.onFocus(this.props.option, evt);\n  };\n\n  render() {\n    const { option } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseMove={this.handleMouseMove}\n        role=\"listitem\"\n        title={option.name}>\n        <Avatar hash={option.avatar} name={option.name} size={AVATAR_SIZE} />\n        <strong className=\"spacer-left\">{this.props.children}</strong>\n        <span className=\"note little-spacer-left\">{option.login}</span>\n      </div>\n    );\n  }\n}\n\ninterface ValueProps {\n  value?: Option;\n  children?: React.ReactNode;\n}\n\nexport function UsersSelectSearchValue({ children, value }: ValueProps) {\n  return (\n    <div className=\"Select-value\" title={value ? value.name : ''}>\n      {value && value.login && (\n        <div className=\"Select-value-label\">\n          <Avatar hash={value.avatar} name={value.name} size={AVATAR_SIZE} />\n          <strong className=\"spacer-left\">{children}</strong>\n          <span className=\"note little-spacer-left\">{value.login}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { searchMembers } from '../../api/organizations';\nimport UsersSelectSearch from '../users/components/UsersSelectSearch';\n\ninterface Props {\n  addMember: (member: T.OrganizationMember) => void;\n  organization: T.Organization;\n  memberLogins: string[];\n}\n\ninterface State {\n  open: boolean;\n  selectedMember?: T.OrganizationMember;\n}\n\nexport default class AddMemberForm extends React.PureComponent<Props, State> {\n  state: State = {\n    open: false\n  };\n\n  openForm = () => {\n    this.setState({ open: true });\n  };\n\n  closeForm = () => {\n    this.setState({ open: false, selectedMember: undefined });\n  };\n\n  handleSearch = (query: string | undefined, ps: number) => {\n    const data = { organization: this.props.organization.key, ps, selected: 'deselected' };\n    if (!query) {\n      return searchMembers(data);\n    }\n    return searchMembers({ ...data, q: query });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.state.selectedMember) {\n      this.props.addMember(this.state.selectedMember);\n      this.closeForm();\n    }\n  };\n\n  selectedMemberChange = (member: T.OrganizationMember) => {\n    this.setState({ selectedMember: member });\n  };\n\n  renderModal() {\n    const header = translate('users.add');\n    return (\n      <Modal contentLabel={header} key=\"add-member-modal\" onRequestClose={this.closeForm}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label>{translate('users.search_description')}</label>\n              <UsersSelectSearch\n                autoFocus={true}\n                excludedUsers={this.props.memberLogins}\n                handleValueChange={this.selectedMemberChange}\n                searchUsers={this.handleSearch}\n                selectedUser={this.state.selectedMember}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              <SubmitButton disabled={!this.state.selectedMember}>\n                {translate('organization.members.add_to_members')}\n              </SubmitButton>\n              <ResetButtonLink onClick={this.closeForm}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Button key=\"add-member-button\" onClick={this.openForm}>\n          {translate('organization.members.add')}\n        </Button>\n        {this.state.open && this.renderModal()}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { setOrganizationMemberSync, syncMembers } from '../../api/organizations';\nimport { sanitizeAlmId } from '../../helpers/almIntegrations';\nimport { fetchOrganization } from '../../store/rootActions';\n\ninterface Props {\n  buttonText: string;\n  fetchOrganization: (key: string) => void;\n  hasOtherMembers?: boolean;\n  organization: T.Organization;\n  refreshMembers: () => Promise<void>;\n}\n\ninterface State {\n  membersSync: boolean;\n}\n\nexport class SyncMemberForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      membersSync: Boolean(props.organization.alm && props.organization.alm.membersSync)\n    };\n  }\n\n  handleConfirm = () => {\n    const { organization } = this.props;\n    const { membersSync } = this.state;\n\n    return setOrganizationMemberSync({\n      organization: organization.key,\n      enabled: membersSync\n    }).then(() => {\n      this.props.fetchOrganization(organization.key);\n      if (membersSync) {\n        return this.handleMemberSync();\n      }\n    });\n  };\n\n  handleManualClick = () => {\n    this.setState({ membersSync: false });\n  };\n\n  handleAutoClick = () => {\n    this.setState({ membersSync: true });\n  };\n\n  handleMemberSync = () => {\n    return syncMembers(this.props.organization.key).then(this.props.refreshMembers);\n  };\n\n  renderModalDescription = () => {\n    return (\n      <p className=\"spacer-top\">\n        {translate('organization.members.management.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/organizations/manage-team/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    );\n  };\n\n  renderModalBody = () => {\n    const { membersSync } = this.state;\n    const { hasOtherMembers, organization } = this.props;\n    const almKey = organization.alm && sanitizeAlmId(organization.alm.key);\n    const showWarning = hasOtherMembers && organization.alm && !organization.alm.membersSync;\n    return (\n      <div className=\"display-flex-stretch big-spacer-top\">\n        <RadioCard\n          onClick={this.handleManualClick}\n          selected={!membersSync}\n          title={translate('organization.members.management.manual')}>\n          <div className=\"spacer-left\">\n            <ul className=\"big-spacer-left note\">\n              <li className=\"spacer-bottom\">\n                {translate('organization.members.management.manual.add_members_manually')}\n              </li>\n              <li>{translate('organization.members.management.choose_members_permissions')}</li>\n            </ul>\n          </div>\n        </RadioCard>\n        <RadioCard\n          onClick={this.handleAutoClick}\n          selected={membersSync}\n          title={translateWithParameters(\n            'organization.members.management.automatic',\n            translate(almKey || '')\n          )}>\n          <div className=\"spacer-left\">\n            <ul className=\"big-spacer-left note\">\n              {almKey && (\n                <>\n                  <li className=\"spacer-bottom\">\n                    {translateWithParameters(\n                      'organization.members.management.automatic.synchronized_from_x',\n                      translate('organization', almKey)\n                    )}\n                  </li>\n                  <li className=\"spacer-bottom\">\n                    {translate(\n                      'organization.members.management.automatic.members_changes_reflected',\n                      almKey\n                    )}\n                  </li>\n                </>\n              )}\n              <li>{translate('organization.members.management.choose_members_permissions')}</li>\n            </ul>\n          </div>\n          {almKey && showWarning && (\n            <Alert className=\"big-spacer-top\" variant=\"warning\">\n              {translateWithParameters(\n                'organization.members.management.automatic.warning_x',\n                translate('organization', almKey)\n              )}\n            </Alert>\n          )}\n        </RadioCard>\n      </div>\n    );\n  };\n\n  render() {\n    const { organization } = this.props;\n    const orgMemberSync = Boolean(organization.alm && organization.alm.membersSync);\n    return (\n      <ConfirmButton\n        cancelButtonText={translate('close')}\n        confirmButtonText={translate('save')}\n        confirmDisable={this.state.membersSync === orgMemberSync}\n        modalBody={this.renderModalBody()}\n        modalHeader={translate('organization.members.management.title')}\n        modalHeaderDescription={this.renderModalDescription()}\n        onConfirm={this.handleConfirm}\n        size=\"medium\">\n        {({ onClick }) => <Button onClick={onClick}>{this.props.buttonText}</Button>}\n      </ConfirmButton>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization };\n\nexport default connect(null, mapDispatchToProps)(SyncMemberForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../components/docs/DocTooltip';\nimport { isGithub, sanitizeAlmId } from '../../helpers/almIntegrations';\nimport AddMemberForm from './AddMemberForm';\nimport SyncMemberForm from './SyncMemberForm';\n\nexport interface Props {\n  handleAddMember: (member: T.OrganizationMember) => void;\n  loading: boolean;\n  members?: T.OrganizationMember[];\n  organization: T.Organization;\n  refreshMembers: () => Promise<void>;\n}\n\nexport default function MembersPageHeader(props: Props) {\n  const { members, organization, refreshMembers } = props;\n  const memberLogins = members ? members.map(member => member.login) : [];\n  const isAdmin = organization.actions && organization.actions.admin;\n  const almKey = organization.alm && sanitizeAlmId(organization.alm.key);\n  const hasMemberSync = organization.alm && organization.alm.membersSync;\n  const showSyncNotif = isAdmin && organization.alm && !hasMemberSync;\n  const isSyncEligible =\n    almKey && isGithub(almKey) && organization.alm && !organization.alm.personal;\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">\n        {translate('organization.members.page')}\n        <DeferredSpinner className=\"little-spacer-left\" loading={props.loading} />\n      </h1>\n\n      {isAdmin && (\n        <div className=\"page-actions text-right\">\n          {isSyncEligible && !showSyncNotif && (\n            <SyncMemberForm\n              buttonText={translate('organization.members.config_synchro')}\n              hasOtherMembers={members && members.length > 1}\n              organization={organization}\n              refreshMembers={refreshMembers}\n            />\n          )}\n          {!hasMemberSync && (\n            <div className=\"display-inline-block spacer-left spacer-bottom\">\n              <AddMemberForm\n                addMember={props.handleAddMember}\n                memberLogins={memberLogins}\n                organization={organization}\n              />\n              <DocTooltip\n                className=\"spacer-left\"\n                doc={import(\n                  /* webpackMode: \"eager\" */ 'Docs/tooltips/organizations/add-organization-member.md'\n                )}\n              />\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"page-description\">\n        <FormattedMessage\n          defaultMessage={translate('organization.members.page.description')}\n          id=\"organization.members.page.description\"\n          values={{\n            link: (\n              <Link target=\"_blank\" to=\"/documentation/organizations/manage-team/\">\n                {translate('organization.members.manage_a_team')}\n              </Link>\n            )\n          }}\n        />\n        {almKey && isSyncEligible && showSyncNotif && (\n          <Alert className=\"spacer-top\" display=\"inline\" variant=\"info\">\n            {translateWithParameters(\n              'organization.members.auto_sync_members_from_org_x',\n              translate('organization', almKey)\n            )}\n            <span className=\"spacer-left\">\n              <SyncMemberForm\n                buttonText={translate('configure')}\n                hasOtherMembers={members && members.length > 1}\n                organization={organization}\n                refreshMembers={refreshMembers}\n              />\n            </span>\n          </Alert>\n        )}\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addMember, removeMember, searchMembers } from '../../api/organizations';\nimport { addUserToGroup, removeUserFromGroup, searchUsersGroups } from '../../api/user_groups';\nimport A11ySkipTarget from '../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport MembersList from './MembersList';\nimport MembersListHeader from './MembersListHeader';\nimport MembersPageHeader from './MembersPageHeader';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  organization: T.Organization;\n}\n\ninterface State {\n  groups: T.Group[];\n  loading: boolean;\n  members?: T.OrganizationMember[];\n  paging?: T.Paging;\n  query: string;\n}\n\nconst PAGE_SIZE = 50;\n\nexport default class OrganizationMembers extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    groups: [],\n    loading: true,\n    query: ''\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchMembers();\n    if (this.props.organization.actions && this.props.organization.actions.admin) {\n      this.fetchGroups();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchMembers = (query?: string) => {\n    this.setState({ loading: true });\n    searchMembers({\n      organization: this.props.organization.key,\n      ps: PAGE_SIZE,\n      q: query\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ loading: false, members: users, paging });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchGroups = () => {\n    searchUsersGroups({ organization: this.props.organization.key }).then(\n      ({ groups }) => {\n        if (this.mounted) {\n          this.setState({ groups });\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleSearchMembers = (query: string) => {\n    this.setState({ query });\n    this.fetchMembers(query || undefined); // empty string -> undefined\n  };\n\n  handleLoadMoreMembers = () => {\n    const { paging, query } = this.state;\n    if (!paging) {\n      return;\n    }\n\n    this.setState({ loading: true });\n    searchMembers({\n      organization: this.props.organization.key,\n      p: paging.pageIndex + 1,\n      ps: PAGE_SIZE,\n      q: query || undefined // empty string -> undefined\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState(({ members = [] }) => ({\n          loading: false,\n          members: [...members, ...users],\n          paging\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleAddMember = ({ login }: T.OrganizationMember) => {\n    // TODO optimistic update\n    addMember({ login, organization: this.props.organization.key }).then(\n      member => {\n        if (this.mounted) {\n          this.setState(({ members, paging }) => ({\n            members: members && [...members, member],\n            paging: paging && { ...paging, total: paging.total + 1 }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleRemoveMember = ({ login }: T.OrganizationMember) => {\n    // TODO optimistic update\n    removeMember({ login, organization: this.props.organization.key }).then(\n      () => {\n        if (this.mounted) {\n          this.setState(({ members, paging }) => ({\n            members: members && members.filter(member => member.login !== login),\n            paging: paging && { ...paging, total: paging.total - 1 }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  refreshMembers = () => {\n    return searchMembers({\n      organization: this.props.organization.key,\n      ps: PAGE_SIZE,\n      q: this.state.query || undefined\n    }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ members: users, paging });\n      }\n    });\n  };\n\n  updateGroup = (\n    login: string,\n    updater: (member: T.OrganizationMember) => T.OrganizationMember\n  ) => {\n    this.setState(({ members }) => ({\n      members: members && members.map(member => (member.login === login ? updater(member) : member))\n    }));\n  };\n\n  updateMemberGroups = ({ login }: T.OrganizationMember, add: string[], remove: string[]) => {\n    // TODO optimistic update\n    const promises = [\n      ...add.map(name =>\n        addUserToGroup({ name, login, organization: this.props.organization.key })\n      ),\n      ...remove.map(name =>\n        removeUserFromGroup({ name, login, organization: this.props.organization.key })\n      )\n    ];\n    return Promise.all(promises).then(() => {\n      if (this.mounted) {\n        this.updateGroup(login, member => ({\n          ...member,\n          groupCount: (member.groupCount || 0) + add.length - remove.length\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { currentUser, organization } = this.props;\n    const { groups, loading, members, paging } = this.state;\n    const hasMemberSync = organization.alm && organization.alm.membersSync;\n    return (\n      <div className=\"page page-limited\">\n        <Helmet defer={false} title={translate('organization.members.page')} />\n        <Suggestions suggestions=\"organization_members\" />\n        <A11ySkipTarget anchor=\"members_main\" />\n        <MembersPageHeader\n          handleAddMember={this.handleAddMember}\n          loading={loading}\n          members={members}\n          organization={organization}\n          refreshMembers={this.refreshMembers}\n        />\n        {members !== undefined && paging !== undefined && (\n          <>\n            <MembersListHeader\n              handleSearch={this.handleSearchMembers}\n              organization={organization}\n              total={paging.total}\n            />\n            <MembersList\n              currentUser={currentUser}\n              members={members}\n              organization={organization}\n              organizationGroups={groups}\n              removeMember={hasMemberSync ? undefined : this.handleRemoveMember}\n              updateMemberGroups={this.updateMemberGroups}\n            />\n            {paging.total !== 0 && (\n              <ListFooter\n                count={members.length}\n                loadMore={this.handleLoadMoreMembers}\n                ready={!loading}\n                total={paging.total}\n              />\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { withCurrentUser } from '../../components/hoc/withCurrentUser';\nimport { getOrganizationByKey, Store } from '../../store/rootReducer';\nimport OrganizationMembers from './OrganizationMembers';\n\ninterface OwnProps {\n  params: { organizationKey: string };\n}\n\ninterface StateProps {\n  organization: T.Organization;\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps): StateProps => {\n  return { organization: getOrganizationByKey(state, ownProps.params.organizationKey) };\n};\n\nexport default withCurrentUser(connect(mapStateToProps)(OrganizationMembers));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function getWrappedDisplayName<P>(\n  WrappedComponent: React.ComponentType<P>,\n  hocName: string\n) {\n  const wrappedDisplayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return `${hocName}(${wrappedDisplayName})`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoadComponent(() => import('./DocMarkdownBlock'), 'DocMarkdownBlock');\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    if (start < end) {\n      newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    } else {\n      // When conditional tags are incorrectly used we log an error, strip them out and pass to the next pair of tags\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          `Documentation - incorrect usage of conditional formatting tags here: \"${newContent.substring(\n            end,\n            start + beginning.length\n          )}\"`\n        )\n      );\n      newContent =\n        newContent.substring(0, end) +\n        newContent.substring(end + ending.length, start) +\n        newContent.substring(start + beginning.length);\n    }\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withCurrentUser<P>(\n  WrappedComponent: React.ComponentType<P & { currentUser: T.CurrentUser }>\n) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withCurrentUser');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { currentUser: getCurrentUser(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n"],"sourceRoot":""}