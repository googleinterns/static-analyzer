{"version":3,"sources":["webpack:///./src/main/js/apps/issues/sidebar/StandardFacet.tsx","webpack:///./src/main/js/apps/issues/styles.css?d1f0","webpack:///./src/main/js/apps/issues/styles.css","webpack:///./src/main/js/apps/issues/actions.ts","webpack:///./src/main/js/apps/issues/components/LocationNavigationKeyboardShortcuts.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssueLocationBadge.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssueLocations.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssueLocationsNavigatorLocation.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/CrossFileLocationsNavigator.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssueLocationsNavigator.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssueBox.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssueComponent.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssue.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssuesList.tsx","webpack:///./src/main/js/apps/issues/components/IssuesCounter.tsx","webpack:///./src/main/js/apps/issues/conciseIssuesList/ConciseIssuesListHeader.tsx","webpack:///./src/main/js/apps/issues/sidebar/AssigneeFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/AuthorFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/CreationDateFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/DirectoryFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/FileFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/LanguageFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/ProjectFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/ResolutionFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/RuleFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/SeverityFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/StatusFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/TagFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/TypeFacet.tsx","webpack:///./src/main/js/apps/issues/sidebar/Sidebar.tsx","webpack:///./src/main/js/apps/issues/components/BulkChangeModal.tsx","webpack:///./src/main/js/apps/issues/components/ComponentBreadcrumbs.tsx","webpack:///./src/main/js/apps/issues/components/ListItem.tsx","webpack:///./src/main/js/apps/issues/components/IssuesList.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/CrossComponentSourceViewer.tsx","webpack:///./src/main/js/apps/issues/components/IssuesSourceViewer.tsx","webpack:///./src/main/js/apps/issues/components/MyIssuesFilter.tsx","webpack:///./src/main/js/apps/issues/components/NoIssues.tsx","webpack:///./src/main/js/apps/issues/components/NoMyIssues.tsx","webpack:///./src/main/js/apps/issues/components/TotalEffort.tsx","webpack:///./src/main/js/apps/issues/components/PageActions.tsx","webpack:///./src/main/js/apps/issues/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/api/rules.ts"],"names":["mounted","property","state","standards","owaspTop10","sansTop25","cwe","sonarsourceSecurity","loadStandards","then","setState","getValues","props","map","item","handleHeaderClick","onToggle","handleOwaspTop10HeaderClick","handleSansTop25HeaderClick","handleSonarSourceSecurityHeaderClick","handleClear","onChange","handleItemClick","prop","itemValue","multiple","items","newValue","includes","length","handleOwaspTop10ItemClick","handleSansTop25ItemClick","handleSonarSourceSecurityItemClick","handleCWESearch","query","Promise","resolve","results","Object","keys","filter","toLowerCase","loadCWESearchResultCount","categories","loadSearchResultCount","renderList","statsProp","valuesProp","renderName","onClick","stats","values","key","renderFacetItemsList","renderTooltip","className","getStat","category","undefined","active","name","stat","tooltip","value","renderHint","options","componentDidMount","this","open","componentDidUpdate","prevProps","componentWillUnmount","renderOwaspTop10List","renderOwaspTop10Hint","renderSansTop25List","renderSansTop25Hint","renderSonarSourceSecurityList","renderSonarSourceSecurityHint","renderSubFacets","fetching","fetchingSonarSourceSecurity","sonarsourceSecurityOpen","fetchingOwaspTop10","owaspTop10Open","fetchingSansTop25","sansTop25Open","facetHeader","fetchingCwe","getFacetItemText","getSearchResultKey","getSearchResultText","onSearch","cweOpen","renderFacetItem","renderSearchResult","searchPlaceholder","cweStats","render","onClear","api","content","__esModule","default","module","i","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","enableLocationsNavigator","openIssue","selectedLocationIndex","secondaryLocations","flows","selectedFlowIndex","locationsNavigator","disableLocationsNavigator","selectNextLocation","lastLocationIdx","index","selectPreviousLocation","selectNextFlow","selectPreviousFlow","LocationNavigationKeyboardShortcuts","issue","hasSeveralFlows","ConciseIssueLocationBadge","mouseEnterDelay","overlay","count","LocationIndex","selected","collapsed","handleExpandClick","renderExpandButton","badges","forEach","flow","onFlowSelect","slice","LIMIT","handleClick","event","preventDefault","node","scroll","message","ref","href","LocationMessage","handleMoreLocationsClick","currentTarget","blur","groupByFile","locations","currentComponent","currentComponentName","groups","currentLocations","currentFirstLocationIndex","location","component","componentName","firstLocationIndex","renderLocation","onLocationSelect","renderGroup","group","groupIndex","onlyFirst","onlyLast","lastLocationIndex","msg","componentWillReceiveProps","nextProps","nextLocations","firstGroup","lastGroup","every","locationComponents","handleScroll","rootElement","messageElement","window","innerHeight","clickAttributesMain","role","tabIndex","clickAttributesTitle","TypeHelper","type","ConciseIssueComponent","path","previousIssue","displayComponent","componentLongName","onSelect","element","bottomOffset","scrollableElement","document","querySelector","topOffset","parent","issues","onIssueSelect","IssuesCounter","PageCounter","current","label","total","ConciseIssuesListHeader","displayBackButton","paging","selectedIndex","disabled","loading","onBackClick","onReload","handleSearch","page","organization","assignees","assigned","getAssigneeName","assignee","user","referencedUsers","login","getSortedItems","userName","Avatar","hash","avatar","size","result","displayName","ListStyleFacet","onItemClick","identity","author","_page","project","qualifier","ps","q","authors","maxResults","term","hasValue","createdAfter","createdAt","createdBefore","createdInLast","sinceLeakPeriod","resetTo","changes","handleBarClick","handlePeriodChange","from","to","handlePeriodClick","period","handleLeakPeriodClick","formatDate","renderBarChart","periods","data","start","endDate","startDate","setDate","getDate","tooltipEndDate","Date","x","y","barsWidth","Math","floor","width","maxValue","d","xValues","height","onBarClick","padding","renderExactDate","date","renderPeriodSelectors","DateRangeInput","renderPredefinedPeriods","FacetItem","renderInner","FacetBox","FacetHeader","defaultProps","directory","componentKey","p","components","dir","directories","renderDirectory","minSearchLength","getFilePath","fileUuid","referencedComponents","getReferencedComponent","find","uuid","file","files","renderFile","fileUuids","getLanguageName","language","referencedLanguages","getAllPossibleOptions","pageIndex","pageSize","installedLanguages","languages","qualifiers","refKey","getProjectName","projects","renderProject","Organization","link","organizationKey","RESOLUTIONS","resolutions","resolved","renderItem","resolution","isFacetItemActive","halfWidth","getFacetItemName","FacetItemsList","MultipleSelectionHint","f","join","s","include_external","response","rules","rule","getRuleName","ruleKey","referencedRules","formatRuleName","langName","SEVERITIES","severities","severity","SeverityHelper","STATUSES","statuses","status","StatusHelper","title","tags","getTagName","tag","renderTag","fill","gray60","types","t","renderComponentFacets","facets","loadingFacets","openFacets","commonProps","onFilterChange","onFacetToggle","referencedComponentsById","hideAuthorFacet","displayProjectsFacet","displayAuthorFacet","StandardFacet","owaspTop10Stats","sansTop25Stats","sonarsourceSecurityStats","referencedComponentsByKey","myIssues","AssigneeSelect","TagSelect","loadIssues","fetchIssues","additionalFields","getDefaultAssignee","currentUser","handleAssigneeSearch","r","userInfo","handleAssigneeSelect","handleTagsSearch","handleTagsSelect","field","handleFieldCheck","checked","handleRadioTransitionChange","transition","handleCommentChange","comment","handleSelectFieldChange","handleSubmit","add_tags","addTags","assign","do_transition","remove_tags","removeTags","sendNotifications","notifications","set_severity","set_type","issueKeys","submitting","onDone","error","throwGlobalError","renderLoading","onClose","renderAffected","affected","renderField","input","id","htmlFor","renderAssigneeOption","option","renderAssigneeField","hasAction","clearable","defaultOptions","renderOption","resetOnBlur","renderTypeField","optionRenderer","searchable","valueRenderer","renderSeverityField","renderTagOption","renderTagsField","allowCreate","initialTags","canCreate","minimumQueryLength","multi","onMultiSelect","promptTextCreator","promptCreateTag","renderTransitionsField","transitions","getAvailableTransitions","onCheck","renderCommentField","rows","MarkdownTips","renderNotificationsField","right","renderForm","limitReached","onSubmit","Alert","variant","defaultMessage","max","all","contentLabel","onRequestClose","action","actions","ComponentBreadcrumbs","displayOrganization","displayProject","displaySubProject","selectedLocation","projectName","subProject","subProjectName","handleFilter","issuesReset","startsWith","substr","projectKey","subProjectUuid","modules","componentUuid","branchLike","Issue","onFilter","onPopupToggle","openPopup","prerender","setTimeout","selectedIssue","onIssueChange","onIssueCheck","onIssueClick","lazyLoadComponent","scrollToIssue","smooth","offset","handleLoaded","shouldScrollBackToIssue","loc","highlightedLocationMessage","text","onLoaded","aroundLine","textRange","startLine","endLine","allMessagesEmpty","highlightedLocations","SourceViewer","displayAllIssues","displayIssueLocationsCount","displayIssueLocationsLink","displayLocationMarkers","slimHeader","onMyIssuesChange","NoIssues","NoMyIssues","TotalEffort","effort","0","renderShortcuts","effortTotal","canSetHome","HomePageSelect","currentPage","DEFAULT_QUERY","handleKeyDown","keyCode","altKey","handleKeyUp","getOpenIssue","selectNextIssue","getSelectedIndex","selectPreviousIssue","issueKey","pathname","scrollToSelectedIssue","router","replace","closeIssue","openSelectedIssue","additional","requestFacets","requestOrganizations","facet","parameters","componentKeys","sort","asc","Boolean","multiOrganizations","fetchIssuesPage","fetchIssuesUntil","done","recursiveFetch","prevIssues","pageIssues","other","fetchMoreIssues","reject","checkAll","loadingMore","fetchIssuesForComponent","_component","_from","isSameComponent","lastIssue","nextIssues","fetchFacet","users","isFiltered","serialized","getCheckedIssues","getButtonLabel","min","handleFilterChange","handleMyIssuesChange","closeFacet","handleFacetToggle","willOpenProperty","newState","handleReset","handlePopupToggle","popupName","samePopup","handleIssueCheck","handleIssueChange","refreshBranchStatus","candidate","handleOpenBulkChange","bulkChangeModal","handleCloseBulkChange","handleBulkChangeDone","fetchFirstIssues","handleReload","onBranchesChange","handleReloadAndOpenFirst","selectLocation","nextIndex","handleCheckAll","selectFlow","fetchBranchStatus","isLoggedIn","attachShortcuts","prevState","prevQuery","detachShortcuts","addEventListener","removeEventListener","findIndex","openIssueKey","some","cannotShowOpenIssue","renderBulkChange","isAllChecked","thirdState","isChecked","renderFacets","userOrganizations","userOrganization","o","FiltersHeader","displayReset","onReset","renderConciseIssuesList","loadMore","renderSide","ScreenPositionHelper","top","style","A11ySkipTarget","anchor","weight","noIssuesMessage","EmptySearch","renderHeader","renderPage","branch","pullRequest","Suggestions","suggestions","defer","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","getRulesApp","catch","searchRules","takeFacet","getRuleDetails","getRuleTags","createRule","deleteRule","updateRule"],"mappings":"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","file":"js/351.1588858339197.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit, sortBy, without } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { highlightTerm } from 'sonar-ui-common/helpers/search';\nimport FacetBox from '../../../components/facet/FacetBox';\nimport FacetHeader from '../../../components/facet/FacetHeader';\nimport FacetItem from '../../../components/facet/FacetItem';\nimport FacetItemsList from '../../../components/facet/FacetItemsList';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport MultipleSelectionHint from '../../../components/facet/MultipleSelectionHint';\nimport {\n  getStandards,\n  renderCWECategory,\n  renderOwaspTop10Category,\n  renderSansTop25Category,\n  renderSonarSourceSecurityCategory\n} from '../../../helpers/security-standard';\nimport { Facet, formatFacetStat, Query, STANDARDS } from '../utils';\n\ninterface Props {\n  cwe: string[];\n  cweOpen: boolean;\n  cweStats: T.Dict<number> | undefined;\n  fetchingCwe: boolean;\n  fetchingOwaspTop10: boolean;\n  fetchingSansTop25: boolean;\n  fetchingSonarSourceSecurity: boolean;\n  loadSearchResultCount?: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  owaspTop10: string[];\n  owaspTop10Open: boolean;\n  owaspTop10Stats: T.Dict<number> | undefined;\n  query: Partial<Query>;\n  sansTop25: string[];\n  sansTop25Open: boolean;\n  sansTop25Stats: T.Dict<number> | undefined;\n  sonarsourceSecurity: string[];\n  sonarsourceSecurityOpen: boolean;\n  sonarsourceSecurityStats: T.Dict<number> | undefined;\n}\n\ninterface State {\n  standards: T.Standards;\n}\n\ntype StatsProp = 'owaspTop10Stats' | 'cweStats' | 'sansTop25Stats' | 'sonarsourceSecurityStats';\ntype ValuesProp = T.StandardType;\n\nexport default class StandardFacet extends React.PureComponent<Props, State> {\n  mounted = false;\n  property = STANDARDS;\n  state: State = {\n    standards: { owaspTop10: {}, sansTop25: {}, cwe: {}, sonarsourceSecurity: {} }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n\n    // load standards.json only if the facet is open, or there is a selected value\n    if (\n      this.props.open ||\n      this.props.owaspTop10.length > 0 ||\n      this.props.cwe.length > 0 ||\n      this.props.sansTop25.length > 0 ||\n      this.props.sonarsourceSecurity.length > 0\n    ) {\n      this.loadStandards();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!prevProps.open && this.props.open) {\n      this.loadStandards();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadStandards = () => {\n    getStandards().then(\n      ({ owaspTop10, sansTop25, cwe, sonarsourceSecurity }: T.Standards) => {\n        if (this.mounted) {\n          this.setState({ standards: { owaspTop10, sansTop25, cwe, sonarsourceSecurity } });\n        }\n      },\n      () => {}\n    );\n  };\n\n  getValues = () => {\n    return [\n      ...this.props.sonarsourceSecurity.map(item =>\n        renderSonarSourceSecurityCategory(this.state.standards, item, true)\n      ),\n      ...this.props.owaspTop10.map(item =>\n        renderOwaspTop10Category(this.state.standards, item, true)\n      ),\n      ...this.props.sansTop25.map(item =>\n        renderSansTop25Category(this.state.standards, item, true)\n      ),\n      ...this.props.cwe.map(item => renderCWECategory(this.state.standards, item))\n    ];\n  };\n\n  handleHeaderClick = () => {\n    this.props.onToggle(this.property);\n  };\n\n  handleOwaspTop10HeaderClick = () => {\n    this.props.onToggle('owaspTop10');\n  };\n\n  handleSansTop25HeaderClick = () => {\n    this.props.onToggle('sansTop25');\n  };\n\n  handleSonarSourceSecurityHeaderClick = () => {\n    this.props.onToggle('sonarsourceSecurity');\n  };\n\n  handleClear = () => {\n    this.props.onChange({\n      [this.property]: [],\n      owaspTop10: [],\n      sansTop25: [],\n      cwe: [],\n      sonarsourceSecurity: []\n    });\n  };\n\n  handleItemClick = (prop: ValuesProp, itemValue: string, multiple: boolean) => {\n    const items = this.props[prop];\n    if (multiple) {\n      const newValue = sortBy(\n        items.includes(itemValue) ? without(items, itemValue) : [...items, itemValue]\n      );\n      this.props.onChange({ [prop]: newValue });\n    } else {\n      this.props.onChange({\n        [prop]: items.includes(itemValue) && items.length < 2 ? [] : [itemValue]\n      });\n    }\n  };\n\n  handleOwaspTop10ItemClick = (itemValue: string, multiple: boolean) => {\n    this.handleItemClick('owaspTop10', itemValue, multiple);\n  };\n\n  handleSansTop25ItemClick = (itemValue: string, multiple: boolean) => {\n    this.handleItemClick('sansTop25', itemValue, multiple);\n  };\n\n  handleSonarSourceSecurityItemClick = (itemValue: string, multiple: boolean) => {\n    this.handleItemClick('sonarsourceSecurity', itemValue, multiple);\n  };\n\n  handleCWESearch = (query: string) => {\n    return Promise.resolve({\n      results: Object.keys(this.state.standards.cwe).filter(cwe =>\n        renderCWECategory(this.state.standards, cwe)\n          .toLowerCase()\n          .includes(query.toLowerCase())\n      )\n    });\n  };\n\n  loadCWESearchResultCount = (categories: string[]) => {\n    const { loadSearchResultCount } = this.props;\n    return loadSearchResultCount\n      ? loadSearchResultCount('cwe', { cwe: categories })\n      : Promise.resolve({});\n  };\n\n  renderList = (\n    statsProp: StatsProp,\n    valuesProp: ValuesProp,\n    renderName: (standards: T.Standards, category: string) => string,\n    onClick: (x: string, multiple?: boolean) => void\n  ) => {\n    const stats = this.props[statsProp];\n    const values = this.props[valuesProp];\n    if (!stats) {\n      return null;\n    }\n    const categories = sortBy(Object.keys(stats), key => -stats[key]);\n    return this.renderFacetItemsList(stats, values, categories, renderName, renderName, onClick);\n  };\n\n  // eslint-disable-next-line max-params\n  renderFacetItemsList = (\n    stats: any,\n    values: string[],\n    categories: string[],\n    renderName: (standards: T.Standards, category: string) => React.ReactNode,\n    renderTooltip: (standards: T.Standards, category: string) => string,\n    onClick: (x: string, multiple?: boolean) => void\n  ) => {\n    if (!categories.length) {\n      return (\n        <div className=\"search-navigator-facet-empty little-spacer-top\">\n          {translate('no_results')}\n        </div>\n      );\n    }\n\n    const getStat = (category: string) => {\n      return stats ? stats[category] : undefined;\n    };\n\n    return (\n      <FacetItemsList>\n        {categories.map(category => (\n          <FacetItem\n            active={values.includes(category)}\n            key={category}\n            name={renderName(this.state.standards, category)}\n            onClick={onClick}\n            stat={formatFacetStat(getStat(category))}\n            tooltip={renderTooltip(this.state.standards, category)}\n            value={category}\n          />\n        ))}\n      </FacetItemsList>\n    );\n  };\n\n  renderHint = (statsProp: StatsProp, valuesProp: ValuesProp) => {\n    const stats = this.props[statsProp] || {};\n    const values = this.props[valuesProp];\n    return <MultipleSelectionHint options={Object.keys(stats).length} values={values.length} />;\n  };\n\n  renderOwaspTop10List() {\n    return this.renderList(\n      'owaspTop10Stats',\n      'owaspTop10',\n      renderOwaspTop10Category,\n      this.handleOwaspTop10ItemClick\n    );\n  }\n\n  renderOwaspTop10Hint() {\n    return this.renderHint('owaspTop10Stats', 'owaspTop10');\n  }\n\n  renderSansTop25List() {\n    return this.renderList(\n      'sansTop25Stats',\n      'sansTop25',\n      renderSansTop25Category,\n      this.handleSansTop25ItemClick\n    );\n  }\n\n  renderSansTop25Hint() {\n    return this.renderHint('sansTop25Stats', 'sansTop25');\n  }\n\n  renderSonarSourceSecurityList() {\n    return this.renderList(\n      'sonarsourceSecurityStats',\n      'sonarsourceSecurity',\n      renderSonarSourceSecurityCategory,\n      this.handleSonarSourceSecurityItemClick\n    );\n  }\n\n  renderSonarSourceSecurityHint() {\n    return this.renderHint('sonarsourceSecurityStats', 'sonarsourceSecurity');\n  }\n\n  renderSubFacets() {\n    return (\n      <>\n        <FacetBox className=\"is-inner\" property=\"sonarsourceSecurity\">\n          <FacetHeader\n            fetching={this.props.fetchingSonarSourceSecurity}\n            name={translate('issues.facet.sonarsourceSecurity')}\n            onClick={this.handleSonarSourceSecurityHeaderClick}\n            open={this.props.sonarsourceSecurityOpen}\n            values={this.props.sonarsourceSecurity.map(item =>\n              renderSonarSourceSecurityCategory(this.state.standards, item)\n            )}\n          />\n          {this.props.sonarsourceSecurityOpen && (\n            <>\n              {this.renderSonarSourceSecurityList()}\n              {this.renderSonarSourceSecurityHint()}\n            </>\n          )}\n        </FacetBox>\n        <FacetBox className=\"is-inner\" property=\"owaspTop10\">\n          <FacetHeader\n            fetching={this.props.fetchingOwaspTop10}\n            name={translate('issues.facet.owaspTop10')}\n            onClick={this.handleOwaspTop10HeaderClick}\n            open={this.props.owaspTop10Open}\n            values={this.props.owaspTop10.map(item =>\n              renderOwaspTop10Category(this.state.standards, item)\n            )}\n          />\n          {this.props.owaspTop10Open && (\n            <>\n              {this.renderOwaspTop10List()}\n              {this.renderOwaspTop10Hint()}\n            </>\n          )}\n        </FacetBox>\n        <FacetBox className=\"is-inner\" property=\"sansTop25\">\n          <FacetHeader\n            fetching={this.props.fetchingSansTop25}\n            name={translate('issues.facet.sansTop25')}\n            onClick={this.handleSansTop25HeaderClick}\n            open={this.props.sansTop25Open}\n            values={this.props.sansTop25.map(item =>\n              renderSansTop25Category(this.state.standards, item)\n            )}\n          />\n          {this.props.sansTop25Open && (\n            <>\n              {this.renderSansTop25List()}\n              {this.renderSansTop25Hint()}\n            </>\n          )}\n        </FacetBox>\n        <ListStyleFacet<string>\n          className=\"is-inner\"\n          facetHeader={translate('issues.facet.cwe')}\n          fetching={this.props.fetchingCwe}\n          getFacetItemText={item => renderCWECategory(this.state.standards, item)}\n          getSearchResultKey={item => item}\n          getSearchResultText={item => renderCWECategory(this.state.standards, item)}\n          loadSearchResultCount={this.loadCWESearchResultCount}\n          onChange={this.props.onChange}\n          onSearch={this.handleCWESearch}\n          onToggle={this.props.onToggle}\n          open={this.props.cweOpen}\n          property=\"cwe\"\n          query={omit(this.props.query, 'cwe')}\n          renderFacetItem={item => renderCWECategory(this.state.standards, item)}\n          renderSearchResult={(item, query) =>\n            highlightTerm(renderCWECategory(this.state.standards, item), query)\n          }\n          searchPlaceholder={translate('search.search_for_cwe')}\n          stats={this.props.cweStats}\n          values={this.props.cwe}\n        />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <FacetBox property={this.property}>\n        <FacetHeader\n          name={translate('issues.facet', this.property)}\n          onClear={this.handleClear}\n          onClick={this.handleHeaderClick}\n          open={this.props.open}\n          values={this.getValues()}\n        />\n\n        {this.props.open && this.renderSubFacets()}\n      </FacetBox>\n    );\n  }\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".issues-main-header .component-name{line-height:24px}.issues-main-header-spinner{margin-right:2px}.concise-issues-list-header-inner{width:260px;text-align:center}.concise-issues-list-header .spinner{margin-top:4px;margin-left:1px;margin-right:1px}.concise-issues-list-header-button{border:none}.concise-issues-list-header-button path{fill:#777;transition:fill .3s ease}.concise-issues-list-header-button:hover path{fill:#4b9fd5}.concise-issue-component{margin-top:16px;margin-bottom:4px;padding-left:8px;padding-right:8px}.concise-issue-box{position:relative;z-index:1;margin-bottom:4px;padding:7px;border:2px solid #e6e6e6;background-color:#fff;cursor:pointer;transition:background-color .3s ease,border-color .3s ease}.concise-issue-box:hover{border:2px dashed #4b9fd5}.concise-issue-box:focus{outline:none}.concise-issue-box.selected{z-index:2;border:2px solid #4b9fd5;cursor:default}.concise-issue-box-message{overflow:hidden;text-overflow:ellipsis;font-weight:700}.concise-issue-box-message:focus{outline:none}.concise-issue-box.selected .concise-issue-box-message{cursor:pointer}.concise-issue-box-attributes{margin-top:8px;line-height:16px;font-size:12px;display:flex;align-items:flex-start;flex-wrap:wrap;justify-content:flex-start}.concise-issue-box:not(.selected) .location-index{background-color:#ccc}.concise-issue-locations{display:inline-block;margin-bottom:-4px;margin-left:8px}.concise-issue-box-attributes>.location-index{margin-bottom:4px;margin-right:4px}.concise-issue-box-attributes>.concise-issue-expand{background-color:transparent;border:1px solid #d18582;height:16px;color:#d18582;font-weight:700;font-size:16px;line-height:8px;padding-bottom:6px}.concise-issue-box-attributes>.concise-issue-expand:hover{background-color:#d18582;color:#fff}.concise-issue-locations-navigator-location{position:relative;z-index:3;display:inline-flex;align-items:flex-start;max-width:100%;border:none}.concise-issue-locations-navigator-file{position:relative}.concise-issue-locations-navigator-file+.concise-issue-locations-navigator-file{margin-top:12px}.concise-issue-locations-navigator-file:not(:last-child):before{position:absolute;display:block;width:0;top:13px;bottom:-16px;left:4px;border-left:1px dotted #d18582;content:\\\"\\\"}.concise-issue-location-file{height:16px;padding-bottom:4px;font-size:12px;font-weight:700;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.concise-issue-location-file-circle,.concise-issue-location-file-circle-multiple,.concise-issue-location-file-circle-multiple:after,.concise-issue-location-file-circle-multiple:before{position:relative;top:1px;display:inline-block;width:9px;height:9px;border:1px solid #d18582;border-radius:100%;box-sizing:border-box;background-color:#f2dede}.concise-issue-location-file-circle-multiple{top:-2px}.concise-issue-location-file-circle-multiple:before{position:absolute;z-index:7;top:2px;left:-1px;content:\\\"\\\"}.concise-issue-location-file-circle-multiple:after{position:absolute;z-index:8;top:5px;left:-1px;content:\\\"\\\"}.concise-issue-location-file-locations{padding-left:16px}.concise-issue-location-file-more{border-color:rgba(209,133,130,.2);color:#d18582!important;font-style:italic;font-weight:400}.concise-issue-location-file-more:focus,.concise-issue-location-file-more:hover{border-color:rgba(209,133,130,.6)}.component-source-container{border:1px solid #cdcdcd}.component-source-container+.component-source-container{margin-top:8px}.component-source-container-header{background-color:#efefef;padding:8px}.issues-my-issues-filter{margin-bottom:24px;text-align:center}.issues-page-actions{display:inline-block;min-width:80px;text-align:right}.issues .issue-list{min-width:640px;width:800px}.issues .issue{border:2px solid transparent;cursor:pointer}.issues .issue:focus-within,.issues .issue:hover{border:2px dashed #4b9fd5;transition:all .3s ease;outline:0}.issues .issue a:focus,.issues .issue button:focus{box-shadow:none;outline:1px dotted #4b9fd5}@media (max-width:1320px){.issues .issue-list{width:calc(60vw - 40px)}}.issue-location{display:inline-block;vertical-align:top;line-height:18px;height:18px;box-sizing:border-box;background-color:#f2dede;transition:background-color .3s ease}.issues-workspace-list-component{padding:10px 10px 6px}.issues-workspace-list-item+.issues-workspace-list-item{margin-top:5px}.issues-workspace-list-component+.issues-workspace-list-item{margin-top:10px}.issues-workspace-list-item:first-child .issues-workspace-list-component{padding-top:0}.issues-workspace-list-component+.issues-workspace-list-item{margin-top:0}.issues-predefined-periods{display:flex}.issues-predefined-periods .search-navigator-facet{width:auto;margin-right:4px}.bulk-change-radio-button{margin:0 -4px;padding:0 4px}.bulk-change-radio-button:hover{background-color:#f3f3f3}.navigation-keyboard-shortcuts>span{background-color:hsla(0,0%,78.4%,.5);border-radius:16px;display:inline-block;font-size:12px;height:16px;padding:4px 8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { State } from './components/App';\nimport { allLocationsEmpty } from './utils';\n\nexport function enableLocationsNavigator(state: State) {\n  const { openIssue, selectedLocationIndex } = state;\n  if (openIssue && (openIssue.secondaryLocations.length > 0 || openIssue.flows.length > 0)) {\n    const selectedFlowIndex =\n      state.selectedFlowIndex || (openIssue.flows.length > 0 ? 0 : undefined);\n\n    if (!allLocationsEmpty(openIssue, selectedFlowIndex)) {\n      return {\n        locationsNavigator: true,\n        selectedFlowIndex,\n        // Also reset index = -1 to 0, we don't want to start on the issue when enabling the location navigator\n        selectedLocationIndex:\n          !selectedLocationIndex || selectedLocationIndex < 0 ? 0 : selectedLocationIndex\n      };\n    }\n  }\n  return null;\n}\n\nexport function disableLocationsNavigator() {\n  return { locationsNavigator: false };\n}\n\nexport function selectLocation(nextIndex: number) {\n  return (state: Pick<State, 'selectedLocationIndex' | 'openIssue'>) => {\n    const { selectedLocationIndex: index, openIssue } = state;\n    if (openIssue) {\n      if (index === nextIndex) {\n        // disable locations when selecting (clicking) the same location\n        return {\n          locationsNavigator: false,\n          selectedLocationIndex: undefined\n        };\n      } else {\n        return { locationsNavigator: true, selectedLocationIndex: nextIndex };\n      }\n    }\n    return null;\n  };\n}\n\nexport function selectNextLocation(\n  state: Pick<State, 'selectedFlowIndex' | 'selectedLocationIndex' | 'openIssue'>\n) {\n  const { selectedFlowIndex, selectedLocationIndex: index, openIssue } = state;\n  if (openIssue) {\n    const locations =\n      selectedFlowIndex !== undefined\n        ? openIssue.flows[selectedFlowIndex]\n        : openIssue.secondaryLocations;\n    const lastLocationIdx = locations.length - 1;\n    if (index === lastLocationIdx) {\n      // -1 to jump back to the issue itself\n      return { selectedLocationIndex: -1 };\n    }\n    return {\n      selectedLocationIndex: index !== undefined && index < lastLocationIdx ? index + 1 : index\n    };\n  }\n  return null;\n}\n\nexport function selectPreviousLocation(state: State) {\n  const { selectedFlowIndex, selectedLocationIndex: index, openIssue } = state;\n  if (openIssue) {\n    if (index === -1) {\n      const locations =\n        selectedFlowIndex !== undefined\n          ? openIssue.flows[selectedFlowIndex]\n          : openIssue.secondaryLocations;\n      const lastLocationIdx = locations.length - 1;\n      return { selectedLocationIndex: lastLocationIdx };\n    }\n    return { selectedLocationIndex: index !== undefined && index > 0 ? index - 1 : index };\n  }\n  return null;\n}\n\nexport function selectFlow(nextIndex?: number) {\n  return () => {\n    return { locationsNavigator: true, selectedFlowIndex: nextIndex, selectedLocationIndex: 0 };\n  };\n}\n\nexport function selectNextFlow(state: State) {\n  const { openIssue, selectedFlowIndex } = state;\n  if (\n    openIssue &&\n    selectedFlowIndex !== undefined &&\n    openIssue.flows.length > selectedFlowIndex + 1\n  ) {\n    return { selectedFlowIndex: selectedFlowIndex + 1, selectedLocationIndex: 0 };\n  }\n  return null;\n}\n\nexport function selectPreviousFlow(state: State) {\n  const { openIssue, selectedFlowIndex } = state;\n  if (openIssue && selectedFlowIndex !== undefined && selectedFlowIndex > 0) {\n    return { selectedFlowIndex: selectedFlowIndex - 1, selectedLocationIndex: 0 };\n  }\n  return null;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  issue: Pick<T.Issue, 'flows' | 'secondaryLocations'> | undefined;\n}\n\nexport default function LocationNavigationKeyboardShortcuts({ issue }: Props) {\n  if (!issue || (!issue.secondaryLocations.length && !issue.flows.length)) {\n    return null;\n  }\n  const hasSeveralFlows = issue.flows.length > 1;\n  return (\n    <div className=\"navigation-keyboard-shortcuts big-spacer-top text-center\">\n      <span>\n        alt + ↑ ↓ {hasSeveralFlows && <>←→</>}\n        {translate('issues.to_navigate_issue_locations')}\n      </span>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport LocationIndex from '../../../components/common/LocationIndex';\n\ninterface Props {\n  count: number;\n  onClick?: () => void;\n  selected: boolean;\n}\n\nexport default function ConciseIssueLocationBadge(props: Props) {\n  return (\n    <Tooltip\n      mouseEnterDelay={0.5}\n      overlay={translateWithParameters(\n        'issue.this_issue_involves_x_code_locations',\n        formatMeasure(props.count, 'INT')\n      )}>\n      <LocationIndex onClick={props.onClick} selected={props.selected}>\n        {'+'}\n        {props.count}\n      </LocationIndex>\n    </Tooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ConciseIssueLocationBadge from './ConciseIssueLocationBadge';\n\ninterface Props {\n  issue: Pick<T.Issue, 'flows' | 'secondaryLocations'>;\n  onFlowSelect: (index: number) => void;\n  selectedFlowIndex: number | undefined;\n}\n\ninterface State {\n  collapsed: boolean;\n}\n\nconst LIMIT = 8;\n\nexport default class ConciseIssueLocations extends React.PureComponent<Props, State> {\n  state: State = { collapsed: true };\n\n  handleExpandClick = () => {\n    this.setState({ collapsed: false });\n  };\n\n  renderExpandButton() {\n    return (\n      <Button\n        className=\"concise-issue-expand location-index link-no-underline\"\n        onClick={this.handleExpandClick}>\n        ...\n      </Button>\n    );\n  }\n\n  render() {\n    const { secondaryLocations, flows } = this.props.issue;\n\n    const badges: JSX.Element[] = [];\n\n    if (secondaryLocations.length > 0) {\n      badges.push(\n        <ConciseIssueLocationBadge\n          count={secondaryLocations.length}\n          key=\"-1\"\n          selected={!this.props.selectedFlowIndex}\n        />\n      );\n    }\n\n    flows.forEach((flow, index) => {\n      badges.push(\n        <ConciseIssueLocationBadge\n          count={flow.length}\n          key={index}\n          onClick={() => this.props.onFlowSelect(index)}\n          selected={index === this.props.selectedFlowIndex}\n        />\n      );\n    });\n\n    if (!this.state.collapsed || badges.length <= LIMIT) {\n      return badges;\n    }\n\n    return (\n      <>\n        {badges.slice(0, LIMIT - 1)}\n        {this.renderExpandButton()}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport LocationIndex from '../../../components/common/LocationIndex';\nimport LocationMessage from '../../../components/common/LocationMessage';\n\ninterface Props {\n  index: number;\n  message: string | undefined;\n  onClick: (index: number) => void;\n  scroll: (element: Element) => void;\n  selected: boolean;\n}\n\nexport default class ConciseIssueLocationsNavigatorLocation extends React.PureComponent<Props> {\n  node?: HTMLElement | null;\n\n  componentDidMount() {\n    if (this.props.selected && this.node) {\n      this.props.scroll(this.node);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.selected && prevProps.selected !== this.props.selected && this.node) {\n      this.props.scroll(this.node);\n    }\n  }\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClick(this.props.index);\n  };\n\n  render() {\n    const { index, message, selected } = this.props;\n\n    return (\n      <div className=\"little-spacer-top\" ref={node => (this.node = node)}>\n        <a\n          className=\"concise-issue-locations-navigator-location\"\n          href=\"#\"\n          onClick={this.handleClick}>\n          <LocationIndex selected={selected}>{index + 1}</LocationIndex>\n          <LocationMessage selected={selected}>{message}</LocationMessage>\n        </a>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { collapsePath } from 'sonar-ui-common/helpers/path';\nimport ConciseIssueLocationsNavigatorLocation from './ConciseIssueLocationsNavigatorLocation';\n\ninterface Props {\n  issue: Pick<T.Issue, 'key' | 'type'>;\n  locations: T.FlowLocation[];\n  onLocationSelect: (index: number) => void;\n  scroll: (element: Element) => void;\n  selectedLocationIndex: number | undefined;\n}\n\ninterface State {\n  collapsed: boolean;\n}\n\ninterface LocationGroup {\n  component: string | undefined;\n  componentName: string | undefined;\n  firstLocationIndex: number;\n  locations: T.FlowLocation[];\n}\n\nconst MAX_PATH_LENGTH = 15;\n\nexport default class CrossFileLocationsNavigator extends React.PureComponent<Props, State> {\n  state: State = { collapsed: true };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.issue.key !== this.props.issue.key) {\n      this.setState({ collapsed: true });\n    }\n\n    // expand locations list as soon as a location in the middle of the list is selected\n    const { locations: nextLocations } = nextProps;\n    if (\n      nextProps.selectedLocationIndex &&\n      nextProps.selectedLocationIndex > 0 &&\n      nextLocations !== undefined &&\n      nextProps.selectedLocationIndex < nextLocations.length - 1\n    ) {\n      this.setState({ collapsed: false });\n    }\n  }\n\n  handleMoreLocationsClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ collapsed: false });\n  };\n\n  groupByFile = (locations: T.FlowLocation[]) => {\n    const groups: LocationGroup[] = [];\n\n    let currentLocations: T.FlowLocation[] = [];\n    let currentComponent: string | undefined;\n    let currentComponentName: string | undefined;\n    let currentFirstLocationIndex = 0;\n\n    for (let index = 0; index < locations.length; index++) {\n      const location = locations[index];\n      if (location.component === currentComponent) {\n        currentLocations.push(location);\n      } else {\n        if (currentLocations.length > 0) {\n          groups.push({\n            component: currentComponent,\n            componentName: currentComponentName,\n            firstLocationIndex: currentFirstLocationIndex,\n            locations: currentLocations\n          });\n        }\n        currentLocations = [location];\n        currentComponent = location.component;\n        currentComponentName = location.componentName;\n        currentFirstLocationIndex = index;\n      }\n    }\n\n    if (currentLocations.length > 0) {\n      groups.push({\n        component: currentComponent,\n        componentName: currentComponentName,\n        firstLocationIndex: currentFirstLocationIndex,\n        locations: currentLocations\n      });\n    }\n\n    return groups;\n  };\n\n  renderLocation = (index: number, message: string | undefined) => {\n    return (\n      <ConciseIssueLocationsNavigatorLocation\n        index={index}\n        key={index}\n        message={message}\n        onClick={this.props.onLocationSelect}\n        scroll={this.props.scroll}\n        selected={index === this.props.selectedLocationIndex}\n      />\n    );\n  };\n\n  renderGroup = (\n    group: LocationGroup,\n    groupIndex: number,\n    { onlyFirst = false, onlyLast = false } = {}\n  ) => {\n    const { firstLocationIndex } = group;\n    const lastLocationIndex = group.locations.length - 1;\n    return (\n      <div className=\"concise-issue-locations-navigator-file\" key={groupIndex}>\n        <div className=\"concise-issue-location-file\">\n          <i className=\"concise-issue-location-file-circle little-spacer-right\" />\n          {collapsePath(group.componentName || '', MAX_PATH_LENGTH)}\n        </div>\n        {group.locations.length > 0 && (\n          <div className=\"concise-issue-location-file-locations\">\n            {onlyFirst && this.renderLocation(firstLocationIndex, group.locations[0].msg)}\n\n            {onlyLast &&\n              this.renderLocation(\n                firstLocationIndex + lastLocationIndex,\n                group.locations[lastLocationIndex].msg\n              )}\n\n            {!onlyFirst &&\n              !onlyLast &&\n              group.locations.map((location, index) =>\n                this.renderLocation(firstLocationIndex + index, location.msg)\n              )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const { locations } = this.props;\n    const groups = this.groupByFile(locations);\n\n    if (locations.length > 2 && groups.length > 1 && this.state.collapsed) {\n      const firstGroup = groups[0];\n      const lastGroup = groups[groups.length - 1];\n      return (\n        <div className=\"concise-issue-locations-navigator spacer-top\">\n          {this.renderGroup(firstGroup, 0, { onlyFirst: true })}\n          <div className=\"concise-issue-locations-navigator-file\">\n            <div className=\"concise-issue-location-file\">\n              <i className=\"concise-issue-location-file-circle-multiple little-spacer-right\" />\n              <a\n                className=\"concise-issue-location-file-more\"\n                href=\"#\"\n                onClick={this.handleMoreLocationsClick}>\n                {translateWithParameters('issues.x_more_locations', locations.length - 2)}\n              </a>\n            </div>\n          </div>\n          {this.renderGroup(lastGroup, groups.length - 1, { onlyLast: true })}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"concise-issue-locations-navigator spacer-top\">\n          {groups.map((group, groupIndex) => this.renderGroup(group, groupIndex))}\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq } from 'lodash';\nimport * as React from 'react';\nimport { getLocations } from '../utils';\nimport ConciseIssueLocationsNavigatorLocation from './ConciseIssueLocationsNavigatorLocation';\nimport CrossFileLocationsNavigator from './CrossFileLocationsNavigator';\n\ninterface Props {\n  issue: Pick<T.Issue, 'component' | 'key' | 'flows' | 'secondaryLocations' | 'type'>;\n  onLocationSelect: (index: number) => void;\n  scroll: (element: Element) => void;\n  selectedFlowIndex: number | undefined;\n  selectedLocationIndex: number | undefined;\n}\n\nexport default class ConciseIssueLocationsNavigator extends React.PureComponent<Props> {\n  render() {\n    const locations = getLocations(this.props.issue, this.props.selectedFlowIndex);\n\n    if (!locations || locations.length === 0 || locations.every(location => !location.msg)) {\n      return null;\n    }\n\n    const locationComponents = [\n      this.props.issue.component,\n      ...locations.map(location => location.component)\n    ];\n    const isCrossFile = uniq(locationComponents).length > 1;\n\n    if (isCrossFile) {\n      return (\n        <CrossFileLocationsNavigator\n          issue={this.props.issue}\n          locations={locations}\n          onLocationSelect={this.props.onLocationSelect}\n          scroll={this.props.scroll}\n          selectedLocationIndex={this.props.selectedLocationIndex}\n        />\n      );\n    } else {\n      return (\n        <div className=\"concise-issue-locations-navigator spacer-top\">\n          {locations.map((location, index) => (\n            <ConciseIssueLocationsNavigatorLocation\n              index={index}\n              key={index}\n              message={location.msg}\n              onClick={this.props.onLocationSelect}\n              scroll={this.props.scroll}\n              selected={index === this.props.selectedLocationIndex}\n            />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport TypeHelper from '../../../components/shared/TypeHelper';\nimport LocationNavigationKeyboardShortcuts from '../components/LocationNavigationKeyboardShortcuts';\nimport ConciseIssueLocations from './ConciseIssueLocations';\nimport ConciseIssueLocationsNavigator from './ConciseIssueLocationsNavigator';\n\ninterface Props {\n  issue: T.Issue;\n  onClick: (issueKey: string) => void;\n  onFlowSelect: (index: number) => void;\n  onLocationSelect: (index: number) => void;\n  scroll: (element: Element, bottomOffset?: number) => void;\n  selected: boolean;\n  selectedFlowIndex: number | undefined;\n  selectedLocationIndex: number | undefined;\n}\n\nexport default class ConciseIssueBox extends React.PureComponent<Props> {\n  messageElement?: HTMLElement | null;\n  rootElement?: HTMLElement | null;\n\n  componentDidMount() {\n    if (this.props.selected) {\n      this.handleScroll();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.selected && prevProps.selected !== this.props.selected) {\n      this.handleScroll();\n    }\n  }\n\n  handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    this.props.onClick(this.props.issue.key);\n  };\n\n  handleScroll = () => {\n    const { selectedFlowIndex } = this.props;\n    const { flows, secondaryLocations } = this.props.issue;\n\n    const locations = flows.length > 0 ? flows[selectedFlowIndex || 0] : secondaryLocations;\n\n    if (!locations || locations.length < 15) {\n      // if there are no locations, or there are just few\n      // then ensuse that the whole box is visible\n      if (this.rootElement) {\n        this.props.scroll(this.rootElement);\n      }\n    } else if (this.messageElement) {\n      // otherwise scroll until the the message element is located on top\n      this.props.scroll(this.messageElement, window.innerHeight - 250);\n    }\n  };\n\n  render() {\n    const { issue, selected } = this.props;\n\n    const clickAttributesMain = selected\n      ? {}\n      : { onClick: this.handleClick, role: 'listitem', tabIndex: 0 };\n\n    const clickAttributesTitle = selected\n      ? { onClick: this.handleClick, role: 'listitem', tabIndex: 0 }\n      : {};\n\n    return (\n      <div\n        className={classNames('concise-issue-box', 'clearfix', { selected })}\n        ref={node => (this.rootElement = node)}\n        {...clickAttributesMain}>\n        <div\n          className=\"concise-issue-box-message\"\n          {...clickAttributesTitle}\n          ref={node => (this.messageElement = node)}>\n          {issue.message}\n        </div>\n        <div className=\"concise-issue-box-attributes\">\n          <TypeHelper className=\"display-block little-spacer-right\" type={issue.type} />\n          <ConciseIssueLocations\n            issue={issue}\n            onFlowSelect={this.props.onFlowSelect}\n            selectedFlowIndex={this.props.selectedFlowIndex}\n          />\n        </div>\n        {selected && (\n          <>\n            <ConciseIssueLocationsNavigator\n              issue={issue}\n              onLocationSelect={this.props.onLocationSelect}\n              scroll={this.props.scroll}\n              selectedFlowIndex={this.props.selectedFlowIndex}\n              selectedLocationIndex={this.props.selectedLocationIndex}\n            />\n            <LocationNavigationKeyboardShortcuts issue={issue} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { collapsePath } from 'sonar-ui-common/helpers/path';\n\ninterface Props {\n  path: string;\n}\n\nexport default function ConciseIssueComponent(props: Props) {\n  return (\n    <div className=\"concise-issue-component note text-ellipsis\">{collapsePath(props.path, 20)}</div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConciseIssueBox from './ConciseIssueBox';\nimport ConciseIssueComponent from './ConciseIssueComponent';\n\ninterface Props {\n  issue: T.Issue;\n  onFlowSelect: (index: number) => void;\n  onLocationSelect: (index: number) => void;\n  onSelect: (issueKey: string) => void;\n  previousIssue: T.Issue | undefined;\n  scroll: (element: Element) => void;\n  selected: boolean;\n  selectedFlowIndex: number | undefined;\n  selectedLocationIndex: number | undefined;\n}\n\nexport default class ConciseIssue extends React.PureComponent<Props> {\n  render() {\n    const { issue, previousIssue, selected } = this.props;\n\n    const displayComponent = !previousIssue || previousIssue.component !== issue.component;\n\n    return (\n      <div>\n        {displayComponent && <ConciseIssueComponent path={issue.componentLongName} />}\n        <ConciseIssueBox\n          issue={issue}\n          onClick={this.props.onSelect}\n          onFlowSelect={this.props.onFlowSelect}\n          onLocationSelect={this.props.onLocationSelect}\n          scroll={this.props.scroll}\n          selected={selected}\n          selectedFlowIndex={selected ? this.props.selectedFlowIndex : undefined}\n          selectedLocationIndex={selected ? this.props.selectedLocationIndex : undefined}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport ConciseIssue from './ConciseIssue';\n\ninterface Props {\n  issues: T.Issue[];\n  onFlowSelect: (index: number) => void;\n  onIssueSelect: (issueKey: string) => void;\n  onLocationSelect: (index: number) => void;\n  selected: string | undefined;\n  selectedFlowIndex: number | undefined;\n  selectedLocationIndex: number | undefined;\n}\n\nexport default class ConciseIssuesList extends React.PureComponent<Props> {\n  handleScroll = (element: Element, bottomOffset = 100) => {\n    const scrollableElement = document.querySelector('.layout-page-side');\n    if (element && scrollableElement) {\n      scrollToElement(element, { topOffset: 150, bottomOffset, parent: scrollableElement });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.issues.map((issue, index) => (\n          <ConciseIssue\n            issue={issue}\n            key={issue.key}\n            onFlowSelect={this.props.onFlowSelect}\n            onLocationSelect={this.props.onLocationSelect}\n            onSelect={this.props.onIssueSelect}\n            previousIssue={index > 0 ? this.props.issues[index - 1] : undefined}\n            scroll={this.handleScroll}\n            selected={issue.key === this.props.selected}\n            selectedFlowIndex={this.props.selectedFlowIndex}\n            selectedLocationIndex={this.props.selectedLocationIndex}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport PageCounter from '../../../components/common/PageCounter';\n\ninterface Props {\n  className?: string;\n  current: number | undefined;\n  total: number;\n}\n\nexport default function IssuesCounter(props: Props) {\n  return (\n    <PageCounter\n      className=\"spacer-left\"\n      current={props.current}\n      label={translate('issues.issues')}\n      total={props.total}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BackButton from 'sonar-ui-common/components/controls/BackButton';\nimport ReloadButton from 'sonar-ui-common/components/controls/ReloadButton';\nimport IssuesCounter from '../components/IssuesCounter';\n\ninterface Props {\n  displayBackButton?: boolean;\n  loading: boolean;\n  onBackClick: () => void;\n  onReload: () => void;\n  paging: T.Paging | undefined;\n  selectedIndex: number | undefined;\n}\n\nexport default function ConciseIssuesListHeader(props: Props) {\n  const { displayBackButton = true, paging, selectedIndex } = props;\n\n  return (\n    <header className=\"layout-page-header-panel concise-issues-list-header\">\n      <div className=\"layout-page-header-panel-inner concise-issues-list-header-inner\">\n        {displayBackButton && (\n          <BackButton className=\"pull-left\" disabled={props.loading} onClick={props.onBackClick} />\n        )}\n        {props.loading ? (\n          <i className=\"spinner pull-right\" />\n        ) : (\n          <ReloadButton className=\"pull-right\" onClick={props.onReload} />\n        )}\n        {paging && <IssuesCounter current={selectedIndex} total={paging.total} />}\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit, sortBy, without } from 'lodash';\nimport * as React from 'react';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { highlightTerm } from 'sonar-ui-common/helpers/search';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport Avatar from '../../../components/ui/Avatar';\nimport { isUserActive } from '../../../helpers/users';\nimport { Facet, Query, searchAssignees } from '../utils';\n\ninterface Props {\n  assigned: boolean;\n  assignees: string[];\n  fetching: boolean;\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  organization: string | undefined;\n  query: Query;\n  stats: T.Dict<number> | undefined;\n  referencedUsers: T.Dict<T.UserBase>;\n}\n\nexport default class AssigneeFacet extends React.PureComponent<Props> {\n  handleSearch = (query: string, page?: number) => {\n    return searchAssignees(query, this.props.organization, page);\n  };\n\n  handleItemClick = (itemValue: string, multiple: boolean) => {\n    const { assignees } = this.props;\n    if (itemValue === '') {\n      // unassigned\n      this.props.onChange({ assigned: !this.props.assigned, assignees: [] });\n    } else if (multiple) {\n      const newValue = sortBy(\n        assignees.includes(itemValue) ? without(assignees, itemValue) : [...assignees, itemValue]\n      );\n      this.props.onChange({ assigned: true, assignees: newValue });\n    } else {\n      this.props.onChange({\n        assigned: true,\n        assignees: assignees.includes(itemValue) && assignees.length < 2 ? [] : [itemValue]\n      });\n    }\n  };\n\n  handleClear = () => {\n    this.props.onChange({ assigned: true, assignees: [] });\n  };\n\n  getAssigneeName = (assignee: string) => {\n    if (assignee === '') {\n      return translate('unassigned');\n    } else {\n      const user = this.props.referencedUsers[assignee];\n      if (!user) {\n        return assignee;\n      }\n      return isUserActive(user) ? user.name : translateWithParameters('user.x_deleted', user.login);\n    }\n  };\n\n  loadSearchResultCount = (assignees: T.UserBase[]) => {\n    return this.props.loadSearchResultCount('assignees', {\n      assigned: undefined,\n      assignees: assignees.map(assignee => assignee.login)\n    });\n  };\n\n  getSortedItems = () => {\n    const { stats = {} } = this.props;\n    return sortBy(\n      Object.keys(stats),\n      // put \"not assigned\" first\n      key => (key === '' ? 0 : 1),\n      // the sort by number\n      key => -stats[key]\n    );\n  };\n\n  renderFacetItem = (assignee: string) => {\n    if (assignee === '') {\n      return translate('unassigned');\n    }\n\n    const user = this.props.referencedUsers[assignee];\n\n    if (!user) {\n      return assignee;\n    }\n\n    const userName = user.name || user.login;\n\n    return (\n      <>\n        <Avatar className=\"little-spacer-right\" hash={user.avatar} name={userName} size={16} />\n        {isUserActive(user) ? userName : translateWithParameters('user.x_deleted', userName)}\n      </>\n    );\n  };\n\n  renderSearchResult = (result: T.UserBase, query: string) => {\n    const displayName = isUserActive(result)\n      ? result.name\n      : translateWithParameters('user.x_deleted', result.login);\n    return (\n      <>\n        <Avatar\n          className=\"little-spacer-right\"\n          hash={result.avatar}\n          name={result.name || result.login}\n          size={16}\n        />\n        {highlightTerm(displayName, query)}\n      </>\n    );\n  };\n\n  render() {\n    const values = [...this.props.assignees];\n    if (!this.props.assigned) {\n      values.push('');\n    }\n\n    return (\n      <ListStyleFacet<T.UserBase>\n        facetHeader={translate('issues.facet.assignees')}\n        fetching={this.props.fetching}\n        getFacetItemText={this.getAssigneeName}\n        getSearchResultKey={user => user.login}\n        getSearchResultText={user => user.name || user.login}\n        // put \"not assigned\" item first\n        getSortedItems={this.getSortedItems}\n        loadSearchResultCount={this.loadSearchResultCount}\n        onChange={this.props.onChange}\n        onClear={this.handleClear}\n        onItemClick={this.handleItemClick}\n        onSearch={this.handleSearch}\n        onToggle={this.props.onToggle}\n        open={this.props.open}\n        property=\"assignees\"\n        query={omit(this.props.query, 'assigned', 'assignees')}\n        renderFacetItem={this.renderFacetItem}\n        renderSearchResult={this.renderSearchResult}\n        searchPlaceholder={translate('search.search_for_users')}\n        stats={this.props.stats}\n        values={values}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { highlightTerm } from 'sonar-ui-common/helpers/search';\nimport { searchIssueAuthors } from '../../../api/issues';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport { Facet, Query } from '../utils';\n\ninterface Props {\n  component: T.Component | undefined;\n  fetching: boolean;\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  organization: string | undefined;\n  query: Query;\n  stats: T.Dict<number> | undefined;\n  authors: string[];\n}\n\nconst SEARCH_SIZE = 100;\n\nexport default class AuthorFacet extends React.PureComponent<Props> {\n  identity = (author: string) => {\n    return author;\n  };\n\n  handleSearch = (query: string, _page: number) => {\n    const { component } = this.props;\n    const project =\n      component && ['TRK', 'VW', 'APP'].includes(component.qualifier) ? component.key : undefined;\n    return searchIssueAuthors({\n      organization: this.props.organization,\n      project,\n      ps: SEARCH_SIZE, // maximum\n      q: query\n    }).then(authors => ({ maxResults: authors.length === SEARCH_SIZE, results: authors }));\n  };\n\n  loadSearchResultCount = (authors: string[]) => {\n    return this.props.loadSearchResultCount('authors', { authors });\n  };\n\n  renderSearchResult = (author: string, term: string) => {\n    return highlightTerm(author, term);\n  };\n\n  render() {\n    return (\n      <ListStyleFacet<string>\n        facetHeader={translate('issues.facet.authors')}\n        fetching={this.props.fetching}\n        getFacetItemText={this.identity}\n        getSearchResultKey={this.identity}\n        getSearchResultText={this.identity}\n        loadSearchResultCount={this.loadSearchResultCount}\n        onChange={this.props.onChange}\n        onSearch={this.handleSearch}\n        onToggle={this.props.onToggle}\n        open={this.props.open}\n        property=\"authors\"\n        query={omit(this.props.query, 'authors')}\n        renderFacetItem={this.identity}\n        renderSearchResult={this.renderSearchResult}\n        searchPlaceholder={translate('search.search_for_authors')}\n        stats={this.props.stats}\n        values={this.props.authors}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as isSameDay from 'date-fns/is_same_day';\nimport { max } from 'lodash';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport BarChart from 'sonar-ui-common/components/charts/BarChart';\nimport { longFormatterOption } from 'sonar-ui-common/components/intl/DateFormatter';\nimport DateFromNow from 'sonar-ui-common/components/intl/DateFromNow';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport DateRangeInput from '../../../components/controls/DateRangeInput';\nimport FacetBox from '../../../components/facet/FacetBox';\nimport FacetHeader from '../../../components/facet/FacetHeader';\nimport FacetItem from '../../../components/facet/FacetItem';\nimport { Query } from '../utils';\n\ninterface Props {\n  component: T.Component | undefined;\n  createdAfter: Date | undefined;\n  createdAt: string;\n  createdBefore: Date | undefined;\n  createdInLast: string;\n  fetching: boolean;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  sinceLeakPeriod: boolean;\n  stats: T.Dict<number> | undefined;\n}\n\nclass CreationDateFacet extends React.PureComponent<Props & InjectedIntlProps> {\n  property = 'createdAt';\n\n  static defaultProps = {\n    open: true\n  };\n\n  hasValue = () =>\n    this.props.createdAfter !== undefined ||\n    this.props.createdAt.length > 0 ||\n    this.props.createdBefore !== undefined ||\n    this.props.createdInLast.length > 0 ||\n    this.props.sinceLeakPeriod;\n\n  handleHeaderClick = () => {\n    this.props.onToggle(this.property);\n  };\n\n  handleClear = () => {\n    this.resetTo({});\n  };\n\n  resetTo = (changes: Partial<Query>) => {\n    this.props.onChange({\n      createdAfter: undefined,\n      createdAt: undefined,\n      createdBefore: undefined,\n      createdInLast: undefined,\n      sinceLeakPeriod: undefined,\n      ...changes\n    });\n  };\n\n  handleBarClick = ({\n    createdAfter,\n    createdBefore\n  }: {\n    createdAfter: Date;\n    createdBefore?: Date;\n  }) => {\n    this.resetTo({ createdAfter, createdBefore });\n  };\n\n  handlePeriodChange = ({ from, to }: { from?: Date; to?: Date }) => {\n    this.resetTo({ createdAfter: from, createdBefore: to });\n  };\n\n  handlePeriodClick = (period: string) => this.resetTo({ createdInLast: period });\n\n  handleLeakPeriodClick = () => this.resetTo({ sinceLeakPeriod: true });\n\n  getValues() {\n    const { createdAfter, createdAt, createdBefore, createdInLast, sinceLeakPeriod } = this.props;\n    const { formatDate } = this.props.intl;\n    const values = [];\n    if (createdAfter) {\n      values.push(formatDate(createdAfter, longFormatterOption));\n    }\n    if (createdAt) {\n      values.push(formatDate(createdAt, longFormatterOption));\n    }\n    if (createdBefore) {\n      values.push(formatDate(createdBefore, longFormatterOption));\n    }\n    if (createdInLast === '1w') {\n      values.push(translate('issues.facet.createdAt.last_week'));\n    }\n    if (createdInLast === '1m') {\n      values.push(translate('issues.facet.createdAt.last_month'));\n    }\n    if (createdInLast === '1y') {\n      values.push(translate('issues.facet.createdAt.last_year'));\n    }\n    if (sinceLeakPeriod) {\n      values.push(translate('issues.new_code'));\n    }\n    return values;\n  }\n\n  renderBarChart() {\n    const { createdBefore, stats } = this.props;\n\n    if (!stats) {\n      return null;\n    }\n\n    const periods = Object.keys(stats);\n\n    if (periods.length < 2 || periods.every(period => !stats[period])) {\n      return null;\n    }\n\n    const { formatDate } = this.props.intl;\n    const data = periods.map((start, index) => {\n      const startDate = parseDate(start);\n      let endDate;\n      if (index < periods.length - 1) {\n        endDate = parseDate(periods[index + 1]);\n        endDate.setDate(endDate.getDate() - 1);\n      } else {\n        endDate = createdBefore ? parseDate(createdBefore) : undefined;\n      }\n\n      const tooltipEndDate = endDate || new Date();\n      const tooltip = (\n        // eslint-disable-next-line react/jsx-fragments\n        <React.Fragment>\n          {formatMeasure(stats[start], 'SHORT_INT')}\n          <br />\n          {formatDate(startDate, longFormatterOption)}\n          {!isSameDay(tooltipEndDate, startDate) &&\n            ` - ${formatDate(tooltipEndDate, longFormatterOption)}`}\n        </React.Fragment>\n      );\n\n      return {\n        createdAfter: startDate,\n        createdBefore: endDate,\n        tooltip,\n        x: index,\n        y: stats[start]\n      };\n    });\n\n    const barsWidth = Math.floor(250 / data.length);\n    const width = barsWidth * data.length - 1 + 10;\n\n    const maxValue = max(data.map(d => d.y));\n    const xValues = data.map(d => (d.y === maxValue ? formatMeasure(maxValue, 'SHORT_INT') : ''));\n\n    return (\n      <BarChart\n        barsWidth={barsWidth - 1}\n        data={data}\n        height={75}\n        onBarClick={this.handleBarClick}\n        padding={[25, 0, 5, 10]}\n        width={width}\n        xValues={xValues}\n      />\n    );\n  }\n\n  renderExactDate() {\n    return (\n      <div className=\"search-navigator-facet-container\">\n        <DateTimeFormatter date={this.props.createdAt} />\n        <br />\n        <span className=\"note\">\n          <DateFromNow date={this.props.createdAt} />\n        </span>\n      </div>\n    );\n  }\n\n  renderPeriodSelectors() {\n    const { createdAfter, createdBefore } = this.props;\n    return (\n      <div className=\"search-navigator-date-facet-selection\">\n        <DateRangeInput\n          onChange={this.handlePeriodChange}\n          value={{ from: createdAfter, to: createdBefore }}\n        />\n      </div>\n    );\n  }\n\n  renderPredefinedPeriods() {\n    const { component, createdInLast, sinceLeakPeriod } = this.props;\n    return (\n      <div className=\"spacer-top issues-predefined-periods\">\n        <FacetItem\n          active={!this.hasValue()}\n          name={translate('issues.facet.createdAt.all')}\n          onClick={this.handlePeriodClick}\n          tooltip={translate('issues.facet.createdAt.all')}\n          value=\"\"\n        />\n        {component ? (\n          <FacetItem\n            active={sinceLeakPeriod}\n            name={translate('issues.new_code')}\n            onClick={this.handleLeakPeriodClick}\n            tooltip={translate('issues.new_code_period')}\n            value=\"\"\n          />\n        ) : (\n          <>\n            <FacetItem\n              active={createdInLast === '1w'}\n              name={translate('issues.facet.createdAt.last_week')}\n              onClick={this.handlePeriodClick}\n              tooltip={translate('issues.facet.createdAt.last_week')}\n              value=\"1w\"\n            />\n            <FacetItem\n              active={createdInLast === '1m'}\n              name={translate('issues.facet.createdAt.last_month')}\n              onClick={this.handlePeriodClick}\n              tooltip={translate('issues.facet.createdAt.last_month')}\n              value=\"1m\"\n            />\n            <FacetItem\n              active={createdInLast === '1y'}\n              name={translate('issues.facet.createdAt.last_year')}\n              onClick={this.handlePeriodClick}\n              tooltip={translate('issues.facet.createdAt.last_year')}\n              value=\"1y\"\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderInner() {\n    const { createdAt } = this.props;\n    return createdAt ? (\n      this.renderExactDate()\n    ) : (\n      <div>\n        {this.renderBarChart()}\n        {this.renderPeriodSelectors()}\n        {this.renderPredefinedPeriods()}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <FacetBox property={this.property}>\n        <FacetHeader\n          fetching={this.props.fetching}\n          name={translate('issues.facet', this.property)}\n          onClear={this.handleClear}\n          onClick={this.handleHeaderClick}\n          open={this.props.open}\n          values={this.getValues()}\n        />\n\n        {this.props.open && this.renderInner()}\n      </FacetBox>\n    );\n  }\n}\n\nexport default injectIntl(CreationDateFacet);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { collapsePath } from 'sonar-ui-common/helpers/path';\nimport { highlightTerm } from 'sonar-ui-common/helpers/search';\nimport { getDirectories, TreeComponentWithPath } from '../../../api/components';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport { Facet, Query } from '../utils';\n\ninterface Props {\n  componentKey: string;\n  directories: string[];\n  fetching: boolean;\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  query: Query;\n  stats: Facet | undefined;\n}\n\nexport default class DirectoryFacet extends React.PureComponent<Props> {\n  getFacetItemText = (path: string) => {\n    return collapsePath(path, 15);\n  };\n\n  getSearchResultKey = (directory: TreeComponentWithPath) => {\n    return directory.path;\n  };\n\n  getSearchResultText = (directory: TreeComponentWithPath) => {\n    return directory.name;\n  };\n\n  handleSearch = (query: string, page: number) => {\n    return getDirectories({\n      component: this.props.componentKey,\n      q: query,\n      p: page,\n      ps: 30\n    }).then(({ components, paging }) => ({\n      paging,\n      results: components.filter(dir => dir.path !== undefined)\n    }));\n  };\n\n  loadSearchResultCount = (directories: TreeComponentWithPath[]) => {\n    return this.props.loadSearchResultCount('directories', {\n      directories: directories.map(directory => directory.path)\n    });\n  };\n\n  renderDirectory = (directory: React.ReactNode) => (\n    <>\n      <QualifierIcon className=\"little-spacer-right\" qualifier=\"DIR\" />\n      {directory}\n    </>\n  );\n\n  renderFacetItem = (path: string) => {\n    return this.renderDirectory(collapsePath(path, 15));\n  };\n\n  renderSearchResult = (directory: TreeComponentWithPath, term: string) => {\n    return this.renderDirectory(highlightTerm(collapsePath(directory.path, 15), term));\n  };\n\n  render() {\n    return (\n      <ListStyleFacet<TreeComponentWithPath>\n        facetHeader={translate('issues.facet.directories')}\n        fetching={this.props.fetching}\n        getFacetItemText={this.getFacetItemText}\n        getSearchResultKey={this.getSearchResultKey}\n        getSearchResultText={this.getSearchResultText}\n        loadSearchResultCount={this.loadSearchResultCount}\n        minSearchLength={3}\n        onChange={this.props.onChange}\n        onSearch={this.handleSearch}\n        onToggle={this.props.onToggle}\n        open={this.props.open}\n        property=\"directories\"\n        query={omit(this.props.query, 'directories')}\n        renderFacetItem={this.renderFacetItem}\n        renderSearchResult={this.renderSearchResult}\n        searchPlaceholder={translate('search.search_for_directories')}\n        stats={this.props.stats}\n        values={this.props.directories}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { collapsePath } from 'sonar-ui-common/helpers/path';\nimport { highlightTerm } from 'sonar-ui-common/helpers/search';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getFiles, TreeComponentWithPath } from '../../../api/components';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport { Facet, Query, ReferencedComponent } from '../utils';\n\ninterface Props {\n  componentKey: string;\n  fetching: boolean;\n  fileUuids: string[];\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  query: Query;\n  referencedComponents: T.Dict<ReferencedComponent>;\n  stats: Facet | undefined;\n}\n\nexport default class FileFacet extends React.PureComponent<Props> {\n  getFilePath = (fileUuid: string) => {\n    const { referencedComponents } = this.props;\n    return referencedComponents[fileUuid]\n      ? collapsePath(referencedComponents[fileUuid].path || '', 15)\n      : fileUuid;\n  };\n\n  getReferencedComponent = (key: string) => {\n    const { referencedComponents } = this.props;\n    const fileUuid = Object.keys(referencedComponents).find(uuid => {\n      return referencedComponents[uuid].key === key;\n    });\n    return fileUuid ? referencedComponents[fileUuid] : undefined;\n  };\n\n  getFacetItemText = (fileUuid: string) => {\n    const { referencedComponents } = this.props;\n    return referencedComponents[fileUuid] ? referencedComponents[fileUuid].path || '' : fileUuid;\n  };\n\n  getSearchResultKey = (file: TreeComponentWithPath) => {\n    const component = this.getReferencedComponent(file.key);\n    return component ? component.uuid : file.key;\n  };\n\n  getSearchResultText = (file: TreeComponentWithPath) => {\n    return file.path;\n  };\n\n  handleSearch = (query: string, page: number) => {\n    return getFiles({\n      component: this.props.componentKey,\n      q: query,\n      p: page,\n      ps: 30\n    }).then(({ components, paging }) => ({\n      paging,\n      results: components.filter(file => file.path !== undefined)\n    }));\n  };\n\n  loadSearchResultCount = (files: TreeComponentWithPath[]) => {\n    return this.props.loadSearchResultCount('files', {\n      files: files\n        .map(file => {\n          const component = this.getReferencedComponent(file.key);\n          return component && component.uuid;\n        })\n        .filter(isDefined)\n    });\n  };\n\n  renderFile = (file: React.ReactNode) => (\n    <>\n      <QualifierIcon className=\"little-spacer-right\" qualifier=\"FIL\" />\n      {file}\n    </>\n  );\n\n  renderFacetItem = (fileUuid: string) => {\n    const name = this.getFilePath(fileUuid);\n    return this.renderFile(name);\n  };\n\n  renderSearchResult = (file: TreeComponentWithPath, term: string) => {\n    return this.renderFile(highlightTerm(collapsePath(file.path, 15), term));\n  };\n\n  render() {\n    return (\n      <ListStyleFacet<TreeComponentWithPath>\n        facetHeader={translate('issues.facet.files')}\n        fetching={this.props.fetching}\n        getFacetItemText={this.getFacetItemText}\n        getSearchResultKey={this.getSearchResultKey}\n        getSearchResultText={this.getSearchResultText}\n        loadSearchResultCount={this.loadSearchResultCount}\n        minSearchLength={3}\n        onChange={this.props.onChange}\n        onSearch={this.handleSearch}\n        onToggle={this.props.onToggle}\n        open={this.props.open}\n        property=\"files\"\n        query={omit(this.props.query, 'files')}\n        renderFacetItem={this.renderFacetItem}\n        renderSearchResult={this.renderSearchResult}\n        searchPlaceholder={translate('search.search_for_files')}\n        stats={this.props.stats}\n        values={this.props.fileUuids}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit, uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { highlightTerm } from 'sonar-ui-common/helpers/search';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport { getLanguages, Store } from '../../../store/rootReducer';\nimport { Facet, Query, ReferencedLanguage } from '../utils';\n\ninterface InstalledLanguage {\n  key: string;\n  name: string;\n}\n\ninterface Props {\n  fetching: boolean;\n  installedLanguages: InstalledLanguage[];\n  languages: string[];\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  query: Query;\n  referencedLanguages: T.Dict<ReferencedLanguage>;\n  stats: T.Dict<number> | undefined;\n}\n\nclass LanguageFacet extends React.PureComponent<Props> {\n  getLanguageName = (language: string) => {\n    const { referencedLanguages } = this.props;\n    return referencedLanguages[language] ? referencedLanguages[language].name : language;\n  };\n\n  handleSearch = (query: string) => {\n    const options = this.getAllPossibleOptions();\n    const results = options.filter(language =>\n      language.name.toLowerCase().includes(query.toLowerCase())\n    );\n    const paging = { pageIndex: 1, pageSize: results.length, total: results.length };\n    return Promise.resolve({ paging, results });\n  };\n\n  getAllPossibleOptions = () => {\n    const { installedLanguages, stats = {} } = this.props;\n\n    // add any language that presents in the facet, but might not be installed\n    // for such language we don't know their display name, so let's just use their key\n    // and make sure we reference each language only once\n    return uniqBy(\n      [...installedLanguages, ...Object.keys(stats).map(key => ({ key, name: key }))],\n      language => language.key\n    );\n  };\n\n  loadSearchResultCount = (languages: InstalledLanguage[]) => {\n    return this.props.loadSearchResultCount('languages', {\n      languages: languages.map(language => language.key)\n    });\n  };\n\n  renderSearchResult = ({ name }: InstalledLanguage, term: string) => {\n    return highlightTerm(name, term);\n  };\n\n  render() {\n    return (\n      <ListStyleFacet<InstalledLanguage>\n        facetHeader={translate('issues.facet.languages')}\n        fetching={this.props.fetching}\n        getFacetItemText={this.getLanguageName}\n        getSearchResultKey={language => language.key}\n        getSearchResultText={language => language.name}\n        loadSearchResultCount={this.loadSearchResultCount}\n        minSearchLength={1}\n        onChange={this.props.onChange}\n        onSearch={this.handleSearch}\n        onToggle={this.props.onToggle}\n        open={this.props.open}\n        property=\"languages\"\n        query={omit(this.props.query, 'languages')}\n        renderFacetItem={this.getLanguageName}\n        renderSearchResult={this.renderSearchResult}\n        searchPlaceholder={translate('search.search_for_languages')}\n        stats={this.props.stats}\n        values={this.props.languages}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  installedLanguages: Object.values(getLanguages(state))\n});\n\nexport default connect(mapStateToProps)(LanguageFacet);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { highlightTerm } from 'sonar-ui-common/helpers/search';\nimport { getTree, searchProjects } from '../../../api/components';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport Organization from '../../../components/shared/Organization';\nimport { Facet, Query, ReferencedComponent } from '../utils';\n\ninterface Props {\n  component: T.Component | undefined;\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  fetching: boolean;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  organization: { key: string } | undefined;\n  projects: string[];\n  query: Query;\n  referencedComponents: T.Dict<ReferencedComponent>;\n  stats: T.Dict<number> | undefined;\n}\n\ninterface SearchedProject {\n  key: string;\n  name: string;\n  organization: string;\n}\n\nexport default class ProjectFacet extends React.PureComponent<Props> {\n  handleSearch = (\n    query: string,\n    page = 1\n  ): Promise<{ results: SearchedProject[]; paging: T.Paging }> => {\n    const { component, organization } = this.props;\n    if (component && ['VW', 'SVW', 'APP'].includes(component.qualifier)) {\n      return getTree({\n        component: component.key,\n        p: page,\n        ps: 30,\n        q: query,\n        qualifiers: 'TRK'\n      }).then(({ components, paging }) => ({\n        paging,\n        results: components.map(component => ({\n          key: component.refKey || component.key,\n          name: component.name,\n          organization: component.organization\n        }))\n      }));\n    }\n\n    return searchProjects({\n      p: page,\n      ps: 30,\n      filter: query ? `query = \"${query}\"` : '',\n      organization: organization && organization.key\n    }).then(({ components, paging }) => ({\n      paging,\n      results: components.map(component => ({\n        key: component.key,\n        name: component.name,\n        organization: component.organization\n      }))\n    }));\n  };\n\n  getProjectName = (project: string) => {\n    const { referencedComponents } = this.props;\n    return referencedComponents[project] ? referencedComponents[project].name : project;\n  };\n\n  loadSearchResultCount = (projects: SearchedProject[]) => {\n    return this.props.loadSearchResultCount('projects', {\n      projects: projects.map(project => project.key)\n    });\n  };\n\n  renderFacetItem = (project: string) => {\n    const { referencedComponents } = this.props;\n    return referencedComponents[project] ? (\n      this.renderProject(referencedComponents[project])\n    ) : (\n      <span>\n        <QualifierIcon className=\"little-spacer-right\" qualifier=\"TRK\" />\n        {project}\n      </span>\n    );\n  };\n\n  renderProject = (project: Pick<SearchedProject, 'name' | 'organization'>) => (\n    <span>\n      <QualifierIcon className=\"little-spacer-right\" qualifier=\"TRK\" />\n      {!this.props.organization && (\n        <Organization link={false} organizationKey={project.organization} />\n      )}\n      {project.name}\n    </span>\n  );\n\n  renderSearchResult = (project: Pick<SearchedProject, 'name' | 'organization'>, term: string) => (\n    <>\n      <QualifierIcon className=\"little-spacer-right\" qualifier=\"TRK\" />\n      {!this.props.organization && (\n        <Organization link={false} organizationKey={project.organization} />\n      )}\n      {highlightTerm(project.name, term)}\n    </>\n  );\n\n  render() {\n    return (\n      <ListStyleFacet<SearchedProject>\n        facetHeader={translate('issues.facet.projects')}\n        fetching={this.props.fetching}\n        getFacetItemText={this.getProjectName}\n        getSearchResultKey={project => project.key}\n        getSearchResultText={project => project.name}\n        loadSearchResultCount={this.loadSearchResultCount}\n        onChange={this.props.onChange}\n        onSearch={this.handleSearch}\n        onToggle={this.props.onToggle}\n        open={this.props.open}\n        property=\"projects\"\n        query={omit(this.props.query, 'projects')}\n        renderFacetItem={this.renderFacetItem}\n        renderSearchResult={this.renderSearchResult}\n        searchPlaceholder={translate('search.search_for_projects')}\n        stats={this.props.stats}\n        values={this.props.projects}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { orderBy, without } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport FacetBox from '../../../components/facet/FacetBox';\nimport FacetHeader from '../../../components/facet/FacetHeader';\nimport FacetItem from '../../../components/facet/FacetItem';\nimport FacetItemsList from '../../../components/facet/FacetItemsList';\nimport MultipleSelectionHint from '../../../components/facet/MultipleSelectionHint';\nimport { formatFacetStat, Query } from '../utils';\n\ninterface Props {\n  fetching: boolean;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  resolved: boolean;\n  resolutions: string[];\n  stats: T.Dict<number> | undefined;\n}\n\nconst RESOLUTIONS = ['', 'FALSE-POSITIVE', 'FIXED', 'REMOVED', 'WONTFIX'];\n\nexport default class ResolutionFacet extends React.PureComponent<Props> {\n  property = 'resolutions';\n\n  static defaultProps = {\n    open: true\n  };\n\n  handleItemClick = (itemValue: string, multiple: boolean) => {\n    const { resolutions } = this.props;\n    if (itemValue === '') {\n      // unresolved\n      this.props.onChange({ resolved: !this.props.resolved, resolutions: [] });\n    } else if (multiple) {\n      const newValue = orderBy(\n        resolutions.includes(itemValue)\n          ? without(resolutions, itemValue)\n          : [...resolutions, itemValue]\n      );\n      this.props.onChange({ resolved: true, [this.property]: newValue });\n    } else {\n      this.props.onChange({\n        resolved: true,\n        [this.property]:\n          resolutions.includes(itemValue) && resolutions.length < 2 ? [] : [itemValue]\n      });\n    }\n  };\n\n  handleHeaderClick = () => {\n    this.props.onToggle(this.property);\n  };\n\n  handleClear = () => {\n    this.props.onChange({ resolved: false, resolutions: [] });\n  };\n\n  isFacetItemActive(resolution: string) {\n    return resolution === '' ? !this.props.resolved : this.props.resolutions.includes(resolution);\n  }\n\n  getFacetItemName(resolution: string) {\n    return resolution === '' ? translate('unresolved') : translate('issue.resolution', resolution);\n  }\n\n  getStat(resolution: string) {\n    const { stats } = this.props;\n    return stats ? stats[resolution] : undefined;\n  }\n\n  renderItem = (resolution: string) => {\n    const active = this.isFacetItemActive(resolution);\n    const stat = this.getStat(resolution);\n\n    return (\n      <FacetItem\n        active={active}\n        disabled={stat === 0 && !active}\n        halfWidth={true}\n        key={resolution}\n        name={this.getFacetItemName(resolution)}\n        onClick={this.handleItemClick}\n        stat={formatFacetStat(stat)}\n        tooltip={this.getFacetItemName(resolution)}\n        value={resolution}\n      />\n    );\n  };\n\n  render() {\n    const { resolutions, stats = {} } = this.props;\n    const values = resolutions.map(resolution => this.getFacetItemName(resolution));\n\n    return (\n      <FacetBox property={this.property}>\n        <FacetHeader\n          fetching={this.props.fetching}\n          name={translate('issues.facet', this.property)}\n          onClear={this.handleClear}\n          onClick={this.handleHeaderClick}\n          open={this.props.open}\n          values={values}\n        />\n\n        {this.props.open && (\n          <>\n            <FacetItemsList>{RESOLUTIONS.map(this.renderItem)}</FacetItemsList>\n            <MultipleSelectionHint\n              options={Object.keys(stats).length}\n              values={resolutions.length}\n            />\n          </>\n        )}\n      </FacetBox>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { searchRules } from '../../../api/rules';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport { Facet, Query, ReferencedRule } from '../utils';\n\ninterface Props {\n  fetching: boolean;\n  languages: string[];\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  organization: string | undefined;\n  query: Query;\n  referencedRules: T.Dict<ReferencedRule>;\n  rules: string[];\n  stats: T.Dict<number> | undefined;\n}\n\nexport default class RuleFacet extends React.PureComponent<Props> {\n  handleSearch = (query: string, page = 1) => {\n    const { languages, organization } = this.props;\n    return searchRules({\n      f: 'name,langName',\n      languages: languages.length ? languages.join() : undefined,\n      organization,\n      q: query,\n      p: page,\n      ps: 30,\n      s: 'name',\n      include_external: true\n    }).then(response => ({\n      paging: { pageIndex: response.p, pageSize: response.ps, total: response.total },\n      results: response.rules\n    }));\n  };\n\n  loadSearchResultCount = (rules: T.Rule[]) => {\n    return this.props.loadSearchResultCount('rules', { rules: rules.map(rule => rule.key) });\n  };\n\n  getRuleName = (ruleKey: string) => {\n    const rule = this.props.referencedRules[ruleKey];\n    return rule ? this.formatRuleName(rule.name, rule.langName) : ruleKey;\n  };\n\n  formatRuleName = (name: string, langName: string | undefined) => {\n    // external rules don't have a language associated\n    // see https://jira.sonarsource.com/browse/MMF-1407\n    return langName ? `(${langName}) ${name}` : name;\n  };\n\n  renderSearchResult = (rule: T.Rule) => {\n    return this.formatRuleName(rule.name, rule.langName);\n  };\n\n  render() {\n    return (\n      <ListStyleFacet<T.Rule>\n        facetHeader={translate('issues.facet.rules')}\n        fetching={this.props.fetching}\n        getFacetItemText={this.getRuleName}\n        getSearchResultKey={rule => rule.key}\n        getSearchResultText={rule => rule.name}\n        loadSearchResultCount={this.loadSearchResultCount}\n        onChange={this.props.onChange}\n        onSearch={this.handleSearch}\n        onToggle={this.props.onToggle}\n        open={this.props.open}\n        property=\"rules\"\n        query={omit(this.props.query, 'rules')}\n        renderFacetItem={this.getRuleName}\n        renderSearchResult={this.renderSearchResult}\n        searchPlaceholder={translate('search.search_for_rules')}\n        stats={this.props.stats}\n        values={this.props.rules}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { orderBy, without } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport FacetBox from '../../../components/facet/FacetBox';\nimport FacetHeader from '../../../components/facet/FacetHeader';\nimport FacetItem from '../../../components/facet/FacetItem';\nimport FacetItemsList from '../../../components/facet/FacetItemsList';\nimport MultipleSelectionHint from '../../../components/facet/MultipleSelectionHint';\nimport SeverityHelper from '../../../components/shared/SeverityHelper';\nimport { formatFacetStat, Query } from '../utils';\n\ninterface Props {\n  fetching: boolean;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  severities: string[];\n  stats: T.Dict<number> | undefined;\n}\n\nconst SEVERITIES = ['BLOCKER', 'MINOR', 'CRITICAL', 'INFO', 'MAJOR'];\n\nexport default class SeverityFacet extends React.PureComponent<Props> {\n  property = 'severities';\n\n  static defaultProps = {\n    open: true\n  };\n\n  handleItemClick = (itemValue: string, multiple: boolean) => {\n    const { severities } = this.props;\n    if (multiple) {\n      const newValue = orderBy(\n        severities.includes(itemValue) ? without(severities, itemValue) : [...severities, itemValue]\n      );\n      this.props.onChange({ [this.property]: newValue });\n    } else {\n      this.props.onChange({\n        [this.property]: severities.includes(itemValue) && severities.length < 2 ? [] : [itemValue]\n      });\n    }\n  };\n\n  handleHeaderClick = () => {\n    this.props.onToggle(this.property);\n  };\n\n  handleClear = () => {\n    this.props.onChange({ [this.property]: [] });\n  };\n\n  getStat(severity: string) {\n    const { stats } = this.props;\n    return stats ? stats[severity] : undefined;\n  }\n\n  renderItem = (severity: string) => {\n    const active = this.props.severities.includes(severity);\n    const stat = this.getStat(severity);\n\n    return (\n      <FacetItem\n        active={active}\n        disabled={stat === 0 && !active}\n        halfWidth={true}\n        key={severity}\n        name={<SeverityHelper severity={severity} />}\n        onClick={this.handleItemClick}\n        stat={formatFacetStat(stat)}\n        tooltip={translate('severity', severity)}\n        value={severity}\n      />\n    );\n  };\n\n  render() {\n    const { severities, stats = {} } = this.props;\n    const values = severities.map(severity => translate('severity', severity));\n\n    return (\n      <FacetBox property={this.property}>\n        <FacetHeader\n          fetching={this.props.fetching}\n          name={translate('issues.facet', this.property)}\n          onClear={this.handleClear}\n          onClick={this.handleHeaderClick}\n          open={this.props.open}\n          values={values}\n        />\n\n        {this.props.open && (\n          <>\n            <FacetItemsList>{SEVERITIES.map(this.renderItem)}</FacetItemsList>\n            <MultipleSelectionHint options={Object.keys(stats).length} values={severities.length} />\n          </>\n        )}\n      </FacetBox>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { orderBy, without } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport FacetBox from '../../../components/facet/FacetBox';\nimport FacetHeader from '../../../components/facet/FacetHeader';\nimport FacetItem from '../../../components/facet/FacetItem';\nimport FacetItemsList from '../../../components/facet/FacetItemsList';\nimport MultipleSelectionHint from '../../../components/facet/MultipleSelectionHint';\nimport StatusHelper from '../../../components/shared/StatusHelper';\nimport { formatFacetStat, Query } from '../utils';\n\ninterface Props {\n  fetching: boolean;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  stats: T.Dict<number> | undefined;\n  statuses: string[];\n}\n\nconst STATUSES = ['OPEN', 'CONFIRMED', 'REOPENED', 'RESOLVED', 'CLOSED'];\n\nexport default class StatusFacet extends React.PureComponent<Props> {\n  property = 'statuses';\n\n  static defaultProps = { open: true };\n\n  handleItemClick = (itemValue: string, multiple: boolean) => {\n    const { statuses } = this.props;\n    if (multiple) {\n      const newValue = orderBy(\n        statuses.includes(itemValue) ? without(statuses, itemValue) : [...statuses, itemValue]\n      );\n      this.props.onChange({ [this.property]: newValue });\n    } else {\n      this.props.onChange({\n        [this.property]: statuses.includes(itemValue) && statuses.length < 2 ? [] : [itemValue]\n      });\n    }\n  };\n\n  handleHeaderClick = () => {\n    this.props.onToggle(this.property);\n  };\n\n  handleClear = () => {\n    this.props.onChange({ [this.property]: [] });\n  };\n\n  getStat(status: string) {\n    const { stats } = this.props;\n    return stats ? stats[status] : undefined;\n  }\n\n  renderItem = (status: string) => {\n    const active = this.props.statuses.includes(status);\n    const stat = this.getStat(status);\n\n    return (\n      <FacetItem\n        active={active}\n        disabled={stat === 0 && !active}\n        halfWidth={true}\n        key={status}\n        name={<StatusHelper resolution={undefined} status={status} />}\n        onClick={this.handleItemClick}\n        stat={formatFacetStat(stat)}\n        tooltip={translate('issue.status', status)}\n        value={status}\n      />\n    );\n  };\n\n  render() {\n    const { statuses, stats = {} } = this.props;\n    const values = statuses.map(status => translate('issue.status', status));\n\n    return (\n      <FacetBox property={this.property}>\n        <FacetHeader\n          fetching={this.props.fetching}\n          name={translate('issues.facet', this.property)}\n          onClear={this.handleClear}\n          onClick={this.handleHeaderClick}\n          open={this.props.open}\n          values={values}\n        />\n\n        {this.props.open && (\n          <>\n            <FacetItemsList title={translate('issues')}>\n              {STATUSES.map(this.renderItem)}\n            </FacetItemsList>\n            <MultipleSelectionHint options={Object.keys(stats).length} values={statuses.length} />\n          </>\n        )}\n      </FacetBox>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { highlightTerm } from 'sonar-ui-common/helpers/search';\nimport { searchIssueTags } from '../../../api/issues';\nimport { colors } from '../../../app/theme';\nimport ListStyleFacet from '../../../components/facet/ListStyleFacet';\nimport { Facet, Query } from '../utils';\n\ninterface Props {\n  component: T.Component | undefined;\n  fetching: boolean;\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  organization: string | undefined;\n  query: Query;\n  stats: T.Dict<number> | undefined;\n  tags: string[];\n}\n\nconst SEARCH_SIZE = 100;\n\nexport default class TagFacet extends React.PureComponent<Props> {\n  handleSearch = (query: string) => {\n    const { component } = this.props;\n    const project =\n      component && ['TRK', 'VW', 'APP'].includes(component.qualifier) ? component.key : undefined;\n    return searchIssueTags({\n      organization: this.props.organization,\n      project,\n      ps: SEARCH_SIZE,\n      q: query\n    }).then(tags => ({ maxResults: tags.length === SEARCH_SIZE, results: tags }));\n  };\n\n  getTagName = (tag: string) => {\n    return tag;\n  };\n\n  loadSearchResultCount = (tags: string[]) => {\n    return this.props.loadSearchResultCount('tags', { tags });\n  };\n\n  renderTag = (tag: string) => {\n    return (\n      <>\n        <TagsIcon className=\"little-spacer-right\" fill={colors.gray60} />\n        {tag}\n      </>\n    );\n  };\n\n  renderSearchResult = (tag: string, term: string) => (\n    <>\n      <TagsIcon className=\"little-spacer-right\" fill={colors.gray60} />\n      {highlightTerm(tag, term)}\n    </>\n  );\n\n  render() {\n    return (\n      <ListStyleFacet<string>\n        facetHeader={translate('issues.facet.tags')}\n        fetching={this.props.fetching}\n        getFacetItemText={this.getTagName}\n        getSearchResultKey={tag => tag}\n        getSearchResultText={tag => tag}\n        loadSearchResultCount={this.loadSearchResultCount}\n        onChange={this.props.onChange}\n        onSearch={this.handleSearch}\n        onToggle={this.props.onToggle}\n        open={this.props.open}\n        property=\"tags\"\n        query={omit(this.props.query, 'tags')}\n        renderFacetItem={this.renderTag}\n        renderSearchResult={this.renderSearchResult}\n        searchPlaceholder={translate('search.search_for_tags')}\n        stats={this.props.stats}\n        values={this.props.tags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { orderBy, without } from 'lodash';\nimport * as React from 'react';\nimport IssueTypeIcon from 'sonar-ui-common/components/icons/IssueTypeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport FacetBox from '../../../components/facet/FacetBox';\nimport FacetHeader from '../../../components/facet/FacetHeader';\nimport FacetItem from '../../../components/facet/FacetItem';\nimport FacetItemsList from '../../../components/facet/FacetItemsList';\nimport MultipleSelectionHint from '../../../components/facet/MultipleSelectionHint';\nimport { ISSUE_TYPES } from '../../../helpers/constants';\nimport { formatFacetStat, Query } from '../utils';\n\ninterface Props {\n  fetching: boolean;\n  onChange: (changes: Partial<Query>) => void;\n  onToggle: (property: string) => void;\n  open: boolean;\n  stats: T.Dict<number> | undefined;\n  types: string[];\n}\n\nexport default class TypeFacet extends React.PureComponent<Props> {\n  property = 'types';\n\n  static defaultProps = {\n    open: true\n  };\n\n  handleItemClick = (itemValue: string, multiple: boolean) => {\n    const { types } = this.props;\n    if (multiple) {\n      const newValue = orderBy(\n        types.includes(itemValue) ? without(types, itemValue) : [...types, itemValue]\n      );\n      this.props.onChange({ [this.property]: newValue });\n    } else {\n      this.props.onChange({\n        [this.property]: types.includes(itemValue) && types.length < 2 ? [] : [itemValue]\n      });\n    }\n  };\n\n  handleHeaderClick = () => {\n    this.props.onToggle(this.property);\n  };\n\n  handleClear = () => {\n    this.props.onChange({ [this.property]: [] });\n  };\n\n  getStat(type: string) {\n    const { stats } = this.props;\n    return stats ? stats[type] : undefined;\n  }\n\n  isFacetItemActive(type: string) {\n    return this.props.types.includes(type);\n  }\n\n  renderItem = (type: string) => {\n    const active = this.isFacetItemActive(type);\n    const stat = this.getStat(type);\n\n    return (\n      <FacetItem\n        active={active}\n        disabled={stat === 0 && !active}\n        key={type}\n        name={\n          <span className=\"display-flex-center\">\n            <IssueTypeIcon className=\"little-spacer-right\" query={type} />{' '}\n            {translate('issue.type', type)}\n          </span>\n        }\n        onClick={this.handleItemClick}\n        stat={formatFacetStat(stat)}\n        value={type}\n      />\n    );\n  };\n\n  render() {\n    const { types, stats = {} } = this.props;\n    const values = types.map(type => translate('issue.type', type));\n\n    return (\n      <FacetBox property={this.property}>\n        <FacetHeader\n          fetching={this.props.fetching}\n          name={translate('issues.facet', this.property)}\n          onClear={this.handleClear}\n          onClick={this.handleHeaderClick}\n          open={this.props.open}\n          values={values}\n        />\n\n        {this.props.open && (\n          <>\n            <FacetItemsList>\n              {ISSUE_TYPES.filter(t => t !== 'SECURITY_HOTSPOT').map(this.renderItem)}\n            </FacetItemsList>\n            <MultipleSelectionHint options={Object.keys(stats).length} values={types.length} />\n          </>\n        )}\n      </FacetBox>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Facet, Query, ReferencedComponent, ReferencedLanguage, ReferencedRule } from '../utils';\nimport AssigneeFacet from './AssigneeFacet';\nimport AuthorFacet from './AuthorFacet';\nimport CreationDateFacet from './CreationDateFacet';\nimport DirectoryFacet from './DirectoryFacet';\nimport FileFacet from './FileFacet';\nimport LanguageFacet from './LanguageFacet';\nimport ProjectFacet from './ProjectFacet';\nimport ResolutionFacet from './ResolutionFacet';\nimport RuleFacet from './RuleFacet';\nimport SeverityFacet from './SeverityFacet';\nimport StandardFacet from './StandardFacet';\nimport StatusFacet from './StatusFacet';\nimport TagFacet from './TagFacet';\nimport TypeFacet from './TypeFacet';\n\nexport interface Props {\n  component: T.Component | undefined;\n  facets: T.Dict<Facet | undefined>;\n  hideAuthorFacet?: boolean;\n  loadSearchResultCount: (property: string, changes: Partial<Query>) => Promise<Facet>;\n  loadingFacets: T.Dict<boolean>;\n  myIssues: boolean;\n  onFacetToggle: (property: string) => void;\n  onFilterChange: (changes: Partial<Query>) => void;\n  openFacets: T.Dict<boolean>;\n  organization: { key: string } | undefined;\n  query: Query;\n  referencedComponentsById: T.Dict<ReferencedComponent>;\n  referencedComponentsByKey: T.Dict<ReferencedComponent>;\n  referencedLanguages: T.Dict<ReferencedLanguage>;\n  referencedRules: T.Dict<ReferencedRule>;\n  referencedUsers: T.Dict<T.UserBase>;\n}\n\nexport default class Sidebar extends React.PureComponent<Props> {\n  renderComponentFacets() {\n    const { component, facets, loadingFacets, openFacets, query } = this.props;\n    if (!component) {\n      return null;\n    }\n    const commonProps = {\n      componentKey: component.key,\n      loadSearchResultCount: this.props.loadSearchResultCount,\n      onChange: this.props.onFilterChange,\n      onToggle: this.props.onFacetToggle,\n      query\n    };\n    return (\n      <>\n        {component.qualifier !== 'DIR' && (\n          <DirectoryFacet\n            directories={query.directories}\n            fetching={loadingFacets.directories === true}\n            open={!!openFacets.directories}\n            stats={facets.directories}\n            {...commonProps}\n          />\n        )}\n        <FileFacet\n          fetching={loadingFacets.files === true}\n          fileUuids={query.files}\n          open={!!openFacets.files}\n          referencedComponents={this.props.referencedComponentsById}\n          stats={facets.files}\n          {...commonProps}\n        />\n      </>\n    );\n  }\n\n  render() {\n    const { component, facets, hideAuthorFacet, openFacets, query } = this.props;\n\n    const displayProjectsFacet =\n      !component || !['TRK', 'BRC', 'DIR', 'DEV_PRJ'].includes(component.qualifier);\n    const displayAuthorFacet = !hideAuthorFacet && (!component || component.qualifier !== 'DEV');\n\n    const organizationKey =\n      (component && component.organization) ||\n      (this.props.organization && this.props.organization.key);\n\n    return (\n      <>\n        <TypeFacet\n          fetching={this.props.loadingFacets.types === true}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.types}\n          stats={facets.types}\n          types={query.types}\n        />\n        <SeverityFacet\n          fetching={this.props.loadingFacets.severities === true}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.severities}\n          severities={query.severities}\n          stats={facets.severities}\n        />\n        <ResolutionFacet\n          fetching={this.props.loadingFacets.resolutions === true}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.resolutions}\n          resolutions={query.resolutions}\n          resolved={query.resolved}\n          stats={facets.resolutions}\n        />\n        <StatusFacet\n          fetching={this.props.loadingFacets.statuses === true}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.statuses}\n          stats={facets.statuses}\n          statuses={query.statuses}\n        />\n        <StandardFacet\n          cwe={query.cwe}\n          cweOpen={!!openFacets.cwe}\n          cweStats={facets.cwe}\n          fetchingCwe={this.props.loadingFacets.cwe === true}\n          fetchingOwaspTop10={this.props.loadingFacets.owaspTop10 === true}\n          fetchingSansTop25={this.props.loadingFacets.sansTop25 === true}\n          fetchingSonarSourceSecurity={this.props.loadingFacets.sonarsourceSecurity === true}\n          loadSearchResultCount={this.props.loadSearchResultCount}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.standards}\n          owaspTop10={query.owaspTop10}\n          owaspTop10Open={!!openFacets.owaspTop10}\n          owaspTop10Stats={facets.owaspTop10}\n          query={query}\n          sansTop25={query.sansTop25}\n          sansTop25Open={!!openFacets.sansTop25}\n          sansTop25Stats={facets.sansTop25}\n          sonarsourceSecurity={query.sonarsourceSecurity}\n          sonarsourceSecurityOpen={!!openFacets.sonarsourceSecurity}\n          sonarsourceSecurityStats={facets.sonarsourceSecurity}\n        />\n        <CreationDateFacet\n          component={component}\n          createdAfter={query.createdAfter}\n          createdAt={query.createdAt}\n          createdBefore={query.createdBefore}\n          createdInLast={query.createdInLast}\n          fetching={this.props.loadingFacets.createdAt === true}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.createdAt}\n          sinceLeakPeriod={query.sinceLeakPeriod}\n          stats={facets.createdAt}\n        />\n        <LanguageFacet\n          fetching={this.props.loadingFacets.languages === true}\n          languages={query.languages}\n          loadSearchResultCount={this.props.loadSearchResultCount}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.languages}\n          query={query}\n          referencedLanguages={this.props.referencedLanguages}\n          stats={facets.languages}\n        />\n        <RuleFacet\n          fetching={this.props.loadingFacets.rules === true}\n          languages={query.languages}\n          loadSearchResultCount={this.props.loadSearchResultCount}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.rules}\n          organization={organizationKey}\n          query={query}\n          referencedRules={this.props.referencedRules}\n          rules={query.rules}\n          stats={facets.rules}\n        />\n        <TagFacet\n          component={component}\n          fetching={this.props.loadingFacets.tags === true}\n          loadSearchResultCount={this.props.loadSearchResultCount}\n          onChange={this.props.onFilterChange}\n          onToggle={this.props.onFacetToggle}\n          open={!!openFacets.tags}\n          organization={organizationKey}\n          query={query}\n          stats={facets.tags}\n          tags={query.tags}\n        />\n        {displayProjectsFacet && (\n          <ProjectFacet\n            component={component}\n            fetching={this.props.loadingFacets.projects === true}\n            loadSearchResultCount={this.props.loadSearchResultCount}\n            onChange={this.props.onFilterChange}\n            onToggle={this.props.onFacetToggle}\n            open={!!openFacets.projects}\n            organization={this.props.organization}\n            projects={query.projects}\n            query={query}\n            referencedComponents={this.props.referencedComponentsByKey}\n            stats={facets.projects}\n          />\n        )}\n        {this.renderComponentFacets()}\n        {!this.props.myIssues && (\n          <AssigneeFacet\n            assigned={query.assigned}\n            assignees={query.assignees}\n            fetching={this.props.loadingFacets.assignees === true}\n            loadSearchResultCount={this.props.loadSearchResultCount}\n            onChange={this.props.onFilterChange}\n            onToggle={this.props.onFacetToggle}\n            open={!!openFacets.assignees}\n            organization={organizationKey}\n            query={query}\n            referencedUsers={this.props.referencedUsers}\n            stats={facets.assignees}\n          />\n        )}\n        {displayAuthorFacet && (\n          <AuthorFacet\n            authors={query.authors}\n            component={component}\n            fetching={this.props.loadingFacets.authors === true}\n            loadSearchResultCount={this.props.loadSearchResultCount}\n            onChange={this.props.onFilterChange}\n            onToggle={this.props.onFacetToggle}\n            open={!!openFacets.authors}\n            organization={organizationKey}\n            query={query}\n            stats={facets.authors}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { pickBy, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport SearchSelect from 'sonar-ui-common/components/controls/SearchSelect';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport IssueTypeIcon from 'sonar-ui-common/components/icons/IssueTypeIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { bulkChangeIssues, searchIssueTags } from '../../../api/issues';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\nimport MarkdownTips from '../../../components/common/MarkdownTips';\nimport SeverityHelper from '../../../components/shared/SeverityHelper';\nimport Avatar from '../../../components/ui/Avatar';\nimport { isLoggedIn, isUserActive } from '../../../helpers/users';\nimport { searchAssignees } from '../utils';\n\ninterface AssigneeOption {\n  avatar?: string;\n  email?: string;\n  label: string;\n  value: string;\n}\n\ninterface TagOption {\n  label: string;\n  value: string;\n}\n\ninterface Props {\n  component: T.Component | undefined;\n  currentUser: T.CurrentUser;\n  fetchIssues: (x: {}) => Promise<{ issues: T.Issue[]; paging: T.Paging }>;\n  onClose: () => void;\n  onDone: () => void;\n  organization: { key: string } | undefined;\n}\n\ninterface FormFields {\n  addTags?: Array<{ label: string; value: string }>;\n  assignee?: AssigneeOption;\n  comment?: string;\n  notifications?: boolean;\n  organization?: string;\n  removeTags?: Array<{ label: string; value: string }>;\n  severity?: string;\n  transition?: string;\n  type?: string;\n}\n\ninterface State extends FormFields {\n  initialTags: Array<{ label: string; value: string }>;\n  issues: T.Issue[];\n  // used for initial loading of issues\n  loading: boolean;\n  paging?: T.Paging;\n  // used when submitting a form\n  submitting: boolean;\n}\n\ntype AssigneeSelectType = new () => SearchSelect<AssigneeOption>;\nconst AssigneeSelect = SearchSelect as AssigneeSelectType;\n\ntype TagSelectType = new () => SearchSelect<TagOption>;\nconst TagSelect = SearchSelect as TagSelectType;\n\nexport const MAX_PAGE_SIZE = 500;\n\nexport default class BulkChangeModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    let organization = props.component && props.component.organization;\n    if (props.organization && !organization) {\n      organization = props.organization.key;\n    }\n    this.state = { initialTags: [], issues: [], loading: true, submitting: false, organization };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    Promise.all([\n      this.loadIssues(),\n      searchIssueTags({ organization: this.state.organization })\n    ]).then(\n      ([{ issues, paging }, tags]) => {\n        if (this.mounted) {\n          if (issues.length > MAX_PAGE_SIZE) {\n            issues = issues.slice(0, MAX_PAGE_SIZE);\n          }\n\n          this.setState({\n            initialTags: tags.map(tag => ({ label: tag, value: tag })),\n            issues,\n            loading: false,\n            paging\n          });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadIssues = () => {\n    return this.props.fetchIssues({ additionalFields: 'actions,transitions', ps: MAX_PAGE_SIZE });\n  };\n\n  getDefaultAssignee = () => {\n    const { currentUser } = this.props;\n    const { issues } = this.state;\n    const options = [];\n\n    if (isLoggedIn(currentUser)) {\n      const canBeAssignedToMe =\n        issues.filter(issue => issue.assignee !== currentUser.login).length > 0;\n      if (canBeAssignedToMe) {\n        options.push({\n          avatar: currentUser.avatar,\n          label: currentUser.name,\n          value: currentUser.login\n        });\n      }\n    }\n\n    const canBeUnassigned = issues.filter(issue => issue.assignee).length > 0;\n    if (canBeUnassigned) {\n      options.push({ label: translate('unassigned'), value: '' });\n    }\n\n    return options;\n  };\n\n  handleAssigneeSearch = (query: string) => {\n    return searchAssignees(query, this.state.organization).then(({ results }) =>\n      results.map(r => {\n        const userInfo = r.name || r.login;\n\n        return {\n          avatar: r.avatar,\n          label: isUserActive(r) ? userInfo : translateWithParameters('user.x_deleted', userInfo),\n          value: r.login\n        };\n      })\n    );\n  };\n\n  handleAssigneeSelect = (assignee: AssigneeOption) => {\n    this.setState({ assignee });\n  };\n\n  handleTagsSearch = (query: string) => {\n    return searchIssueTags({ organization: this.state.organization, q: query }).then(tags =>\n      tags.map(tag => ({ label: tag, value: tag }))\n    );\n  };\n\n  handleTagsSelect = (field: 'addTags' | 'removeTags') => (\n    options: Array<{ label: string; value: string }>\n  ) => {\n    this.setState<keyof FormFields>({ [field]: options });\n  };\n\n  handleFieldCheck = (field: keyof FormFields) => (checked: boolean) => {\n    if (!checked) {\n      this.setState<keyof FormFields>({ [field]: undefined });\n    } else if (field === 'notifications') {\n      this.setState<keyof FormFields>({ [field]: true });\n    }\n  };\n\n  handleRadioTransitionChange = (transition: string) => {\n    this.setState({ transition });\n  };\n\n  handleCommentChange = (event: React.SyntheticEvent<HTMLTextAreaElement>) => {\n    this.setState({ comment: event.currentTarget.value });\n  };\n\n  handleSelectFieldChange = (field: 'severity' | 'type') => (data: { value: string } | null) => {\n    if (data) {\n      this.setState<keyof FormFields>({ [field]: data.value });\n    } else {\n      this.setState<keyof FormFields>({ [field]: undefined });\n    }\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const query = pickBy(\n      {\n        add_tags: this.state.addTags && this.state.addTags.map(t => t.value).join(),\n        assign: this.state.assignee ? this.state.assignee.value : null,\n        comment: this.state.comment,\n        do_transition: this.state.transition,\n        remove_tags: this.state.removeTags && this.state.removeTags.map(t => t.value).join(),\n        sendNotifications: this.state.notifications,\n        set_severity: this.state.severity,\n        set_type: this.state.type\n      },\n      x => x !== undefined\n    );\n\n    const issueKeys = this.state.issues.map(issue => issue.key);\n\n    this.setState({ submitting: true });\n    bulkChangeIssues(issueKeys, query).then(\n      () => {\n        this.setState({ submitting: false });\n        this.props.onDone();\n      },\n      error => {\n        this.setState({ submitting: false });\n        throwGlobalError(error);\n      }\n    );\n  };\n\n  getAvailableTransitions(issues: T.Issue[]) {\n    const transitions: T.Dict<number> = {};\n    issues.forEach(issue => {\n      if (issue.transitions) {\n        issue.transitions.forEach(t => {\n          if (transitions[t] !== undefined) {\n            transitions[t]++;\n          } else {\n            transitions[t] = 1;\n          }\n        });\n      }\n    });\n    return sortBy(Object.keys(transitions)).map(transition => ({\n      transition,\n      count: transitions[transition]\n    }));\n  }\n\n  renderLoading = () => (\n    <div>\n      <div className=\"modal-head\">\n        <h2>{translate('bulk_change')}</h2>\n      </div>\n      <div className=\"modal-body\">\n        <div className=\"text-center\">\n          <i className=\"spinner spacer\" />\n        </div>\n      </div>\n      <div className=\"modal-foot\">\n        <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n      </div>\n    </div>\n  );\n\n  renderAffected = (affected: number) => (\n    <div className=\"pull-right note\">\n      ({translateWithParameters('issue_bulk_change.x_issues', affected)})\n    </div>\n  );\n\n  renderField = (\n    field: 'addTags' | 'assignee' | 'removeTags' | 'severity' | 'type',\n    label: string,\n    affected: number | undefined,\n    input: React.ReactNode\n  ) => (\n    <div className=\"modal-field\" id={`issues-bulk-change-${field}`}>\n      <label htmlFor={field}>{translate(label)}</label>\n      {input}\n      {affected !== undefined && this.renderAffected(affected)}\n    </div>\n  );\n\n  renderAssigneeOption = (option: AssigneeOption) => {\n    return (\n      <span>\n        {option.avatar !== undefined && (\n          <Avatar className=\"spacer-right\" hash={option.avatar} name={option.label} size={16} />\n        )}\n        {option.label}\n      </span>\n    );\n  };\n\n  renderAssigneeField = () => {\n    const affected = this.state.issues.filter(hasAction('assign')).length;\n\n    if (affected === 0) {\n      return null;\n    }\n\n    const input = (\n      <AssigneeSelect\n        className=\"input-super-large\"\n        clearable={true}\n        defaultOptions={this.getDefaultAssignee()}\n        onSearch={this.handleAssigneeSearch}\n        onSelect={this.handleAssigneeSelect}\n        renderOption={this.renderAssigneeOption}\n        resetOnBlur={false}\n        value={this.state.assignee}\n      />\n    );\n\n    return this.renderField('assignee', 'issue.assign.formlink', affected, input);\n  };\n\n  renderTypeField = () => {\n    const affected = this.state.issues.filter(hasAction('set_type')).length;\n\n    if (affected === 0) {\n      return null;\n    }\n\n    const types: T.IssueType[] = ['BUG', 'VULNERABILITY', 'CODE_SMELL'];\n    const options = types.map(type => ({ label: translate('issue.type', type), value: type }));\n\n    const optionRenderer = (option: { label: string; value: string }) => (\n      <>\n        <IssueTypeIcon query={option.value} />\n        <span className=\"little-spacer-left\">{option.label}</span>\n      </>\n    );\n\n    const input = (\n      <Select\n        className=\"input-super-large\"\n        clearable={true}\n        onChange={this.handleSelectFieldChange('type')}\n        optionRenderer={optionRenderer}\n        options={options}\n        searchable={false}\n        value={this.state.type}\n        valueRenderer={optionRenderer}\n      />\n    );\n\n    return this.renderField('type', 'issue.set_type', affected, input);\n  };\n\n  renderSeverityField = () => {\n    const affected = this.state.issues.filter(hasAction('set_severity')).length;\n\n    if (affected === 0) {\n      return null;\n    }\n\n    const severities = ['BLOCKER', 'CRITICAL', 'MAJOR', 'MINOR', 'INFO'];\n    const options = severities.map(severity => ({\n      label: translate('severity', severity),\n      value: severity\n    }));\n\n    const input = (\n      <Select\n        className=\"input-super-large\"\n        clearable={true}\n        onChange={this.handleSelectFieldChange('severity')}\n        optionRenderer={(option: { value: string }) => <SeverityHelper severity={option.value} />}\n        options={options}\n        searchable={false}\n        value={this.state.severity}\n        valueRenderer={(option: { value: string }) => <SeverityHelper severity={option.value} />}\n      />\n    );\n\n    return this.renderField('severity', 'issue.set_severity', affected, input);\n  };\n\n  renderTagOption = (option: TagOption) => {\n    return <span>{option.label}</span>;\n  };\n\n  renderTagsField = (field: 'addTags' | 'removeTags', label: string, allowCreate: boolean) => {\n    const { initialTags } = this.state;\n    const affected = this.state.issues.filter(hasAction('set_tags')).length;\n\n    if (initialTags === undefined || affected === 0) {\n      return null;\n    }\n\n    const input = (\n      <TagSelect\n        canCreate={allowCreate}\n        className=\"input-super-large\"\n        clearable={true}\n        defaultOptions={this.state.initialTags}\n        minimumQueryLength={0}\n        multi={true}\n        onMultiSelect={this.handleTagsSelect(field)}\n        onSearch={this.handleTagsSearch}\n        promptTextCreator={promptCreateTag}\n        renderOption={this.renderTagOption}\n        resetOnBlur={false}\n        value={this.state[field]}\n      />\n    );\n\n    return this.renderField(field, label, affected, input);\n  };\n\n  renderTransitionsField = () => {\n    const transitions = this.getAvailableTransitions(this.state.issues);\n\n    if (transitions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"modal-field\">\n        <label>{translate('issue.transition')}</label>\n        {transitions.map(transition => (\n          <span\n            className=\"bulk-change-radio-button display-flex-center display-flex-space-between\"\n            key={transition.transition}>\n            <Radio\n              checked={this.state.transition === transition.transition}\n              onCheck={this.handleRadioTransitionChange}\n              value={transition.transition}>\n              {translate('issue.transition', transition.transition)}\n            </Radio>\n            {this.renderAffected(transition.count)}\n          </span>\n        ))}\n      </div>\n    );\n  };\n\n  renderCommentField = () => {\n    const affected = this.state.issues.filter(hasAction('comment')).length;\n\n    if (affected === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"modal-field\">\n        <label htmlFor=\"comment\">\n          <span className=\"text-middle\">{translate('issue.comment.formlink')}</span>\n          <HelpTooltip\n            className=\"spacer-left\"\n            overlay={translate('issue_bulk_change.comment.help')}\n          />\n        </label>\n        <textarea\n          id=\"comment\"\n          onChange={this.handleCommentChange}\n          rows={4}\n          value={this.state.comment || ''}\n        />\n        <MarkdownTips className=\"modal-field-descriptor text-right\" />\n      </div>\n    );\n  };\n\n  renderNotificationsField = () => (\n    <Checkbox\n      checked={this.state.notifications !== undefined}\n      className=\"display-inline-block spacer-top\"\n      id=\"send-notifications\"\n      onCheck={this.handleFieldCheck('notifications')}\n      right={true}>\n      <strong className=\"little-spacer-right\">{translate('issue.send_notifications')}</strong>\n    </Checkbox>\n  );\n\n  renderForm = () => {\n    const { issues, paging, submitting } = this.state;\n\n    const limitReached = paging && paging.total > MAX_PAGE_SIZE;\n\n    return (\n      <form id=\"bulk-change-form\" onSubmit={this.handleSubmit}>\n        <div className=\"modal-head\">\n          <h2>{translateWithParameters('issue_bulk_change.form.title', issues.length)}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {limitReached && (\n            <Alert variant=\"warning\">\n              <FormattedMessage\n                defaultMessage={translate('issue_bulk_change.max_issues_reached')}\n                id=\"issue_bulk_change.max_issues_reached\"\n                values={{ max: <strong>{MAX_PAGE_SIZE}</strong> }}\n              />\n            </Alert>\n          )}\n\n          {this.renderAssigneeField()}\n          {this.renderTypeField()}\n          {this.renderSeverityField()}\n          {this.renderTagsField('addTags', 'issue.add_tags', true)}\n          {this.renderTagsField('removeTags', 'issue.remove_tags', false)}\n          {this.renderTransitionsField()}\n          {this.renderCommentField()}\n          {issues.length > 0 && this.renderNotificationsField()}\n          {issues.length === 0 && (\n            <Alert variant=\"warning\">{translate('issue_bulk_change.no_match')}</Alert>\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          {submitting && <i className=\"spinner spacer-right\" />}\n          <SubmitButton disabled={submitting || issues.length === 0} id=\"bulk-change-submit\">\n            {translate('apply')}\n          </SubmitButton>\n          <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </form>\n    );\n  };\n\n  render() {\n    return (\n      <Modal contentLabel=\"modal\" onRequestClose={this.props.onClose} size=\"small\">\n        {this.state.loading ? this.renderLoading() : this.renderForm()}\n      </Modal>\n    );\n  }\n}\n\nfunction hasAction(action: string) {\n  return (issue: T.Issue) => issue.actions && issue.actions.includes(action);\n}\n\nfunction promptCreateTag(label: string) {\n  return `+ ${label}`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { collapsePath, limitComponentName } from 'sonar-ui-common/helpers/path';\nimport Organization from '../../../components/shared/Organization';\nimport { getSelectedLocation } from '../utils';\n\ninterface Props {\n  component?: T.Component;\n  issue: Pick<\n    T.Issue,\n    | 'component'\n    | 'componentLongName'\n    | 'flows'\n    | 'organization'\n    | 'project'\n    | 'projectName'\n    | 'secondaryLocations'\n    | 'subProject'\n    | 'subProjectName'\n  >;\n  link?: boolean;\n  organization: { key: string } | undefined;\n  selectedFlowIndex?: number;\n  selectedLocationIndex?: number;\n}\n\nexport default function ComponentBreadcrumbs({\n  component,\n  issue,\n  organization,\n  selectedFlowIndex,\n  selectedLocationIndex\n}: Props) {\n  const displayOrganization =\n    !organization && (!component || ['VW', 'SVW'].includes(component.qualifier));\n  const displayProject = !component || !['TRK', 'BRC', 'DIR'].includes(component.qualifier);\n  const displaySubProject = !component || !['BRC', 'DIR'].includes(component.qualifier);\n\n  const selectedLocation = getSelectedLocation(issue, selectedFlowIndex, selectedLocationIndex);\n  const componentName = selectedLocation ? selectedLocation.componentName : issue.componentLongName;\n\n  return (\n    <div className=\"component-name text-ellipsis\">\n      {displayOrganization && <Organization link={false} organizationKey={issue.organization} />}\n\n      {displayProject && (\n        <span title={issue.projectName}>\n          {limitComponentName(issue.projectName)}\n          <span className=\"slash-separator\" />\n        </span>\n      )}\n\n      {displaySubProject && issue.subProject !== undefined && issue.subProjectName !== undefined && (\n        <span title={issue.subProjectName}>\n          {limitComponentName(issue.subProjectName)}\n          <span className=\"slash-separator\" />\n        </span>\n      )}\n\n      {collapsePath(componentName || '')}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Issue from '../../../components/issue/Issue';\nimport { BranchLike } from '../../../types/branch-like';\nimport { Query } from '../utils';\nimport ComponentBreadcrumbs from './ComponentBreadcrumbs';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  checked: boolean;\n  component: T.Component | undefined;\n  issue: T.Issue;\n  onChange: (issue: T.Issue) => void;\n  onCheck: ((issueKey: string) => void) | undefined;\n  onClick: (issueKey: string) => void;\n  onFilterChange: (changes: Partial<Query>) => void;\n  onPopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  openPopup: string | undefined;\n  organization: { key: string } | undefined;\n  previousIssue: T.Issue | undefined;\n  selected: boolean;\n}\n\nexport default class ListItem extends React.PureComponent<Props> {\n  handleFilter = (property: string, issue: T.Issue) => {\n    const { onFilterChange } = this.props;\n\n    const issuesReset = { issues: [] };\n\n    if (property.startsWith('tag###')) {\n      const tag = property.substr(6);\n      onFilterChange({ ...issuesReset, tags: [tag] });\n    } else {\n      switch (property) {\n        case 'type':\n          onFilterChange({ ...issuesReset, types: [issue.type] });\n          break;\n        case 'severity':\n          onFilterChange({ ...issuesReset, severities: [issue.severity] });\n          break;\n        case 'status':\n          onFilterChange({ ...issuesReset, statuses: [issue.status] });\n          break;\n        case 'resolution':\n          if (issue.resolution) {\n            onFilterChange({ ...issuesReset, resolved: true, resolutions: [issue.resolution] });\n          } else {\n            onFilterChange({ ...issuesReset, resolved: false, resolutions: [] });\n          }\n          break;\n        case 'assignee':\n          if (issue.assignee) {\n            onFilterChange({ ...issuesReset, assigned: true, assignees: [issue.assignee] });\n          } else {\n            onFilterChange({ ...issuesReset, assigned: false, assignees: [] });\n          }\n          break;\n        case 'rule':\n          onFilterChange({ ...issuesReset, rules: [issue.rule] });\n          break;\n        case 'project':\n          onFilterChange({ ...issuesReset, projects: [issue.projectKey] });\n          break;\n        case 'module':\n          if (issue.subProjectUuid) {\n            onFilterChange({ ...issuesReset, modules: [issue.subProjectUuid] });\n          }\n          break;\n        case 'file':\n          onFilterChange({ ...issuesReset, files: [issue.componentUuid] });\n      }\n    }\n  };\n\n  render() {\n    const { branchLike, component, issue, previousIssue } = this.props;\n\n    const displayComponent = !previousIssue || previousIssue.component !== issue.component;\n\n    return (\n      <div className=\"issues-workspace-list-item\">\n        {displayComponent && (\n          <div className=\"issues-workspace-list-component note\">\n            <ComponentBreadcrumbs\n              component={component}\n              issue={this.props.issue}\n              organization={this.props.organization}\n            />\n          </div>\n        )}\n        <Issue\n          branchLike={branchLike}\n          checked={this.props.checked}\n          issue={issue}\n          onChange={this.props.onChange}\n          onCheck={this.props.onCheck}\n          onClick={this.props.onClick}\n          onFilter={this.handleFilter}\n          onPopupToggle={this.props.onPopupToggle}\n          openPopup={this.props.openPopup}\n          selected={this.props.selected}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../../types/branch-like';\nimport { Query, scrollToIssue } from '../utils';\nimport ListItem from './ListItem';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  checked: string[];\n  component: T.Component | undefined;\n  issues: T.Issue[];\n  onFilterChange: (changes: Partial<Query>) => void;\n  onIssueChange: (issue: T.Issue) => void;\n  onIssueCheck: ((issueKey: string) => void) | undefined;\n  onIssueClick: (issueKey: string) => void;\n  onPopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  openPopup: { issue: string; name: string } | undefined;\n  organization: { key: string } | undefined;\n  selectedIssue: T.Issue | undefined;\n}\n\ninterface State {\n  prerender: boolean;\n}\n\nexport default class IssuesList extends React.PureComponent<Props, State> {\n  state: State = {\n    prerender: true\n  };\n\n  componentDidMount() {\n    // ! \\\\ This prerender state variable is to enable the page to be displayed\n    //      immediately, displaying a loader before attempting to render the\n    //      list of issues. See https://jira.sonarsource.com/browse/SONAR-11681\n    setTimeout(() => {\n      this.setState({ prerender: false });\n      if (this.props.selectedIssue) {\n        scrollToIssue(this.props.selectedIssue.key, false);\n      }\n    }, 42);\n  }\n\n  render() {\n    const { branchLike, checked, component, issues, openPopup, selectedIssue } = this.props;\n    const { prerender } = this.state;\n\n    if (prerender) {\n      return (\n        <div>\n          <i className=\"spinner\" />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {issues.map((issue, index) => (\n          <ListItem\n            branchLike={branchLike}\n            checked={checked.includes(issue.key)}\n            component={component}\n            issue={issue}\n            key={issue.key}\n            onChange={this.props.onIssueChange}\n            onCheck={this.props.onIssueCheck}\n            onClick={this.props.onIssueClick}\n            onFilterChange={this.props.onFilterChange}\n            onPopupToggle={this.props.onPopupToggle}\n            openPopup={openPopup && openPopup.issue === issue.key ? openPopup.name : undefined}\n            organization={this.props.organization}\n            previousIssue={index > 0 ? issues[index - 1] : undefined}\n            selected={selectedIssue != null && selectedIssue.key === issue.key}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\n\nconst CrossComponentSourceViewer = lazyLoadComponent(\n  () => import(/* webpackPrefetch: true */ './CrossComponentSourceViewerWrapper'),\n  'CrossComponentSourceViewer'\n);\n\nexport default CrossComponentSourceViewer;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport SourceViewer from '../../../components/SourceViewer/SourceViewer';\nimport { BranchLike } from '../../../types/branch-like';\nimport CrossComponentSourceViewer from '../crossComponentSourceViewer/CrossComponentSourceViewer';\nimport { getLocations, getSelectedLocation } from '../utils';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  issues: T.Issue[];\n  loadIssues: (component: string, from: number, to: number) => Promise<T.Issue[]>;\n  locationsNavigator: boolean;\n  onIssueChange: (issue: T.Issue) => void;\n  onIssueSelect: (issueKey: string) => void;\n  onLocationSelect: (index: number) => void;\n  openIssue: T.Issue;\n  selectedFlowIndex: number | undefined;\n  selectedLocationIndex: number | undefined;\n}\n\nexport default class IssuesSourceViewer extends React.PureComponent<Props> {\n  node?: HTMLElement | null;\n\n  componentDidUpdate(prevProps: Props) {\n    const { openIssue, selectedLocationIndex } = this.props;\n\n    // Scroll back to the issue when the selected location is set to -1\n    const shouldScrollBackToIssue =\n      selectedLocationIndex === -1 && selectedLocationIndex !== prevProps.selectedLocationIndex;\n    if (\n      prevProps.openIssue.component === openIssue.component &&\n      (prevProps.openIssue !== openIssue || shouldScrollBackToIssue)\n    ) {\n      this.scrollToIssue();\n    }\n  }\n\n  scrollToIssue = (smooth = true) => {\n    if (this.node) {\n      const element = this.node.querySelector(`[data-issue=\"${this.props.openIssue.key}\"]`);\n      if (element) {\n        this.handleScroll(element, undefined, smooth);\n      }\n    }\n  };\n\n  handleScroll = (element: Element, offset = window.innerHeight / 2, smooth = true) => {\n    scrollToElement(element, { topOffset: offset - 100, bottomOffset: offset, smooth });\n  };\n\n  handleLoaded = () => {\n    this.scrollToIssue(false);\n  };\n\n  render() {\n    const { openIssue, selectedFlowIndex, selectedLocationIndex } = this.props;\n\n    const locations = getLocations(openIssue, selectedFlowIndex).map((loc, index) => {\n      loc.index = index;\n      return loc;\n    });\n    const selectedLocation = getSelectedLocation(\n      openIssue,\n      selectedFlowIndex,\n      selectedLocationIndex\n    );\n\n    const highlightedLocationMessage =\n      this.props.locationsNavigator && selectedLocationIndex !== undefined\n        ? selectedLocation && { index: selectedLocationIndex, text: selectedLocation.msg }\n        : undefined;\n\n    if (locations.length > 0) {\n      return (\n        <div ref={node => (this.node = node)}>\n          <CrossComponentSourceViewer\n            branchLike={this.props.branchLike}\n            highlightedLocationMessage={highlightedLocationMessage}\n            issue={openIssue}\n            issues={this.props.issues}\n            locations={locations}\n            onIssueChange={this.props.onIssueChange}\n            onLoaded={this.handleLoaded}\n            onLocationSelect={this.props.onLocationSelect}\n            scroll={this.handleScroll}\n            selectedFlowIndex={selectedFlowIndex}\n          />\n        </div>\n      );\n    } else {\n      // if location is selected, show (and load) code around it\n      // otherwise show code around the open issue\n      const aroundLine = selectedLocation\n        ? selectedLocation.textRange.startLine\n        : openIssue.textRange && openIssue.textRange.endLine;\n\n      const component = selectedLocation ? selectedLocation.component : openIssue.component;\n      const allMessagesEmpty =\n        locations !== undefined && locations.every(location => !location.msg);\n\n      const highlightedLocations = locations.filter(location => location.component === component);\n\n      // do not load issues when open another file for a location\n      const loadIssues =\n        component === openIssue.component ? this.props.loadIssues : () => Promise.resolve([]);\n      const selectedIssue = component === openIssue.component ? openIssue.key : undefined;\n\n      return (\n        <div ref={node => (this.node = node)}>\n          <SourceViewer\n            aroundLine={aroundLine}\n            branchLike={this.props.branchLike}\n            component={component}\n            displayAllIssues={true}\n            displayIssueLocationsCount={true}\n            displayIssueLocationsLink={false}\n            displayLocationMarkers={!allMessagesEmpty}\n            highlightedLocationMessage={highlightedLocationMessage}\n            highlightedLocations={highlightedLocations}\n            loadIssues={loadIssues}\n            onIssueChange={this.props.onIssueChange}\n            onIssueSelect={this.props.onIssueSelect}\n            onLoaded={this.handleLoaded}\n            onLocationSelect={this.props.onLocationSelect}\n            scroll={this.handleScroll}\n            selectedIssue={selectedIssue}\n            slimHeader={true}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  myIssues: boolean;\n  onMyIssuesChange: (myIssues: boolean) => void;\n}\n\nexport default class MyIssuesFilter extends React.PureComponent<Props> {\n  handleClick = (myIssues: boolean) => () => {\n    this.props.onMyIssuesChange(myIssues);\n  };\n\n  render() {\n    const { myIssues } = this.props;\n\n    return (\n      <div className=\"issues-my-issues-filter\">\n        <div className=\"button-group\">\n          <Button\n            className={myIssues ? 'button-active' : undefined}\n            onClick={this.handleClick(true)}>\n            {translate('issues.my_issues')}\n          </Button>\n          <Button\n            className={myIssues ? undefined : 'button-active'}\n            onClick={this.handleClick(false)}>\n            {translate('all')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport '../../../components/common/EmptySearch.css';\n\nexport default function NoIssues() {\n  return (\n    <div className=\"empty-search\">\n      <h3>{translate('issues.no_issues')}</h3>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport '../../../components/common/EmptySearch.css';\n\nexport default function NoMyIssues() {\n  return (\n    <div className=\"empty-search\">\n      <h3>{translate('issues.no_my_issues')}</h3>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\n\nexport default function TotalEffort({ effort }: { effort: number }) {\n  return (\n    <div className=\"display-inline-block bordered-left spacer-left\">\n      <div className=\"spacer-left\">\n        <FormattedMessage\n          defaultMessage={translate('issue.x_effort')}\n          id=\"issue.x_effort\"\n          values={{ 0: <strong>{formatMeasure(effort, 'WORK_DUR')}</strong> }}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ReloadButton from 'sonar-ui-common/components/controls/ReloadButton';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport HomePageSelect from '../../../components/controls/HomePageSelect';\nimport { isSonarCloud } from '../../../helpers/system';\nimport IssuesCounter from './IssuesCounter';\nimport TotalEffort from './TotalEffort';\n\ninterface Props {\n  canSetHome: boolean;\n  effortTotal: number | undefined;\n  onReload: () => void;\n  paging: T.Paging | undefined;\n  selectedIndex: number | undefined;\n}\n\nexport default class PageActions extends React.PureComponent<Props> {\n  renderShortcuts() {\n    return (\n      <span className=\"note big-spacer-right\">\n        <span className=\"big-spacer-right\">\n          <span className=\"shortcut-button little-spacer-right\">↑</span>\n          <span className=\"shortcut-button little-spacer-right\">↓</span>\n          {translate('issues.to_select_issues')}\n        </span>\n\n        <span>\n          <span className=\"shortcut-button little-spacer-right\">←</span>\n          <span className=\"shortcut-button little-spacer-right\">→</span>\n          {translate('issues.to_navigate')}\n        </span>\n      </span>\n    );\n  }\n\n  render() {\n    const { effortTotal, paging, selectedIndex } = this.props;\n\n    return (\n      <div className=\"pull-right\">\n        {this.renderShortcuts()}\n\n        <div className=\"issues-page-actions\">\n          <ReloadButton onClick={this.props.onReload} />\n          {paging != null && (\n            <IssuesCounter className=\"spacer-left\" current={selectedIndex} total={paging.total} />\n          )}\n          {effortTotal !== undefined && <TotalEffort effort={effortTotal} />}\n        </div>\n\n        {this.props.canSetHome && (\n          <HomePageSelect\n            className=\"huge-spacer-left\"\n            currentPage={isSonarCloud() ? { type: 'MY_ISSUES' } : { type: 'ISSUES' }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as key from 'keymaster';\nimport { debounce, keyBy, omit, without } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addSideBarClass,\n  addWhitePageClass,\n  removeSideBarClass,\n  removeWhitePageClass\n} from 'sonar-ui-common/helpers/pages';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport EmptySearch from '../../../components/common/EmptySearch';\nimport FiltersHeader from '../../../components/common/FiltersHeader';\nimport ScreenPositionHelper from '../../../components/common/ScreenPositionHelper';\nimport { Location, Router } from '../../../components/hoc/withRouter';\nimport '../../../components/search-navigator.css';\nimport {\n  fillBranchLike,\n  getBranchLikeQuery,\n  isPullRequest,\n  isSameBranchLike\n} from '../../../helpers/branch-like';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { BranchLike } from '../../../types/branch-like';\nimport * as actions from '../actions';\nimport ConciseIssuesList from '../conciseIssuesList/ConciseIssuesList';\nimport ConciseIssuesListHeader from '../conciseIssuesList/ConciseIssuesListHeader';\nimport Sidebar from '../sidebar/Sidebar';\nimport '../styles.css';\nimport {\n  areMyIssuesSelected,\n  areQueriesEqual,\n  Facet,\n  getOpen,\n  mapFacet,\n  parseFacets,\n  parseQuery,\n  Query,\n  RawFacet,\n  ReferencedComponent,\n  ReferencedLanguage,\n  ReferencedRule,\n  saveMyIssues,\n  scrollToIssue,\n  serializeQuery,\n  shouldOpenSonarSourceSecurityFacet,\n  shouldOpenStandardsChildFacet,\n  shouldOpenStandardsFacet,\n  STANDARDS\n} from '../utils';\nimport BulkChangeModal, { MAX_PAGE_SIZE } from './BulkChangeModal';\nimport IssuesList from './IssuesList';\nimport IssuesSourceViewer from './IssuesSourceViewer';\nimport MyIssuesFilter from './MyIssuesFilter';\nimport NoIssues from './NoIssues';\nimport NoMyIssues from './NoMyIssues';\nimport PageActions from './PageActions';\n\ninterface FetchIssuesPromise {\n  components: ReferencedComponent[];\n  effortTotal: number;\n  facets: RawFacet[];\n  issues: T.Issue[];\n  languages: ReferencedLanguage[];\n  paging: T.Paging;\n  rules: ReferencedRule[];\n  users: T.UserBase[];\n}\n\ninterface Props {\n  branchLike?: BranchLike;\n  component?: T.Component;\n  currentUser: T.CurrentUser;\n  fetchBranchStatus: (branchLike: BranchLike, projectKey: string) => Promise<void>;\n  fetchIssues: (query: T.RawQuery, requestOrganizations?: boolean) => Promise<FetchIssuesPromise>;\n  hideAuthorFacet?: boolean;\n  location: Location;\n  multiOrganizations?: boolean;\n  myIssues?: boolean;\n  onBranchesChange?: () => void;\n  organization?: { key: string };\n  router: Pick<Router, 'push' | 'replace'>;\n  userOrganizations: T.Organization[];\n}\n\nexport interface State {\n  bulkChangeModal: boolean;\n  cannotShowOpenIssue?: boolean;\n  checkAll?: boolean;\n  checked: string[];\n  effortTotal?: number;\n  facets: T.Dict<Facet>;\n  issues: T.Issue[];\n  loading: boolean;\n  loadingFacets: T.Dict<boolean>;\n  loadingMore: boolean;\n  locationsNavigator: boolean;\n  myIssues: boolean;\n  openFacets: T.Dict<boolean>;\n  openIssue?: T.Issue;\n  openPopup?: { issue: string; name: string };\n  paging?: T.Paging;\n  query: Query;\n  referencedComponentsById: T.Dict<ReferencedComponent>;\n  referencedComponentsByKey: T.Dict<ReferencedComponent>;\n  referencedLanguages: T.Dict<ReferencedLanguage>;\n  referencedRules: T.Dict<ReferencedRule>;\n  referencedUsers: T.Dict<T.UserBase>;\n  selected?: string;\n  selectedFlowIndex?: number;\n  selectedLocationIndex?: number;\n}\n\nconst DEFAULT_QUERY = { resolved: 'false' };\nconst MAX_INITAL_FETCH = 1000;\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const query = parseQuery(props.location.query);\n    this.state = {\n      bulkChangeModal: false,\n      checked: [],\n      facets: {},\n      issues: [],\n      loading: true,\n      loadingFacets: {},\n      loadingMore: false,\n      locationsNavigator: false,\n      myIssues: props.myIssues || areMyIssuesSelected(props.location.query),\n      openFacets: {\n        owaspTop10: shouldOpenStandardsChildFacet({}, query, 'owaspTop10'),\n        sansTop25: shouldOpenStandardsChildFacet({}, query, 'sansTop25'),\n        severities: true,\n        sonarsourceSecurity: shouldOpenSonarSourceSecurityFacet({}, query),\n        standards: shouldOpenStandardsFacet({}, query),\n        types: true\n      },\n      query,\n      referencedComponentsById: {},\n      referencedComponentsByKey: {},\n      referencedLanguages: {},\n      referencedRules: {},\n      referencedUsers: {},\n      selected: getOpen(props.location.query)\n    };\n    this.refreshBranchStatus = debounce(this.refreshBranchStatus, 1000);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    if (this.state.myIssues && !this.props.currentUser.isLoggedIn) {\n      handleRequiredAuthentication();\n      return;\n    }\n\n    addWhitePageClass();\n    addSideBarClass();\n    this.attachShortcuts();\n    this.fetchFirstIssues();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    const { issues, selected } = this.state;\n    const openIssue = this.getOpenIssue(nextProps, issues);\n\n    if (openIssue && openIssue.key !== selected) {\n      this.setState({\n        locationsNavigator: false,\n        selected: openIssue.key,\n        selectedFlowIndex: undefined,\n        selectedLocationIndex: undefined\n      });\n    }\n\n    if (!openIssue) {\n      this.setState({ selectedFlowIndex: undefined, selectedLocationIndex: undefined });\n    }\n\n    this.setState({\n      myIssues: nextProps.myIssues || areMyIssuesSelected(nextProps.location.query),\n      openIssue,\n      query: parseQuery(nextProps.location.query)\n    });\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { query } = this.props.location;\n    const { query: prevQuery } = prevProps.location;\n    if (\n      prevProps.component !== this.props.component ||\n      !isSameBranchLike(prevProps.branchLike, this.props.branchLike) ||\n      !areQueriesEqual(prevQuery, query) ||\n      areMyIssuesSelected(prevQuery) !== areMyIssuesSelected(query)\n    ) {\n      this.fetchFirstIssues();\n      this.setState({ checkAll: false });\n    } else if (\n      !this.state.openIssue &&\n      (prevState.selected !== this.state.selected || prevState.openIssue)\n    ) {\n      // if user simply selected another issue\n      // or if he went from the source code back to the list of issues\n      this.scrollToSelectedIssue();\n    }\n  }\n\n  componentWillUnmount() {\n    this.detachShortcuts();\n    this.mounted = false;\n    removeWhitePageClass();\n    removeSideBarClass();\n  }\n\n  attachShortcuts() {\n    key.setScope('issues');\n    key('up', 'issues', () => {\n      this.selectPreviousIssue();\n      return false;\n    });\n    key('down', 'issues', () => {\n      this.selectNextIssue();\n      return false;\n    });\n    key('right', 'issues', () => {\n      this.openSelectedIssue();\n      return false;\n    });\n    key('left', 'issues', () => {\n      if (this.state.query.issues.length !== 1) {\n        this.closeIssue();\n      }\n      return false;\n    });\n    window.addEventListener('keydown', this.handleKeyDown);\n    window.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  detachShortcuts() {\n    key.deleteScope('issues');\n    window.removeEventListener('keydown', this.handleKeyDown);\n    window.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyDown = (event: KeyboardEvent) => {\n    if (key.getScope() !== 'issues') {\n      return;\n    }\n    if (event.keyCode === 18) {\n      // alt\n      event.preventDefault();\n      this.setState(actions.enableLocationsNavigator);\n    } else if (event.keyCode === 40 && event.altKey) {\n      // alt + down\n      event.preventDefault();\n      this.selectNextLocation();\n    } else if (event.keyCode === 38 && event.altKey) {\n      // alt + up\n      event.preventDefault();\n      this.selectPreviousLocation();\n    } else if (event.keyCode === 37 && event.altKey) {\n      // alt + left\n      event.preventDefault();\n      this.selectPreviousFlow();\n    } else if (event.keyCode === 39 && event.altKey) {\n      // alt + right\n      event.preventDefault();\n      this.selectNextFlow();\n    }\n  };\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    if (key.getScope() !== 'issues') {\n      return;\n    }\n    if (event.keyCode === 18) {\n      // alt\n      this.setState(actions.disableLocationsNavigator);\n    }\n  };\n\n  getSelectedIndex() {\n    const { issues = [], selected } = this.state;\n    const index = issues.findIndex(issue => issue.key === selected);\n    return index !== -1 ? index : undefined;\n  }\n\n  getOpenIssue = (props: Props, issues: T.Issue[]) => {\n    const open = getOpen(props.location.query);\n    return open ? issues.find(issue => issue.key === open) : undefined;\n  };\n\n  selectNextIssue = () => {\n    const { issues } = this.state;\n    const selectedIndex = this.getSelectedIndex();\n    if (selectedIndex !== undefined && selectedIndex < issues.length - 1) {\n      if (this.state.openIssue) {\n        this.openIssue(issues[selectedIndex + 1].key);\n      } else {\n        this.setState({\n          selected: issues[selectedIndex + 1].key,\n          selectedFlowIndex: undefined,\n          selectedLocationIndex: undefined\n        });\n      }\n    }\n  };\n\n  selectPreviousIssue = () => {\n    const { issues } = this.state;\n    const selectedIndex = this.getSelectedIndex();\n    if (selectedIndex !== undefined && selectedIndex > 0) {\n      if (this.state.openIssue) {\n        this.openIssue(issues[selectedIndex - 1].key);\n      } else {\n        this.setState({\n          selected: issues[selectedIndex - 1].key,\n          selectedFlowIndex: undefined,\n          selectedLocationIndex: undefined\n        });\n      }\n    }\n  };\n\n  openIssue = (issueKey: string) => {\n    const path = {\n      pathname: this.props.location.pathname,\n      query: {\n        ...serializeQuery(this.state.query),\n        ...getBranchLikeQuery(this.props.branchLike),\n        id: this.props.component && this.props.component.key,\n        myIssues: this.state.myIssues ? 'true' : undefined,\n        open: issueKey\n      }\n    };\n    if (this.state.openIssue) {\n      if (path.query.open && path.query.open === this.state.openIssue.key) {\n        this.setState(\n          {\n            locationsNavigator: false,\n            selectedFlowIndex: undefined,\n            selectedLocationIndex: undefined\n          },\n          this.scrollToSelectedIssue\n        );\n      } else {\n        this.props.router.replace(path);\n      }\n    } else {\n      this.props.router.push(path);\n    }\n  };\n\n  closeIssue = () => {\n    if (this.state.query) {\n      this.props.router.push({\n        pathname: this.props.location.pathname,\n        query: {\n          ...serializeQuery(this.state.query),\n          ...getBranchLikeQuery(this.props.branchLike),\n          id: this.props.component && this.props.component.key,\n          myIssues: this.state.myIssues ? 'true' : undefined,\n          open: undefined\n        }\n      });\n    }\n  };\n\n  openSelectedIssue = () => {\n    const { selected } = this.state;\n    if (selected) {\n      this.openIssue(selected);\n    }\n  };\n\n  scrollToSelectedIssue = (smooth = true) => {\n    const { selected } = this.state;\n    if (selected) {\n      scrollToIssue(selected, smooth);\n    }\n  };\n\n  fetchIssues = (\n    additional: T.RawQuery,\n    requestFacets = false,\n    requestOrganizations = true\n  ): Promise<FetchIssuesPromise> => {\n    const { component } = this.props;\n    const { myIssues, openFacets, query } = this.state;\n\n    const facets = requestFacets\n      ? Object.keys(openFacets)\n          .filter(facet => openFacets[facet])\n          .filter(facet => facet !== STANDARDS)\n          .map(mapFacet)\n          .join(',')\n      : undefined;\n\n    const organizationKey =\n      (component && component.organization) ||\n      (this.props.organization && this.props.organization.key);\n\n    const parameters = {\n      ...getBranchLikeQuery(this.props.branchLike),\n      componentKeys: component && component.key,\n      s: 'FILE_LINE',\n      ...serializeQuery(query),\n      ps: '100',\n      organization: organizationKey,\n      facets,\n      ...additional\n    };\n\n    // only sorting by CREATION_DATE is allowed, so let's sort DESC\n    if (query.sort) {\n      Object.assign(parameters, { asc: 'false' });\n    }\n\n    if (myIssues) {\n      Object.assign(parameters, { assignees: '__me__' });\n    }\n\n    return this.props.fetchIssues(\n      parameters,\n      Boolean(requestOrganizations && this.props.multiOrganizations)\n    );\n  };\n\n  fetchFirstIssues() {\n    const prevQuery = this.props.location.query;\n    const openIssueKey = getOpen(this.props.location.query);\n    let fetchPromise;\n\n    this.setState({ checked: [], loading: true });\n    if (openIssueKey !== undefined) {\n      fetchPromise = this.fetchIssuesUntil(1, (pageIssues: T.Issue[], paging: T.Paging) => {\n        if (\n          paging.total <= paging.pageIndex * paging.pageSize ||\n          paging.pageIndex * paging.pageSize >= MAX_INITAL_FETCH\n        ) {\n          return true;\n        }\n        return pageIssues.some(issue => issue.key === openIssueKey);\n      });\n    } else {\n      fetchPromise = this.fetchIssues({}, true);\n    }\n\n    return fetchPromise.then(\n      ({ effortTotal, facets, issues, paging, ...other }) => {\n        if (this.mounted && areQueriesEqual(prevQuery, this.props.location.query)) {\n          const openIssue = this.getOpenIssue(this.props, issues);\n          let selected: string | undefined = undefined;\n          if (issues.length > 0) {\n            selected = openIssue ? openIssue.key : issues[0].key;\n          }\n          this.setState(state => ({\n            cannotShowOpenIssue: Boolean(openIssueKey && !openIssue),\n            effortTotal,\n            facets: { ...state.facets, ...parseFacets(facets) },\n            loading: false,\n            issues,\n            openIssue,\n            paging,\n            referencedComponentsById: keyBy(other.components, 'uuid'),\n            referencedComponentsByKey: keyBy(other.components, 'key'),\n            referencedLanguages: keyBy(other.languages, 'key'),\n            referencedRules: keyBy(other.rules, 'key'),\n            referencedUsers: keyBy(other.users, 'login'),\n            selected,\n            selectedFlowIndex: undefined,\n            selectedLocationIndex: undefined\n          }));\n        }\n        return issues;\n      },\n      () => {\n        if (this.mounted && areQueriesEqual(prevQuery, this.props.location.query)) {\n          this.setState({ loading: false });\n        }\n        return [];\n      }\n    );\n  }\n\n  fetchIssuesPage = (p: number) => {\n    return this.fetchIssues({ p });\n  };\n\n  fetchIssuesUntil = (\n    p: number,\n    done: (pageIssues: T.Issue[], paging: T.Paging) => boolean\n  ): Promise<FetchIssuesPromise> => {\n    const recursiveFetch = (p: number, prevIssues: T.Issue[]): Promise<FetchIssuesPromise> => {\n      return this.fetchIssuesPage(p).then(({ issues: pageIssues, paging, ...other }) => {\n        const issues = [...prevIssues, ...pageIssues];\n        return done(pageIssues, paging)\n          ? { issues, paging, ...other }\n          : recursiveFetch(p + 1, issues);\n      });\n    };\n\n    return recursiveFetch(p, []);\n  };\n\n  fetchMoreIssues = () => {\n    const { paging } = this.state;\n\n    if (!paging) {\n      return Promise.reject();\n    }\n\n    const p = paging.pageIndex + 1;\n\n    this.setState({ checkAll: false, loadingMore: true });\n    return this.fetchIssuesPage(p).then(\n      response => {\n        if (this.mounted) {\n          this.setState(state => ({\n            loadingMore: false,\n            issues: [...state.issues, ...response.issues],\n            paging: response.paging\n          }));\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loadingMore: false });\n        }\n      }\n    );\n  };\n\n  fetchIssuesForComponent = (_component: string, _from: number, to: number) => {\n    const { issues, openIssue, paging } = this.state;\n\n    if (!openIssue || !paging) {\n      return Promise.reject(undefined);\n    }\n\n    const isSameComponent = (issue: T.Issue) => issue.component === openIssue.component;\n\n    const done = (pageIssues: T.Issue[], paging: T.Paging) => {\n      const lastIssue = pageIssues[pageIssues.length - 1];\n      if (paging.total <= paging.pageIndex * paging.pageSize) {\n        return true;\n      }\n      if (lastIssue.component !== openIssue.component) {\n        return true;\n      }\n      return lastIssue.textRange !== undefined && lastIssue.textRange.endLine > to;\n    };\n\n    if (done(issues, paging)) {\n      return Promise.resolve(issues.filter(isSameComponent));\n    }\n\n    this.setState({ loading: true });\n    return this.fetchIssuesUntil(paging.pageIndex + 1, done).then(\n      response => {\n        const nextIssues = [...issues, ...response.issues];\n        if (this.mounted) {\n          this.setState({\n            issues: nextIssues,\n            loading: false,\n            paging: response.paging\n          });\n        }\n        return nextIssues.filter(isSameComponent);\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n        return [];\n      }\n    );\n  };\n\n  fetchFacet = (facet: string) => {\n    const requestOrganizations = facet === 'projects';\n    return this.fetchIssues({ ps: 1, facets: mapFacet(facet) }, false, requestOrganizations).then(\n      ({ facets, ...other }) => {\n        if (this.mounted) {\n          this.setState(state => ({\n            facets: { ...state.facets, ...parseFacets(facets) },\n            loadingFacets: omit(state.loadingFacets, facet),\n            referencedComponentsById: {\n              ...state.referencedComponentsById,\n              ...keyBy(other.components, 'uuid')\n            },\n            referencedComponentsByKey: {\n              ...state.referencedComponentsByKey,\n              ...keyBy(other.components, 'key')\n            },\n            referencedLanguages: {\n              ...state.referencedLanguages,\n              ...keyBy(other.languages, 'key')\n            },\n            referencedRules: { ...state.referencedRules, ...keyBy(other.rules, 'key') },\n            referencedUsers: { ...state.referencedUsers, ...keyBy(other.users, 'login') }\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  isFiltered = () => {\n    const serialized = serializeQuery(this.state.query);\n    return !areQueriesEqual(serialized, DEFAULT_QUERY);\n  };\n\n  getCheckedIssues = () => {\n    const issues = this.state.checked\n      .map(checked => this.state.issues.find(issue => issue.key === checked))\n      .filter((issue): issue is T.Issue => issue !== undefined);\n    const paging = { pageIndex: 1, pageSize: issues.length, total: issues.length };\n    return Promise.resolve({ issues, paging });\n  };\n\n  getButtonLabel = (checked: string[], checkAll?: boolean, paging?: T.Paging) => {\n    if (checked.length > 0) {\n      let count;\n      if (checkAll && paging) {\n        count = paging.total > MAX_PAGE_SIZE ? MAX_PAGE_SIZE : paging.total;\n      } else {\n        count = Math.min(checked.length, MAX_PAGE_SIZE);\n      }\n\n      return translateWithParameters('issues.bulk_change_X_issues', count);\n    } else {\n      return translate('bulk_change');\n    }\n  };\n\n  handleFilterChange = (changes: Partial<Query>) => {\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: {\n        ...serializeQuery({ ...this.state.query, ...changes }),\n        ...getBranchLikeQuery(this.props.branchLike),\n        id: this.props.component && this.props.component.key,\n        myIssues: this.state.myIssues ? 'true' : undefined\n      }\n    });\n    this.setState(({ openFacets }) => ({\n      openFacets: {\n        ...openFacets,\n        sonarsourceSecurity: shouldOpenSonarSourceSecurityFacet(openFacets, changes),\n        standards: shouldOpenStandardsFacet(openFacets, changes)\n      }\n    }));\n  };\n\n  handleMyIssuesChange = (myIssues: boolean) => {\n    this.closeFacet('assignees');\n    if (!this.props.component) {\n      saveMyIssues(myIssues);\n    }\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: {\n        ...serializeQuery({ ...this.state.query, assigned: true, assignees: [] }),\n        ...getBranchLikeQuery(this.props.branchLike),\n        id: this.props.component && this.props.component.key,\n        myIssues: myIssues ? 'true' : undefined\n      }\n    });\n  };\n\n  loadSearchResultCount = (property: string, changes: Partial<Query>) => {\n    const { component } = this.props;\n    const { myIssues, query } = this.state;\n\n    const organizationKey =\n      (component && component.organization) ||\n      (this.props.organization && this.props.organization.key);\n\n    const parameters = {\n      ...getBranchLikeQuery(this.props.branchLike),\n      componentKeys: component && component.key,\n      facets: mapFacet(property),\n      s: 'FILE_LINE',\n      ...serializeQuery({ ...query, ...changes }),\n      ps: 1,\n      organization: organizationKey\n    };\n\n    if (myIssues) {\n      Object.assign(parameters, { assignees: '__me__' });\n    }\n\n    return this.props\n      .fetchIssues(parameters, false)\n      .then(({ facets }) => parseFacets(facets)[property]);\n  };\n\n  closeFacet = (property: string) => {\n    this.setState(state => ({\n      openFacets: { ...state.openFacets, [property]: false }\n    }));\n  };\n\n  handleFacetToggle = (property: string) => {\n    this.setState(state => {\n      const willOpenProperty = !state.openFacets[property];\n      const newState = {\n        loadingFacets: state.loadingFacets,\n        openFacets: { ...state.openFacets, [property]: willOpenProperty }\n      };\n\n      // Try to open sonarsource security \"subfacet\" by default if the standard facet is open\n      if (willOpenProperty && property === STANDARDS) {\n        newState.openFacets.sonarsourceSecurity = shouldOpenSonarSourceSecurityFacet(\n          newState.openFacets,\n          state.query\n        );\n        // Force loading of sonarsource security facet data\n        property = newState.openFacets.sonarsourceSecurity ? 'sonarsourceSecurity' : property;\n      }\n\n      // No need to load facets data for standard facet\n      if (property !== STANDARDS && !state.facets[property]) {\n        newState.loadingFacets[property] = true;\n        this.fetchFacet(property);\n      }\n\n      return newState;\n    });\n  };\n\n  handleReset = () => {\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: {\n        ...DEFAULT_QUERY,\n        ...getBranchLikeQuery(this.props.branchLike),\n        id: this.props.component && this.props.component.key,\n        myIssues: this.state.myIssues ? 'true' : undefined\n      }\n    });\n  };\n\n  handlePopupToggle = (issue: string, popupName: string, open?: boolean) => {\n    this.setState((state: State) => {\n      const { openPopup } = state;\n      const samePopup = openPopup && openPopup.name === popupName && openPopup.issue === issue;\n\n      if (open !== false && !samePopup) {\n        return { ...state, openPopup: { issue, name: popupName } };\n      } else if (open !== true && samePopup) {\n        return { ...state, openPopup: undefined };\n      }\n\n      return state;\n    });\n  };\n\n  handleIssueCheck = (issue: string) => {\n    this.setState(state => ({\n      checkAll: false,\n      checked: state.checked.includes(issue)\n        ? without(state.checked, issue)\n        : [...state.checked, issue]\n    }));\n  };\n\n  handleIssueChange = (issue: T.Issue) => {\n    this.refreshBranchStatus();\n    this.setState(state => ({\n      issues: state.issues.map(candidate => (candidate.key === issue.key ? issue : candidate))\n    }));\n  };\n\n  handleOpenBulkChange = () => {\n    key.setScope('issues-bulk-change');\n    this.setState({ bulkChangeModal: true });\n  };\n\n  handleCloseBulkChange = () => {\n    key.setScope('issues');\n    this.setState({ bulkChangeModal: false });\n  };\n\n  handleBulkChangeDone = () => {\n    this.setState({ checkAll: false });\n    this.refreshBranchStatus();\n    this.fetchFirstIssues();\n    this.handleCloseBulkChange();\n  };\n\n  handleReload = () => {\n    this.fetchFirstIssues();\n    this.refreshBranchStatus();\n    const { branchLike, onBranchesChange } = this.props;\n    if (onBranchesChange && isPullRequest(branchLike)) {\n      onBranchesChange();\n    }\n  };\n\n  handleReloadAndOpenFirst = () => {\n    this.fetchFirstIssues().then(\n      (issues: T.Issue[]) => {\n        if (issues.length > 0) {\n          this.openIssue(issues[0].key);\n        }\n      },\n      () => {}\n    );\n  };\n\n  selectLocation = (index: number) => {\n    this.setState(actions.selectLocation(index));\n  };\n\n  selectNextLocation = () => {\n    this.setState(actions.selectNextLocation);\n  };\n\n  selectPreviousLocation = () => {\n    this.setState(actions.selectPreviousLocation);\n  };\n\n  handleCheckAll = (checked: boolean) => {\n    if (checked) {\n      this.setState(state => ({\n        checkAll: true,\n        checked: state.issues.map(issue => issue.key)\n      }));\n    } else {\n      this.setState({ checkAll: false, checked: [] });\n    }\n  };\n\n  selectFlow = (index?: number) => {\n    this.setState(actions.selectFlow(index));\n  };\n\n  selectNextFlow = () => {\n    this.setState(actions.selectNextFlow);\n  };\n\n  selectPreviousFlow = () => {\n    this.setState(actions.selectPreviousFlow);\n  };\n\n  refreshBranchStatus = () => {\n    const { branchLike, component } = this.props;\n    if (branchLike && component && isPullRequest(branchLike)) {\n      this.props.fetchBranchStatus(branchLike, component.key);\n    }\n  };\n\n  renderBulkChange(openIssue: T.Issue | undefined) {\n    const { component, currentUser } = this.props;\n    const { checkAll, bulkChangeModal, checked, issues, paging } = this.state;\n\n    const isAllChecked = checked.length > 0 && issues.length === checked.length;\n    const thirdState = checked.length > 0 && !isAllChecked;\n    const isChecked = isAllChecked || thirdState;\n\n    if (!currentUser.isLoggedIn || openIssue) {\n      return null;\n    }\n\n    return (\n      <div className=\"pull-left\">\n        <Checkbox\n          checked={isChecked}\n          className=\"spacer-right text-middle\"\n          disabled={issues.length === 0}\n          id=\"issues-selection\"\n          onCheck={this.handleCheckAll}\n          thirdState={thirdState}\n          title={translate('issues.select_all_issues')}\n        />\n        <Button\n          disabled={checked.length === 0}\n          id=\"issues-bulk-change\"\n          onClick={this.handleOpenBulkChange}>\n          {this.getButtonLabel(checked, checkAll, paging)}\n        </Button>\n\n        {bulkChangeModal && (\n          <BulkChangeModal\n            component={component}\n            currentUser={currentUser}\n            fetchIssues={checkAll ? this.fetchIssues : this.getCheckedIssues}\n            onClose={this.handleCloseBulkChange}\n            onDone={this.handleBulkChangeDone}\n            organization={this.props.organization}\n          />\n        )}\n      </div>\n    );\n  }\n\n  renderFacets() {\n    const { component, currentUser, userOrganizations } = this.props;\n    const { query } = this.state;\n\n    const organizationKey =\n      (component && component.organization) ||\n      (this.props.organization && this.props.organization.key);\n\n    const userOrganization =\n      !isSonarCloud() ||\n      userOrganizations.find(o => {\n        return o.key === organizationKey;\n      });\n    const hideAuthorFacet =\n      this.props.hideAuthorFacet || (isSonarCloud() && this.props.myIssues) || !userOrganization;\n\n    return (\n      <div className=\"layout-page-filters\">\n        {currentUser.isLoggedIn && !isSonarCloud() && (\n          <MyIssuesFilter\n            myIssues={this.state.myIssues}\n            onMyIssuesChange={this.handleMyIssuesChange}\n          />\n        )}\n        <FiltersHeader displayReset={this.isFiltered()} onReset={this.handleReset} />\n        <Sidebar\n          component={component}\n          facets={this.state.facets}\n          hideAuthorFacet={hideAuthorFacet}\n          loadSearchResultCount={this.loadSearchResultCount}\n          loadingFacets={this.state.loadingFacets}\n          myIssues={this.state.myIssues}\n          onFacetToggle={this.handleFacetToggle}\n          onFilterChange={this.handleFilterChange}\n          openFacets={this.state.openFacets}\n          organization={this.props.organization}\n          query={query}\n          referencedComponentsById={this.state.referencedComponentsById}\n          referencedComponentsByKey={this.state.referencedComponentsByKey}\n          referencedLanguages={this.state.referencedLanguages}\n          referencedRules={this.state.referencedRules}\n          referencedUsers={this.state.referencedUsers}\n        />\n      </div>\n    );\n  }\n\n  renderConciseIssuesList() {\n    const { issues, loadingMore, paging, query } = this.state;\n\n    return (\n      <div className=\"layout-page-filters\">\n        <ConciseIssuesListHeader\n          displayBackButton={query.issues.length !== 1}\n          loading={this.state.loading}\n          onBackClick={this.closeIssue}\n          onReload={this.handleReloadAndOpenFirst}\n          paging={paging}\n          selectedIndex={this.getSelectedIndex()}\n        />\n        <ConciseIssuesList\n          issues={issues}\n          onFlowSelect={this.selectFlow}\n          onIssueSelect={this.openIssue}\n          onLocationSelect={this.selectLocation}\n          selected={this.state.selected}\n          selectedFlowIndex={this.state.selectedFlowIndex}\n          selectedLocationIndex={this.state.selectedLocationIndex}\n        />\n        {paging && paging.total > 0 && (\n          <ListFooter\n            count={issues.length}\n            loadMore={this.fetchMoreIssues}\n            loading={loadingMore}\n            total={paging.total}\n          />\n        )}\n      </div>\n    );\n  }\n\n  renderSide(openIssue: T.Issue | undefined) {\n    return (\n      <ScreenPositionHelper className=\"layout-page-side-outer\">\n        {({ top }) => (\n          <div className=\"layout-page-side\" style={{ top }}>\n            <div className=\"layout-page-side-inner\">\n              <A11ySkipTarget\n                anchor=\"issues_sidebar\"\n                label={\n                  openIssue ? translate('issues.skip_to_list') : translate('issues.skip_to_filters')\n                }\n                weight={10}\n              />\n              {openIssue ? this.renderConciseIssuesList() : this.renderFacets()}\n            </div>\n          </div>\n        )}\n      </ScreenPositionHelper>\n    );\n  }\n\n  renderList() {\n    const { branchLike, component, currentUser, organization } = this.props;\n    const { issues, loading, loadingMore, openIssue, paging } = this.state;\n    const selectedIndex = this.getSelectedIndex();\n    const selectedIssue = selectedIndex !== undefined ? issues[selectedIndex] : undefined;\n\n    if (!paging || openIssue) {\n      return null;\n    }\n\n    let noIssuesMessage = null;\n    if (paging.total === 0 && !loading) {\n      if (this.isFiltered()) {\n        noIssuesMessage = <EmptySearch />;\n      } else if (this.state.myIssues) {\n        noIssuesMessage = <NoMyIssues />;\n      } else {\n        noIssuesMessage = <NoIssues />;\n      }\n    }\n\n    return (\n      <div>\n        {paging.total > 0 && (\n          <IssuesList\n            branchLike={branchLike}\n            checked={this.state.checked}\n            component={component}\n            issues={issues}\n            onFilterChange={this.handleFilterChange}\n            onIssueChange={this.handleIssueChange}\n            onIssueCheck={currentUser.isLoggedIn ? this.handleIssueCheck : undefined}\n            onIssueClick={this.openIssue}\n            onPopupToggle={this.handlePopupToggle}\n            openPopup={this.state.openPopup}\n            organization={organization}\n            selectedIssue={selectedIssue}\n          />\n        )}\n\n        {paging.total > 0 && (\n          <ListFooter\n            count={issues.length}\n            loadMore={this.fetchMoreIssues}\n            loading={loadingMore}\n            total={paging.total}\n          />\n        )}\n\n        {noIssuesMessage}\n      </div>\n    );\n  }\n\n  renderHeader({\n    openIssue,\n    paging,\n    selectedIndex\n  }: {\n    openIssue: T.Issue | undefined;\n    paging: T.Paging | undefined;\n    selectedIndex: number | undefined;\n  }) {\n    return openIssue ? (\n      <A11ySkipTarget anchor=\"issues_main\" />\n    ) : (\n      <div className=\"layout-page-header-panel layout-page-main-header issues-main-header\">\n        <div className=\"layout-page-header-panel-inner layout-page-main-header-inner\">\n          <div className=\"layout-page-main-inner\">\n            <A11ySkipTarget anchor=\"issues_main\" />\n\n            {this.renderBulkChange(openIssue)}\n            <PageActions\n              canSetHome={Boolean(\n                !this.props.organization &&\n                  !this.props.component &&\n                  (!isSonarCloud() || this.props.myIssues)\n              )}\n              effortTotal={this.state.effortTotal}\n              onReload={this.handleReload}\n              paging={paging}\n              selectedIndex={selectedIndex}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderPage() {\n    const { cannotShowOpenIssue, checkAll, issues, loading, openIssue, paging } = this.state;\n    return (\n      <div className=\"layout-page-main-inner\">\n        {openIssue ? (\n          <IssuesSourceViewer\n            branchLike={fillBranchLike(openIssue.branch, openIssue.pullRequest)}\n            issues={issues}\n            loadIssues={this.fetchIssuesForComponent}\n            locationsNavigator={this.state.locationsNavigator}\n            onIssueChange={this.handleIssueChange}\n            onIssueSelect={this.openIssue}\n            onLocationSelect={this.selectLocation}\n            openIssue={openIssue}\n            selectedFlowIndex={this.state.selectedFlowIndex}\n            selectedLocationIndex={this.state.selectedLocationIndex}\n          />\n        ) : (\n          <DeferredSpinner loading={loading}>\n            {checkAll && paging && paging.total > MAX_PAGE_SIZE && (\n              <Alert className=\"big-spacer-bottom\" variant=\"warning\">\n                <FormattedMessage\n                  defaultMessage={translate('issue_bulk_change.max_issues_reached')}\n                  id=\"issue_bulk_change.max_issues_reached\"\n                  values={{ max: <strong>{MAX_PAGE_SIZE}</strong> }}\n                />\n              </Alert>\n            )}\n            {cannotShowOpenIssue && (\n              <Alert className=\"big-spacer-bottom\" variant=\"warning\">\n                {translateWithParameters(\n                  'issues.cannot_open_issue_max_initial_X_fetched',\n                  MAX_INITAL_FETCH\n                )}\n              </Alert>\n            )}\n            {this.renderList()}\n          </DeferredSpinner>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { openIssue, paging } = this.state;\n    const selectedIndex = this.getSelectedIndex();\n    return (\n      <div className=\"layout-page issues\" id=\"issues-page\">\n        <Suggestions suggestions=\"issues\" />\n        <Helmet defer={false} title={openIssue ? openIssue.message : translate('issues.page')} />\n\n        {this.renderSide(openIssue)}\n\n        <div className=\"layout-page-main\">\n          {this.renderHeader({ openIssue, paging, selectedIndex })}\n\n          {this.renderPage()}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: T.Dict<T.RuleActivation[]>;\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: T.Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: T.RuleActivation[]; rule: T.RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    response => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (response && response.status === 409) {\n        return Promise.reject(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n"],"sourceRoot":""}