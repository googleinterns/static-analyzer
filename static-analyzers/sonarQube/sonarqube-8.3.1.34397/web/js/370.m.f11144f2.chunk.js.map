{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationProjects.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx"],"names":["OrganizationProjects","props","isFavorite","organization","suggestions","Suggestions","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","this","prevProps"],"mappings":"6FAAA,4EA4Be,SAASA,EAAqBC,GAC3C,OACE,gCACE,gBAAC,IAAoB,CAACC,YAAY,EAAOC,aAAcF,EAAME,eAC7D,gBAAC,IAAW,CAACC,YAAY,6B,iCChC/B,sDA0Be,SAASC,GAAY,YAAED,IACpC,OACE,gBAAC,IAAmBE,SAAQ,KACzB,EAAGC,iBAAgBC,uBAClB,gBAACC,EAAgB,CACfF,eAAgBA,EAChBC,kBAAmBA,EACnBJ,YAAaA,KAavB,MAAMK,UAAyB,gBAC7B,oBACEC,KAAKT,MAAMM,eAAeG,KAAKT,MAAMG,aAGvC,mBAAmBO,GACbA,EAAUP,cAAgBM,KAAKT,MAAMG,cACvCM,KAAKT,MAAMO,kBAAkBE,KAAKT,MAAMG,aACxCM,KAAKT,MAAMM,eAAeI,EAAUP,cAIxC,uBACEM,KAAKT,MAAMO,kBAAkBE,KAAKT,MAAMG,aAG1C,SACE,OAAO","file":"js/370.m.f11144f2.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport AllProjectsContainer from '../../projects/components/AllProjectsContainer';\n\ninterface Props {\n  location: { pathname: string; query: T.Dict<string> };\n  organization: T.Organization;\n}\n\nexport default function OrganizationProjects(props: Props) {\n  return (\n    <>\n      <AllProjectsContainer isFavorite={false} organization={props.organization} />\n      <Suggestions suggestions=\"organization_projects\" />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n"],"sourceRoot":""}