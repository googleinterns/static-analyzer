{"version":3,"sources":["webpack:///./node_modules/sonar-ui-common/components/icons/PlusIcon.js","webpack:///./src/main/js/apps/portfolio/components/CreateFormShim.tsx","webpack:///./src/main/js/app/components/nav/global/GlobalNavPlus.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/api/nav.ts"],"names":["Object","defineProperty","exports","value","React","Icon_1","default","_a","className","_b","fill","size","createElement","d","style","render","createFormBuilder","this","props","theme","mounted","state","createPortfolio","governanceReady","handleNewProjectClick","event","preventDefault","openProjectOnboarding","openCreatePortfolioForm","setState","closeCreatePortfolioForm","handleNewPortfolioClick","currentTarget","blur","handleCreatePortfolio","key","qualifier","component","then","data","configuration","extensions","find","item","router","push","componentDidMount","appState","qualifiers","includes","componentWillUnmount","renderCreateProject","canCreateProject","href","onClick","renderCreateOrganization","canCreateOrg","to","renderCreatePortfolio","showGovernanceEntry","defaultQualifier","currentUser","canCreateApplication","canCreatePortfolio","overlay","tagName","title","onClose","onCreate","librariesExposed","installScript","url","target","Promise","resolve","scriptTag","document","src","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","exposeLibraries","start","reject","getComponentNavigation","catch","getMarketplaceNavigation","getSettingsNavigation"],"mappings":"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","file":"js/372.1588858339197.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction PlusIcon(_a) {\n    var className = _a.className, _b = _a.fill, fill = _b === void 0 ? 'currentColor' : _b, size = _a.size;\n    return (React.createElement(Icon_1.default, { className: className, size: size },\n        React.createElement(\"path\", { d: \"M1,7L7,7L7,1L9,1L9,7L15,7L15,9L9,9L9,15L7,15L7,9L1,9L1,7Z\", style: { fill: fill } })));\n}\nexports.default = PlusIcon;\n//# sourceMappingURL=PlusIcon.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as theme from '../../../app/theme';\n\ninterface Props {\n  defaultQualifier?: string;\n  onClose: () => void;\n  onCreate: (portfolio: { key: string; qualifier: string }) => void;\n}\n\nexport default class CreateFormShim extends React.Component<Props> {\n  render() {\n    const { createFormBuilder } = (window as any).SonarGovernance;\n    return createFormBuilder(this.props, theme);\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link, withRouter, WithRouterProps } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport PlusIcon from 'sonar-ui-common/components/icons/PlusIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getComponentNavigation } from '../../../../api/nav';\nimport CreateFormShim from '../../../../apps/portfolio/components/CreateFormShim';\nimport { getExtensionStart } from '../../../../helpers/extensions';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioAdminUrl, getPortfolioUrl } from '../../../../helpers/urls';\nimport { hasGlobalPermission } from '../../../../helpers/users';\nimport { OnboardingContextShape } from '../../OnboardingContext';\n\ninterface Props {\n  appState: Pick<T.AppState, 'qualifiers'>;\n  currentUser: T.LoggedInUser;\n  openProjectOnboarding: OnboardingContextShape;\n}\n\ninterface State {\n  createPortfolio: boolean;\n  governanceReady: boolean;\n}\n\nexport class GlobalNavPlus extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { createPortfolio: false, governanceReady: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.appState.qualifiers.includes('VW')) {\n      getExtensionStart('governance/console').then(\n        () => {\n          if (this.mounted) {\n            this.setState({ governanceReady: true });\n          }\n        },\n        () => {}\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNewProjectClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.openProjectOnboarding();\n  };\n\n  openCreatePortfolioForm = () => {\n    this.setState({ createPortfolio: true });\n  };\n\n  closeCreatePortfolioForm = () => {\n    this.setState({ createPortfolio: false });\n  };\n\n  handleNewPortfolioClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.openCreatePortfolioForm();\n  };\n\n  handleCreatePortfolio = ({ key, qualifier }: { key: string; qualifier: string }) => {\n    return getComponentNavigation({ component: key }).then(data => {\n      if (\n        data.configuration &&\n        data.configuration.extensions &&\n        data.configuration.extensions.find(\n          (item: { key: string; name: string }) => item.key === 'governance/console'\n        )\n      ) {\n        this.props.router.push(getPortfolioAdminUrl(key, qualifier));\n      } else {\n        this.props.router.push(getPortfolioUrl(key));\n      }\n      this.closeCreatePortfolioForm();\n    });\n  };\n\n  renderCreateProject(canCreateProject: boolean) {\n    if (!canCreateProject) {\n      return null;\n    }\n    return (\n      <li>\n        <a className=\"js-new-project\" href=\"#\" onClick={this.handleNewProjectClick}>\n          {isSonarCloud()\n            ? translate('provisioning.analyze_new_project')\n            : translate('my_account.create_new.TRK')}\n        </a>\n      </li>\n    );\n  }\n\n  renderCreateOrganization(canCreateOrg: boolean) {\n    if (!canCreateOrg) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link className=\"js-new-organization\" to=\"/create-organization\">\n          {translate('my_account.create_new_organization')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCreatePortfolio(showGovernanceEntry: boolean, defaultQualifier?: string) {\n    const governanceInstalled = this.props.appState.qualifiers.includes('VW');\n    if (!governanceInstalled || !showGovernanceEntry) {\n      return null;\n    }\n\n    return (\n      <li>\n        <a className=\"js-new-portfolio\" href=\"#\" onClick={this.handleNewPortfolioClick}>\n          {defaultQualifier\n            ? translate('my_account.create_new', defaultQualifier)\n            : translate('my_account.create_new_portfolio_application')}\n        </a>\n      </li>\n    );\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    const canCreateApplication = hasGlobalPermission(currentUser, 'applicationcreator');\n    const canCreateOrg = isSonarCloud();\n    const canCreatePortfolio = hasGlobalPermission(currentUser, 'portfoliocreator');\n    const canCreateProject = isSonarCloud() || hasGlobalPermission(currentUser, 'provisioning');\n\n    if (!canCreateProject && !canCreateApplication && !canCreatePortfolio && !canCreateOrg) {\n      return null;\n    }\n\n    let defaultQualifier: string | undefined;\n    if (!canCreateApplication) {\n      defaultQualifier = 'VW';\n    } else if (!canCreatePortfolio) {\n      defaultQualifier = 'APP';\n    }\n\n    return (\n      <>\n        <Dropdown\n          overlay={\n            <ul className=\"menu\">\n              {this.renderCreateProject(canCreateProject)}\n              {this.renderCreateOrganization(canCreateOrg)}\n              {this.renderCreatePortfolio(\n                canCreateApplication || canCreatePortfolio,\n                defaultQualifier\n              )}\n            </ul>\n          }\n          tagName=\"li\">\n          <a\n            className=\"navbar-icon navbar-plus\"\n            href=\"#\"\n            title={\n              isSonarCloud()\n                ? translate('my_account.create_new_project_or_organization')\n                : translate('my_account.create_new_project_portfolio_or_application')\n            }>\n            <PlusIcon />\n          </a>\n        </Dropdown>\n        {this.state.governanceReady && this.state.createPortfolio && (\n          <CreateFormShim\n            defaultQualifier={defaultQualifier}\n            onClose={this.closeCreatePortfolioForm}\n            onCreate={this.handleCreatePortfolio}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter<Props>(GlobalNavPlus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n"],"sourceRoot":""}