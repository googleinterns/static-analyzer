{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationAccessContainer.tsx","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.ts"],"names":["OrganizationAccess","checkPermissions","this","props","hasAccess","children","location","organization","OrganizationAccessContainer","state","ownProps","currentUser","params","organizationKey","hasAdminAccess","Boolean","actions","admin","OrganizationAdminAccess","handleRequiredAuthorization","store","history","returnTo","window","pathname","search","hash","dispatch","replace","query","return_to"],"mappings":"6FAAA,gMAuCO,MAAMA,UAA2B,gBAAxC,c,oBASE,KAAAC,iBAAmB,KACZC,KAAKC,MAAMC,UAAUF,KAAKC,QAC7B,eAVJ,oBACED,KAAKD,mBAGP,qBACEC,KAAKD,mBASP,SACE,OAAKC,KAAKC,MAAMC,UAAUF,KAAKC,OAGxB,eAAmBD,KAAKC,MAAME,SAAU,CAC7CC,SAAUJ,KAAKC,MAAMG,SACrBC,aAAcL,KAAKC,MAAMI,eAJlB,MASb,MAKMC,EAA8B,kBALZ,CAACC,EAAcC,KAAf,CACtBC,YAAa,yBAAeF,GAC5BF,aAAc,+BAAqBE,EAAOC,EAASE,OAAOC,mBAGxB,CAAyBb,GAEtD,SAASc,GAAe,YAC7BH,EAD6B,aAE7BJ,IAEA,OAAOQ,QACL,YAAWJ,IAAgBJ,GAAgBA,EAAaS,SAAWT,EAAaS,QAAQC,OAI7E,SAASC,EAAwBf,GAC9C,OAAO,gBAACK,EAA2B,eAACJ,UAAWU,GAAoBX,M,iCClFrE,yEAuBe,SAASgB,IACtB,MAAMC,EAAQ,oBACRC,EAAU,MAEVC,EAAWC,OAAOjB,SAASkB,SAAWD,OAAOjB,SAASmB,OAASF,OAAOjB,SAASoB,KAErFN,EAAMO,SAAS,eACfN,EAAQO,QAAQ,CAAEJ,SAAU,gBAAiBK,MAAO,CAAEC,UAAWR","file":"js/371.m.3fe75579.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { RouterState } from 'react-router';\nimport handleRequiredAuthorization from '../../../app/utils/handleRequiredAuthorization';\nimport { isLoggedIn } from '../../../helpers/users';\nimport { getCurrentUser, getOrganizationByKey, Store } from '../../../store/rootReducer';\n\ninterface StateToProps {\n  currentUser: T.CurrentUser;\n  organization?: T.Organization;\n}\n\ninterface OwnProps extends RouterState {\n  children: JSX.Element;\n}\n\ninterface Props extends StateToProps, Pick<OwnProps, 'children' | 'location'> {\n  hasAccess: (props: Props) => boolean;\n}\n\nexport class OrganizationAccess extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.checkPermissions();\n  }\n\n  componentDidUpdate() {\n    this.checkPermissions();\n  }\n\n  checkPermissions = () => {\n    if (!this.props.hasAccess(this.props)) {\n      handleRequiredAuthorization();\n    }\n  };\n\n  render() {\n    if (!this.props.hasAccess(this.props)) {\n      return null;\n    }\n    return React.cloneElement(this.props.children, {\n      location: this.props.location,\n      organization: this.props.organization\n    });\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps) => ({\n  currentUser: getCurrentUser(state),\n  organization: getOrganizationByKey(state, ownProps.params.organizationKey)\n});\n\nconst OrganizationAccessContainer = connect(mapStateToProps)(OrganizationAccess);\n\nexport function hasAdminAccess({\n  currentUser,\n  organization\n}: Pick<StateToProps, 'currentUser' | 'organization'>) {\n  return Boolean(\n    isLoggedIn(currentUser) && organization && organization.actions && organization.actions.admin\n  );\n}\n\nexport default function OrganizationAdminAccess(props: OwnProps) {\n  return <OrganizationAccessContainer hasAccess={hasAdminAccess} {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getHistory from 'sonar-ui-common/helpers/getHistory';\nimport { requireAuthorization } from '../../store/appState';\nimport getStore from './getStore';\n\nexport default function handleRequiredAuthorization() {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n"],"sourceRoot":""}