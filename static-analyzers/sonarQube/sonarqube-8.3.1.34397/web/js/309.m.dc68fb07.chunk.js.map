{"version":3,"sources":["webpack:///./src/main/js/api/time-machine.ts","webpack:///./src/main/js/components/activity-graph/styles.css","webpack:///./src/main/js/components/activity-graph/GraphsLegendItem.tsx","webpack:///./src/main/js/components/activity-graph/GraphsLegendCustom.tsx","webpack:///./src/main/js/components/activity-graph/GraphsLegendStatic.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContent.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContentCoverage.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContentDuplication.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContentEvents.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltipsContentIssues.tsx","webpack:///./src/main/js/components/activity-graph/GraphsTooltips.tsx","webpack:///./src/main/js/components/activity-graph/GraphHistory.tsx","webpack:///./src/main/js/components/activity-graph/GraphsHistory.tsx","webpack:///./src/main/js/apps/projectActivity/components/EventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/ChangeEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/RemoveEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/Event.tsx","webpack:///./src/main/js/apps/projectActivity/components/Events.tsx","webpack:///./src/main/js/components/activity-graph/AddGraphMetricPopup.tsx","webpack:///./src/main/js/components/activity-graph/AddGraphMetric.tsx","webpack:///./src/main/js/components/activity-graph/GraphsHeader.tsx","webpack:///./src/main/js/apps/projectActivity/components/projectActivity.css?580f","webpack:///./src/main/js/apps/projectActivity/components/projectActivity.css","webpack:///./src/main/js/apps/projectActivity/components/forms/AddEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/RemoveAnalysisForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityAnalysis.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityAnalysesList.tsx","webpack:///./src/main/js/components/activity-graph/GraphsZoom.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityGraphs.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityDateInput.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityEventSelectOption.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityEventSelectValue.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityPageHeader.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityApp.tsx","webpack:///./src/main/js/apps/projectActivity/components/ProjectActivityAppContainer.tsx","webpack:///./src/main/js/apps/projectActivity/actions.ts","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/types/component.ts","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/components/activity-graph/utils.ts","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/types/project-activity.ts","webpack:///./src/main/js/components/controls/DateInput.tsx","webpack:///./src/main/js/components/controls/DayPicker.css?d7e1","webpack:///./src/main/js/components/controls/DayPicker.css","webpack:///./src/main/js/components/controls/styles.css?5633","webpack:///./src/main/js/components/controls/styles.css","webpack:///./src/main/js/components/controls/DateRangeInput.tsx","webpack:///./src/main/js/apps/projectActivity/utils.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/api/projectActivity.ts","webpack:///./src/main/js/components/activity-graph/styles.css?935f","webpack:///./src/main/js/apps/projectActivity/components/DefinitionChangeEventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/RichQualityGateEventInner.tsx"],"names":["getTimeMachineData","data","catch","getAllTimeMachineData","prev","ps","then","r","result","measures","map","measure","idx","history","concat","paging","pageIndex","pageSize","total","p","exports","___CSS_LOADER_API_IMPORT___","push","module","i","handleClick","this","props","removeMetric","metric","isActionable","legendClass","className","showWarning","index","name","iconProps","size","onClick","GraphsLegendCustom","series","serie","hasData","legendItem","translatedName","key","overlay","GraphsLegendStatic","GraphsTooltipsContent","value","GraphsTooltipsContentCoverage","addSeparator","measuresHistory","tooltipIdx","uncovered","find","coverage","uncoveredValue","coverageValue","colSpan","GraphsTooltipsContentDuplication","duplicationDensity","duplicationDensityValue","GraphsTooltipsContentEvents","events","event","category","METRIC_RATING","bugs","vulnerabilities","code_smells","GraphsTooltipsContentIssues","rating","ratingValue","small","point","y","graph","formatValue","left","tooltipPos","placement","RightTop","graphWidth","LeftTop","tooltipContent","renderContent","filter","length","style","top","width","date","selectedDate","state","tick","metricsType","formatTooltipValue","updateTooltip","tooltipXPos","setState","graphEndDate","graphStartDate","isCustom","leakPeriodDate","showAreas","removeCustomMetric","AutoSizer","height","endDate","formatYTick","metricType","startDate","updateSelectedDate","updateZoom","updateGraphZoom","undefined","super","getSelectedDateEvents","analyses","analysis","a","valueOf","nextProps","loading","alt","src","maxWidth","duplications","includes","graphs","graphSeries","EventInner","RichQualityGateEventInner","ComponentContext","Consumer","branchLike","DefinitionChangeEventInner","content","description","changeInput","target","handleSubmit","changeEvent","confirmButtonText","confirmDisable","header","onClose","onConfirm","autoFocus","onChange","type","RemoveEventForm","analysisKey","removeEventQuestion","isDestructive","canAdmin","isFirst","changing","setChanging","deleting","setDeleting","isOther","isVersion","canChange","canDelete","onDelete","showActions","stopPropagation","sortedEvents","AddGraphMetricPopup","elements","metricsTypeFilter","footerNode","selectedElements","Alert","variant","sort","join","MultiSelect","allowNewElements","allowSelection","filterSelected","onSearch","onSelect","item","onUnselect","placeholder","renderLabel","metrics","query","selectedMetrics","element","getLocalizedMetricNameFromKey","toLowerCase","filterMetricsElements","hidden","getSelectedMetricsElements","selected","Promise","resolve","addMetric","filteredMetrics","handleGraphChange","option","updateGraph","addCustomMetric","selectOptions","label","clearable","options","searchable","api","__esModule","default","exported","locals","handleNameChange","addEvent","addEventButtonText","RemoveAnalysisForm","deleteAnalysis","confirmData","node","isBaseline","canCreateVersion","parentScrollContainer","getBoundingClientRect","bottomOffset","topOffset","parent","smooth","addEventForm","setAddEventForm","addVersionForm","setAddVersionForm","removeAnalysisForm","setRemoveAnalysisForm","parsedDate","hasVersion","canAddVersion","canAddEvent","canDeleteAnalyses","manualNewCodePeriodBaseline","ref","long","formattedTime","dateTime","toISOString","buildString","overlayPlacement","BottomRight","toggleClassName","ActionsDropdown","destructive","addVersion","addCustomEvent","Events","deleteEvent","handleScroll","updateStickyBadges","resetScrollTop","newScrollTop","forceBadgeAlignement","scrollContainer","scrollTop","badges","removeAttribute","classList","remove","badge","originOffsetTop","getAttribute","String","offsetTop","setAttribute","Number","contains","add","updateQuery","document","getElementsByClassName","prevProps","Boolean","firstAnalysisKey","project","qualifier","Project","shouldRenderBaselineMarker","byVersionByDay","hasFilteredData","Object","keys","byDay","onScroll","paddingTop","version","days","first","mouseEnterDelay","day","renderAnalysis","analysesLoading","initializing","GraphsZoom","disableHeight","padding","getStateZoomDates","newSeries","newDates","from","to","firstValid","lastValid","x","getMetricsTypeFilter","customMetrics","PROJECT_ACTIVITY_GRAPH","custom","removedMetric","customGraphs","Math","abs","updateQueryDateRange","dates","sortedDates","newGraphs","newState","GraphsHeader","GraphsHistory","handleChange","handleResetClick","DateRangeInput","disabled","handleMouseDown","preventDefault","handleMouseEnter","onFocus","handleMouseMove","isFocused","onMouseDown","onMouseEnter","onMouseMove","role","tabIndex","title","children","ProjectActivityEventSelectValue","handleCategoryChange","isApp","optionComponent","valueComponent","ProjectActivityApp","configuration","showHistory","id","Suggestions","suggestions","defer","A11ySkipTarget","anchor","graphLoading","mounted","eventItem","updateGraphData","fetchActivity","additional","parameters","fetchMeasuresHistory","component","fetchAllActivities","topLevelComponent","loadAllActivities","prevResult","nextPage","getTopLevelComponent","current","breadcrumbs","graphMetrics","newQuery","router","pathname","location","shouldRedirect","locationQuery","filtered","some","emptyCustomGraph","initialized","replace","firstLoadData","all","filterMetrics","addSuggestions","removeSuggestions","SuggestionsInner","ComponentQualifier","Visibility","isPortfolioLike","componentQualifier","Portfolio","toString","SubPortfolio","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","DEFAULT_GRAPH","issues","GRAPHS_METRICS_DISPLAYED","lines_to_cover","uncovered_lines","ncloc","duplicated_lines","GRAPHS_METRICS","reliability_rating","security_rating","sqale_rating","duplicated_lines_density","isCustomGraph","getGraphTypes","ignoreCustom","hasDataValues","hasHistoryData","getSeriesMetricType","getDisplayedHistoryMetrics","getHistoryMetrics","splitSeriesInGraphs","maxGraph","maxSeries","slice","generateSeries","displayedMetrics","indexOf","uncoveredLines","linesToCover","generateCoveredLinesMetric","Array","isArray","findMetric","saveActivityGraph","namespace","getActivityGraph","split","MultiSelectOption","active","onHover","onMouseOver","checked","onCheck","onSelectChange","handleSelectChange","onSelectItem","onUnselectItem","handleSearchChange","onSearchQuery","validateSearchInput","handleElementHover","prevState","activeIdx","getAllElements","handleKeyboard","evt","keyCode","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","updateSelectedElements","updateUnselectedElements","listSize","unselectedElements","setElementActive","allElements","container","addEventListener","totalElements","searchInput","focus","removeEventListener","activeElement","showNewElement","infiniteList","listClasses","div","defaultProps","GraphType","DayPicker","DateInput","input","openCalendar","closeCalendar","currentMonth","Date","lastHovered","open","handleDayClick","modifiers","handleDayMouseEnter","handleCurrentMonthChange","handleCurrentYearChange","handlePreviousMonthClick","handleNextMonthClick","highlightFrom","highlightTo","minDate","after","maxDate","months","years","getFullYear","selectedDays","lastHoveredOrValue","highlighted","weekdaysLong","weekdaysShort","onClickOutside","InputWrapper","inputClassName","innerRef","readOnly","fill","month","getMonth","year","captionElement","NullComponent","disabledDays","before","firstDayOfWeek","navbarElement","onDayClick","onDayMouseEnter","intl","other","formattedValue","formatDate","handleFromChange","setTimeout","toDateInput","handleToChange","EVENT_TYPES","APPLICATION_EVENT_TYPES","activityQueryChanged","prevQuery","nextQuery","datesQueryChanged","customMetricsChanged","historyQueryChanged","getAnalysesByVersionByDay","reduce","acc","currentVersion","versionEvent","newVersion","getTime","matchFilters","isAfterFrom","isBeforeTo","hasSelectedCategoryEvents","parseQuery","urlQuery","parseGraph","serializeQuery","serializeUrlQuery","custom_metrics","selected_date","getProjectActivity","createEvent","isDefinitionChangeEvent","definitionChange","expanded","toggleProjectsList","renderProjectLink","branch","renderBranch","mainBranch","changeType","message","defaultMessage","values","newBranch","oldBranch","turned","projects","renderProjectChange","isRichQualityGateEvent","qualityGate","stillFailing","status","level","failing"],"mappings":"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","file":"js/309.m.dc68fb07.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\ninterface TimeMachineResponse {\n  measures: {\n    metric: string;\n    history: Array<{ date: string; value?: string }>;\n  }[];\n  paging: T.Paging;\n}\n\nexport function getTimeMachineData(\n  data: {\n    component: string;\n    from?: string;\n    metrics: string;\n    p?: number;\n    ps?: number;\n    to?: string;\n  } & BranchParameters\n): Promise<TimeMachineResponse> {\n  return getJSON('/api/measures/search_history', data).catch(throwGlobalError);\n}\n\nexport function getAllTimeMachineData(\n  data: {\n    component: string;\n    metrics: string;\n    from?: string;\n    p?: number;\n    to?: string;\n  } & BranchParameters,\n  prev?: TimeMachineResponse\n): Promise<TimeMachineResponse> {\n  return getTimeMachineData({ ...data, ps: 1000 }).then(r => {\n    const result = prev\n      ? {\n          measures: prev.measures.map((measure, idx) => ({\n            ...measure,\n            history: measure.history.concat(r.measures[idx].history)\n          })),\n          paging: r.paging\n        }\n      : r;\n\n    if (result.paging.pageIndex * result.paging.pageSize >= result.paging.total) {\n      return result;\n    }\n    return getAllTimeMachineData({ ...data, p: result.paging.pageIndex + 1 }, result);\n  });\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".activity-graph-container{padding:10px 0}.activity-graph-tooltip{padding:8px}.activity-graph-tooltip-line{height:20px}.activity-graph-tooltip-line+.activity-graph-tooltip-line{padding-top:4px}.activity-graph-tooltip-issues-line{height:26px;padding-bottom:4px}.activity-graph-tooltip-separator{padding-left:16px;padding-right:16px}.activity-graph-tooltip-separator hr{margin-top:8px;margin-bottom:8px}.activity-graph-tooltip-title,.activity-graph-tooltip-value{font-weight:700}.activity-graph-legends{flex-grow:0;padding-bottom:16px;text-align:center}.activity-graph-legend-actionable{display:inline-block;padding:4px 8px 4px 12px;border-width:1px;border-style:solid;border-radius:12px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertWarnIcon from 'sonar-ui-common/components/icons/AlertWarnIcon';\nimport ChartLegendIcon from 'sonar-ui-common/components/icons/ChartLegendIcon';\n\ninterface Props {\n  className?: string;\n  index: number;\n  metric: string;\n  name: string;\n  showWarning?: boolean;\n  removeMetric?: (metric: string) => void;\n}\n\nexport default class GraphsLegendItem extends React.PureComponent<Props> {\n  handleClick = () => {\n    if (this.props.removeMetric) {\n      this.props.removeMetric(this.props.metric);\n    }\n  };\n\n  render() {\n    const isActionable = this.props.removeMetric != null;\n    const legendClass = classNames(\n      { 'activity-graph-legend-actionable': isActionable },\n      this.props.className\n    );\n    return (\n      <span className={legendClass}>\n        {this.props.showWarning ? (\n          <AlertWarnIcon className=\"spacer-right\" />\n        ) : (\n          <ChartLegendIcon className=\"text-middle spacer-right\" index={this.props.index} />\n        )}\n        <span className=\"text-middle\">{this.props.name}</span>\n        {isActionable && (\n          <ClearButton\n            className=\"button-tiny spacer-left text-middle\"\n            iconProps={{ size: 12 }}\n            onClick={this.handleClick}\n          />\n        )}\n      </span>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Serie } from '../../types/project-activity';\nimport GraphsLegendItem from './GraphsLegendItem';\nimport { hasDataValues } from './utils';\n\ninterface Props {\n  removeMetric: (metric: string) => void;\n  series: Serie[];\n}\n\nexport default function GraphsLegendCustom({ removeMetric, series }: Props) {\n  return (\n    <div className=\"activity-graph-legends\">\n      {series.map((serie, idx) => {\n        const hasData = hasDataValues(serie);\n        const legendItem = (\n          <GraphsLegendItem\n            index={idx}\n            metric={serie.name}\n            name={serie.translatedName}\n            removeMetric={removeMetric}\n            showWarning={!hasData}\n          />\n        );\n        if (!hasData) {\n          return (\n            <Tooltip\n              key={serie.name}\n              overlay={translate('project_activity.graphs.custom.metric_no_history')}>\n              <span className=\"spacer-left spacer-right\">{legendItem}</span>\n            </Tooltip>\n          );\n        }\n        return (\n          <span className=\"spacer-left spacer-right\" key={serie.name}>\n            {legendItem}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Serie } from '../../types/project-activity';\nimport GraphsLegendItem from './GraphsLegendItem';\n\ninterface Props {\n  series: Array<Pick<Serie, 'name' | 'translatedName'>>;\n}\n\nexport default function GraphsLegendStatic({ series }: Props) {\n  return (\n    <div className=\"activity-graph-legends\">\n      {series.map((serie, idx) => (\n        <GraphsLegendItem\n          className=\"big-spacer-left big-spacer-right\"\n          index={idx}\n          key={serie.name}\n          metric={serie.name}\n          name={serie.translatedName}\n        />\n      ))}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChartLegendIcon from 'sonar-ui-common/components/icons/ChartLegendIcon';\n\ninterface Props {\n  name: string;\n  index: number;\n  translatedName: string;\n  value: string;\n}\n\nexport default function GraphsTooltipsContent({ name, index, translatedName, value }: Props) {\n  return (\n    <tr className=\"activity-graph-tooltip-line\" key={name}>\n      <td className=\"thin\">\n        <ChartLegendIcon className=\"spacer-right\" index={index} />\n      </td>\n      <td className=\"activity-graph-tooltip-value text-right spacer-right thin\">{value}</td>\n      <td>{translatedName}</td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { MeasureHistory } from '../../types/project-activity';\n\nexport interface GraphsTooltipsContentCoverageProps {\n  addSeparator: boolean;\n  measuresHistory: MeasureHistory[];\n  tooltipIdx: number;\n}\n\nexport default function GraphsTooltipsContentCoverage({\n  addSeparator,\n  measuresHistory,\n  tooltipIdx\n}: GraphsTooltipsContentCoverageProps) {\n  const uncovered = measuresHistory.find(measure => measure.metric === 'uncovered_lines');\n  const coverage = measuresHistory.find(measure => measure.metric === 'coverage');\n  if (!uncovered || !uncovered.history[tooltipIdx] || !coverage || !coverage.history[tooltipIdx]) {\n    return null;\n  }\n  const uncoveredValue = uncovered.history[tooltipIdx].value;\n  const coverageValue = coverage.history[tooltipIdx].value;\n  return (\n    <tbody>\n      {addSeparator && (\n        <tr>\n          <td className=\"activity-graph-tooltip-separator\" colSpan={3}>\n            <hr />\n          </td>\n        </tr>\n      )}\n      {uncoveredValue && (\n        <tr className=\"activity-graph-tooltip-line\">\n          <td className=\"activity-graph-tooltip-value text-right spacer-right thin\" colSpan={2}>\n            {formatMeasure(uncoveredValue, 'SHORT_INT')}\n          </td>\n          <td>{translate('metric.uncovered_lines.name')}</td>\n        </tr>\n      )}\n      {coverageValue && (\n        <tr className=\"activity-graph-tooltip-line\">\n          <td className=\"activity-graph-tooltip-value text-right spacer-right thin\" colSpan={2}>\n            {formatMeasure(coverageValue, 'PERCENT')}\n          </td>\n          <td>{translate('metric.coverage.name')}</td>\n        </tr>\n      )}\n    </tbody>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { MeasureHistory } from '../../types/project-activity';\n\nexport interface GraphsTooltipsContentDuplicationProps {\n  addSeparator: boolean;\n  measuresHistory: MeasureHistory[];\n  tooltipIdx: number;\n}\n\nexport default function GraphsTooltipsContentDuplication({\n  addSeparator,\n  measuresHistory,\n  tooltipIdx\n}: GraphsTooltipsContentDuplicationProps) {\n  const duplicationDensity = measuresHistory.find(\n    measure => measure.metric === 'duplicated_lines_density'\n  );\n  if (!duplicationDensity || !duplicationDensity.history[tooltipIdx]) {\n    return null;\n  }\n  const duplicationDensityValue = duplicationDensity.history[tooltipIdx].value;\n  if (!duplicationDensityValue) {\n    return null;\n  }\n  return (\n    <tbody>\n      {addSeparator && (\n        <tr>\n          <td className=\"activity-graph-tooltip-separator\" colSpan={3}>\n            <hr />\n          </td>\n        </tr>\n      )}\n      <tr className=\"activity-graph-tooltip-line\">\n        <td className=\"activity-graph-tooltip-value text-right spacer-right thin\" colSpan={2}>\n          {formatMeasure(duplicationDensityValue, 'PERCENT')}\n        </td>\n        <td>{translate('metric.duplicated_lines_density.name')}</td>\n      </tr>\n    </tbody>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  addSeparator: boolean;\n  events: T.AnalysisEvent[];\n}\n\nexport default function GraphsTooltipsContentEvents({ addSeparator, events }: Props) {\n  return (\n    <tbody>\n      {addSeparator && (\n        <tr>\n          <td className=\"activity-graph-tooltip-separator\" colSpan={3}>\n            <hr />\n          </td>\n        </tr>\n      )}\n      <tr className=\"activity-graph-tooltip-line\">\n        <td colSpan={3}>\n          <span>{translate('events')}:</span>\n          {events.map(event => (\n            <span className=\"spacer-left\" key={event.key}>\n              <ProjectEventIcon\n                className={classNames('project-activity-event-icon', event.category)}\n              />\n            </span>\n          ))}\n        </td>\n      </tr>\n    </tbody>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChartLegendIcon from 'sonar-ui-common/components/icons/ChartLegendIcon';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { MeasureHistory } from '../../types/project-activity';\n\nexport interface GraphsTooltipsContentIssuesProps {\n  index: number;\n  measuresHistory: MeasureHistory[];\n  name: string;\n  tooltipIdx: number;\n  translatedName: string;\n  value: string;\n}\n\nconst METRIC_RATING: T.Dict<string> = {\n  bugs: 'reliability_rating',\n  vulnerabilities: 'security_rating',\n  code_smells: 'sqale_rating'\n};\n\nexport default function GraphsTooltipsContentIssues(props: GraphsTooltipsContentIssuesProps) {\n  const rating = props.measuresHistory.find(\n    measure => measure.metric === METRIC_RATING[props.name]\n  );\n  if (!rating || !rating.history[props.tooltipIdx]) {\n    return null;\n  }\n  const ratingValue = rating.history[props.tooltipIdx].value;\n  return (\n    <tr className=\"activity-graph-tooltip-issues-line\" key={props.name}>\n      <td className=\"thin\">\n        <ChartLegendIcon className=\"spacer-right\" index={props.index} />\n      </td>\n      <td className=\"text-right spacer-right\">\n        <span className=\"activity-graph-tooltip-value\">{props.value}</span>\n        {ratingValue && <Rating className=\"spacer-left\" small={true} value={ratingValue} />}\n      </td>\n      <td>{props.translatedName}</td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { Popup, PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { MeasureHistory, Serie } from '../../types/project-activity';\nimport GraphsTooltipsContent from './GraphsTooltipsContent';\nimport GraphsTooltipsContentCoverage from './GraphsTooltipsContentCoverage';\nimport GraphsTooltipsContentDuplication from './GraphsTooltipsContentDuplication';\nimport GraphsTooltipsContentEvents from './GraphsTooltipsContentEvents';\nimport GraphsTooltipsContentIssues from './GraphsTooltipsContentIssues';\nimport { DEFAULT_GRAPH } from './utils';\n\ninterface Props {\n  events: T.AnalysisEvent[];\n  formatValue: (tick: number | string) => string;\n  graph: string;\n  graphWidth: number;\n  measuresHistory: MeasureHistory[];\n  selectedDate: Date;\n  series: Serie[];\n  tooltipIdx: number;\n  tooltipPos: number;\n}\n\nconst TOOLTIP_WIDTH = 250;\n\nexport default class GraphsTooltips extends React.PureComponent<Props> {\n  renderContent() {\n    const { tooltipIdx } = this.props;\n\n    return this.props.series.map((serie, idx) => {\n      const point = serie.data[tooltipIdx];\n      if (!point || (!point.y && point.y !== 0)) {\n        return null;\n      }\n      if (this.props.graph === DEFAULT_GRAPH) {\n        return (\n          <GraphsTooltipsContentIssues\n            index={idx}\n            key={serie.name}\n            measuresHistory={this.props.measuresHistory}\n            name={serie.name}\n            tooltipIdx={tooltipIdx}\n            translatedName={serie.translatedName}\n            value={this.props.formatValue(point.y)}\n          />\n        );\n      } else {\n        return (\n          <GraphsTooltipsContent\n            index={idx}\n            key={serie.name}\n            name={serie.name}\n            translatedName={serie.translatedName}\n            value={this.props.formatValue(point.y)}\n          />\n        );\n      }\n    });\n  }\n\n  render() {\n    const { events, measuresHistory, tooltipIdx } = this.props;\n    const top = 30;\n    let left = this.props.tooltipPos + 60;\n    let placement = PopupPlacement.RightTop;\n    if (left > this.props.graphWidth - TOOLTIP_WIDTH - 50) {\n      left -= TOOLTIP_WIDTH;\n      placement = PopupPlacement.LeftTop;\n    }\n    const tooltipContent = this.renderContent().filter(isDefined);\n    const addSeparator = tooltipContent.length > 0;\n    return (\n      <Popup\n        className=\"disabled-pointer-events\"\n        placement={placement}\n        style={{ top, left, width: TOOLTIP_WIDTH }}>\n        <div className=\"activity-graph-tooltip\">\n          <div className=\"activity-graph-tooltip-title spacer-bottom\">\n            <DateTimeFormatter date={this.props.selectedDate} />\n          </div>\n          <table className=\"width-100\">\n            <tbody>{tooltipContent}</tbody>\n            {this.props.graph === 'coverage' && (\n              <GraphsTooltipsContentCoverage\n                addSeparator={addSeparator}\n                measuresHistory={measuresHistory}\n                tooltipIdx={tooltipIdx}\n              />\n            )}\n            {this.props.graph === 'duplications' && (\n              <GraphsTooltipsContentDuplication\n                addSeparator={addSeparator}\n                measuresHistory={measuresHistory}\n                tooltipIdx={tooltipIdx}\n              />\n            )}\n            {events && events.length > 0 && (\n              <GraphsTooltipsContentEvents addSeparator={addSeparator} events={events} />\n            )}\n          </table>\n        </div>\n      </Popup>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized/dist/commonjs/AutoSizer';\nimport AdvancedTimeline from 'sonar-ui-common/components/charts/AdvancedTimeline';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getShortType } from '../../helpers/measures';\nimport { MeasureHistory, Serie } from '../../types/project-activity';\nimport GraphsLegendCustom from './GraphsLegendCustom';\nimport GraphsLegendStatic from './GraphsLegendStatic';\nimport GraphsTooltips from './GraphsTooltips';\n\ninterface Props {\n  events: T.AnalysisEvent[];\n  graph: string;\n  graphEndDate?: Date;\n  graphStartDate?: Date;\n  leakPeriodDate?: Date;\n  isCustom?: boolean;\n  measuresHistory: MeasureHistory[];\n  metricsType: string;\n  removeCustomMetric?: (metric: string) => void;\n  showAreas: boolean;\n  series: Serie[];\n  selectedDate?: Date;\n  updateGraphZoom?: (from?: Date, to?: Date) => void;\n  updateSelectedDate?: (selectedDate?: Date) => void;\n  updateTooltip: (selectedDate?: Date) => void;\n}\n\ninterface State {\n  tooltipIdx?: number;\n  tooltipXPos?: number;\n}\n\nexport default class GraphHistory extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  formatValue = (tick: string | number) => {\n    return formatMeasure(tick, getShortType(this.props.metricsType));\n  };\n\n  formatTooltipValue = (tick: string | number) => {\n    return formatMeasure(tick, this.props.metricsType);\n  };\n\n  updateTooltip = (selectedDate?: Date, tooltipXPos?: number, tooltipIdx?: number) => {\n    this.props.updateTooltip(selectedDate);\n    this.setState({ tooltipXPos, tooltipIdx });\n  };\n\n  render() {\n    const {\n      events,\n      graph,\n      graphEndDate,\n      graphStartDate,\n      isCustom,\n      leakPeriodDate,\n      measuresHistory,\n      metricsType,\n      selectedDate,\n      series,\n      showAreas\n    } = this.props;\n    const { tooltipIdx, tooltipXPos } = this.state;\n\n    return (\n      <div className=\"activity-graph-container flex-grow display-flex-column display-flex-stretch display-flex-justify-center\">\n        {isCustom && this.props.removeCustomMetric ? (\n          <GraphsLegendCustom removeMetric={this.props.removeCustomMetric} series={series} />\n        ) : (\n          <GraphsLegendStatic series={series} />\n        )}\n        <div className=\"flex-1\">\n          <AutoSizer>\n            {({ height, width }) => (\n              <div>\n                <AdvancedTimeline\n                  endDate={graphEndDate}\n                  formatYTick={this.formatValue}\n                  height={height}\n                  leakPeriodDate={leakPeriodDate}\n                  metricType={metricsType}\n                  selectedDate={selectedDate}\n                  series={series}\n                  showAreas={showAreas}\n                  startDate={graphStartDate}\n                  updateSelectedDate={this.props.updateSelectedDate}\n                  updateTooltip={this.updateTooltip}\n                  updateZoom={this.props.updateGraphZoom}\n                  width={width}\n                />\n                {selectedDate !== undefined &&\n                  tooltipIdx !== undefined &&\n                  tooltipXPos !== undefined && (\n                    <GraphsTooltips\n                      events={events}\n                      formatValue={this.formatTooltipValue}\n                      graph={graph}\n                      graphWidth={width}\n                      measuresHistory={measuresHistory}\n                      selectedDate={selectedDate}\n                      series={series}\n                      tooltipIdx={tooltipIdx}\n                      tooltipPos={tooltipXPos}\n                    />\n                  )}\n              </div>\n            )}\n          </AutoSizer>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual } from 'lodash';\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { GraphType, MeasureHistory, Serie } from '../../types/project-activity';\nimport GraphHistory from './GraphHistory';\nimport './styles.css';\nimport { getSeriesMetricType, hasHistoryData, isCustomGraph } from './utils';\n\ninterface Props {\n  analyses: T.ParsedAnalysis[];\n  graph: GraphType;\n  graphs: Serie[][];\n  graphEndDate?: Date;\n  graphStartDate?: Date;\n  leakPeriodDate?: Date;\n  loading: boolean;\n  measuresHistory: MeasureHistory[];\n  removeCustomMetric?: (metric: string) => void;\n  selectedDate?: Date;\n  series: Serie[];\n  updateGraphZoom?: (from?: Date, to?: Date) => void;\n  updateSelectedDate?: (selectedDate?: Date) => void;\n}\n\ninterface State {\n  selectedDate?: Date;\n}\n\nexport default class GraphsHistory extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      selectedDate: props.selectedDate\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (!isEqual(nextProps.selectedDate, this.props.selectedDate)) {\n      this.setState({ selectedDate: nextProps.selectedDate });\n    }\n  }\n\n  getSelectedDateEvents = () => {\n    const { selectedDate } = this.state;\n    const { analyses } = this.props;\n    if (analyses && selectedDate) {\n      const analysis = analyses.find(a => a.date.valueOf() === selectedDate.valueOf());\n      if (analysis) {\n        return analysis.events;\n      }\n    }\n    return [];\n  };\n\n  updateTooltip = (selectedDate?: Date) => {\n    this.setState({ selectedDate });\n  };\n\n  render() {\n    const { graph, loading, series } = this.props;\n    const isCustom = isCustomGraph(graph);\n\n    if (loading) {\n      return (\n        <div className=\"activity-graph-container flex-grow display-flex-column display-flex-stretch display-flex-justify-center\">\n          <div className=\"text-center\">\n            <DeferredSpinner loading={loading} />\n          </div>\n        </div>\n      );\n    }\n\n    if (!hasHistoryData(series)) {\n      return (\n        <div className=\"activity-graph-container flex-grow display-flex-column display-flex-stretch display-flex-justify-center\">\n          <div className=\"display-flex-center display-flex-justify-center\">\n            <img\n              alt=\"\" /* Make screen readers ignore this image; it's purely eye candy. */\n              className=\"spacer-right\"\n              height={52}\n              src={`${getBaseUrl()}/images/activity-chart.svg`}\n            />\n            <div className=\"big-spacer-left big text-muted\" style={{ maxWidth: 300 }}>\n              {translate(\n                isCustom\n                  ? 'project_activity.graphs.custom.no_history'\n                  : 'component_measures.no_history'\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    const events = this.getSelectedDateEvents();\n    const showAreas = [GraphType.coverage, GraphType.duplications].includes(graph);\n    return (\n      <div className=\"display-flex-justify-center display-flex-column display-flex-stretch flex-grow\">\n        {this.props.graphs.map((graphSeries, idx) => (\n          <GraphHistory\n            events={events}\n            graph={graph}\n            graphEndDate={this.props.graphEndDate}\n            graphStartDate={this.props.graphStartDate}\n            isCustom={isCustom}\n            key={idx}\n            leakPeriodDate={this.props.leakPeriodDate}\n            measuresHistory={this.props.measuresHistory}\n            metricsType={getSeriesMetricType(graphSeries)}\n            removeCustomMetric={this.props.removeCustomMetric}\n            selectedDate={this.state.selectedDate}\n            series={graphSeries}\n            showAreas={showAreas}\n            updateGraphZoom={this.props.updateGraphZoom}\n            updateSelectedDate={this.props.updateSelectedDate}\n            updateTooltip={this.updateTooltip}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ComponentContext } from '../../../app/components/ComponentContext';\nimport { DefinitionChangeEventInner, isDefinitionChangeEvent } from './DefinitionChangeEventInner';\nimport { isRichQualityGateEvent, RichQualityGateEventInner } from './RichQualityGateEventInner';\n\nexport interface EventInnerProps {\n  event: T.AnalysisEvent;\n}\n\nexport default function EventInner({ event }: EventInnerProps) {\n  if (isRichQualityGateEvent(event)) {\n    return <RichQualityGateEventInner event={event} />;\n  } else if (isDefinitionChangeEvent(event)) {\n    return (\n      <ComponentContext.Consumer>\n        {({ branchLike }) => <DefinitionChangeEventInner branchLike={branchLike} event={event} />}\n      </ComponentContext.Consumer>\n    );\n  } else {\n    const content = (\n      <span className=\"text-middle\">\n        <span className=\"note little-spacer-right\">\n          {translate('event.category', event.category)}:\n        </span>\n        <strong className=\"spacer-right\">{event.name}</strong>\n      </span>\n    );\n    return event.description ? <Tooltip overlay={event.description}>{content}</Tooltip> : content;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  changeEvent: (event: string, name: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  header: string;\n  onClose: () => void;\n}\n\ninterface State {\n  name: string;\n}\n\nexport default class ChangeEventForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { name: props.event.name };\n  }\n\n  changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = () => {\n    return this.props.changeEvent(this.props.event.key, this.state.name);\n  };\n\n  render() {\n    const { name } = this.state;\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('change_verb')}\n        confirmDisable={!name || name === this.props.event.name}\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}\n        size=\"small\">\n        <div className=\"modal-field\">\n          <label>{translate('name')}</label>\n          <input autoFocus={true} onChange={this.changeInput} type=\"text\" value={name} />\n        </div>\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface RemoveEventFormProps {\n  analysisKey: string;\n  event: T.AnalysisEvent;\n  header: string;\n  removeEventQuestion: string;\n  onClose: () => void;\n  onConfirm: (analysis: string, event: string) => Promise<void>;\n}\n\nexport default function RemoveEventForm(props: RemoveEventFormProps) {\n  const { analysisKey, event, header, removeEventQuestion } = props;\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      header={header}\n      isDestructive={true}\n      onClose={props.onClose}\n      onConfirm={() => props.onConfirm(analysisKey, event.key)}>\n      {removeEventQuestion}\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DeleteButton, EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport EventInner from './EventInner';\nimport ChangeEventForm from './forms/ChangeEventForm';\nimport RemoveEventForm from './forms/RemoveEventForm';\n\nexport interface EventProps {\n  analysisKey: string;\n  canAdmin?: boolean;\n  event: T.AnalysisEvent;\n  isFirst?: boolean;\n  onChange?: (event: string, name: string) => Promise<void>;\n  onDelete?: (analysisKey: string, event: string) => Promise<void>;\n}\n\nexport function Event(props: EventProps) {\n  const { analysisKey, event, canAdmin, isFirst } = props;\n\n  const [changing, setChanging] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n\n  const isOther = event.category === 'OTHER';\n  const isVersion = event.category === 'VERSION';\n  const canChange = (isOther || isVersion) && props.onChange;\n  const canDelete = (isOther || (isVersion && !isFirst)) && props.onDelete;\n  const showActions = canAdmin && (canChange || canDelete);\n\n  return (\n    <div className=\"project-activity-event\">\n      <ProjectEventIcon\n        className={classNames(\n          'project-activity-event-icon little-spacer-right text-middle',\n          event.category\n        )}\n      />\n\n      <EventInner event={event} />\n\n      {showActions && (\n        <span className=\"nowrap\">\n          {canChange && (\n            <EditButton\n              aria-label={translate('project_activity.events.tooltip.edit')}\n              className=\"button-small\"\n              data-test=\"project-activity__edit-event\"\n              onClick={() => setChanging(true)}\n              stopPropagation={true}\n            />\n          )}\n          {canDelete && (\n            <DeleteButton\n              aria-label={translate('project_activity.events.tooltip.delete')}\n              className=\"button-small\"\n              data-test=\"project-activity__delete-event\"\n              onClick={() => setDeleting(true)}\n              stopPropagation={true}\n            />\n          )}\n        </span>\n      )}\n\n      {changing && props.onChange && (\n        <ChangeEventForm\n          changeEvent={props.onChange}\n          event={event}\n          header={\n            isVersion\n              ? translate('project_activity.change_version')\n              : translate('project_activity.change_custom_event')\n          }\n          onClose={() => setChanging(false)}\n        />\n      )}\n\n      {deleting && props.onDelete && (\n        <RemoveEventForm\n          analysisKey={analysisKey}\n          event={event}\n          header={\n            isVersion\n              ? translate('project_activity.remove_version')\n              : translate('project_activity.remove_custom_event')\n          }\n          onClose={() => setDeleting(false)}\n          onConfirm={props.onDelete}\n          removeEventQuestion={translate(\n            `project_activity.${isVersion ? 'remove_version' : 'remove_custom_event'}.question`\n          )}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(Event);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Event from './Event';\n\nexport interface EventsProps {\n  analysisKey: string;\n  canAdmin?: boolean;\n  events: T.AnalysisEvent[];\n  isFirst?: boolean;\n  onChange?: (event: string, name: string) => Promise<void>;\n  onDelete?: (analysis: string, event: string) => Promise<void>;\n}\n\nexport function Events(props: EventsProps) {\n  const { analysisKey, canAdmin, events, isFirst } = props;\n\n  const sortedEvents = sortBy(\n    events,\n    // versions last\n    event => (event.category === 'VERSION' ? 1 : 0),\n    // then the rest sorted by category\n    'category'\n  );\n\n  return (\n    <div className=\"big-spacer-top\">\n      {sortedEvents.map(event => (\n        <Event\n          analysisKey={analysisKey}\n          canAdmin={canAdmin}\n          event={event}\n          isFirst={isFirst}\n          key={event.key}\n          onChange={props.onChange}\n          onDelete={props.onDelete}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default React.memo(Events);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\n\nexport interface AddGraphMetricPopupProps {\n  elements: string[];\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  metricsTypeFilter?: string[];\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  popupPosition?: any;\n  renderLabel: (element: string) => React.ReactNode;\n  selectedElements: string[];\n}\n\nexport default function AddGraphMetricPopup({\n  elements,\n  metricsTypeFilter,\n  ...props\n}: AddGraphMetricPopupProps) {\n  let footerNode: React.ReactNode = '';\n\n  if (props.selectedElements.length >= 6) {\n    footerNode = (\n      <Alert className=\"spacer-left spacer-right spacer-top\" variant=\"info\">\n        {translate('project_activity.graphs.custom.add_metric_info')}\n      </Alert>\n    );\n  } else if (metricsTypeFilter && metricsTypeFilter.length > 0) {\n    footerNode = (\n      <Alert className=\"spacer-left spacer-right spacer-top\" variant=\"info\">\n        {translateWithParameters(\n          'project_activity.graphs.custom.type_x_message',\n          metricsTypeFilter\n            .map((type: string) => translate('metric.type', type))\n            .sort()\n            .join(', ')\n        )}\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"menu abs-width-300\">\n      <MultiSelect\n        allowNewElements={false}\n        allowSelection={props.selectedElements.length < 6}\n        elements={elements}\n        filterSelected={props.filterSelected}\n        footerNode={footerNode}\n        onSearch={props.onSearch}\n        onSelect={(item: string) => elements.includes(item) && props.onSelect(item)}\n        onUnselect={props.onUnselect}\n        placeholder={translate('search.search_for_tags')}\n        renderLabel={props.renderLabel}\n        selectedElements={props.selectedElements}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { isDiffMetric } from '../../helpers/measures';\nimport AddGraphMetricPopup from './AddGraphMetricPopup';\n\ninterface Props {\n  addMetric: (metric: string) => void;\n  className?: string;\n  metrics: T.Metric[];\n  metricsTypeFilter?: string[];\n  removeMetric: (metric: string) => void;\n  selectedMetrics: string[];\n}\n\ninterface State {\n  metrics: string[];\n  query: string;\n  selectedMetrics: string[];\n}\n\nexport default class AddGraphMetric extends React.PureComponent<Props, State> {\n  state: State = {\n    metrics: [],\n    query: '',\n    selectedMetrics: []\n  };\n\n  filterSelected = (query: string, selectedElements: string[]) => {\n    return selectedElements.filter(element =>\n      this.getLocalizedMetricNameFromKey(element)\n        .toLowerCase()\n        .includes(query.toLowerCase())\n    );\n  };\n\n  filterMetricsElements = (\n    { metricsTypeFilter, metrics, selectedMetrics }: Props,\n    query: string\n  ) => {\n    return metrics\n      .filter(metric => {\n        if (\n          metric.hidden ||\n          isDiffMetric(metric.key) ||\n          ['DATA', 'DISTRIB'].includes(metric.type) ||\n          selectedMetrics.includes(metric.key) ||\n          !getLocalizedMetricName(metric)\n            .toLowerCase()\n            .includes(query.toLowerCase())\n        ) {\n          return false;\n        }\n        if (metricsTypeFilter && metricsTypeFilter.length > 0) {\n          return metricsTypeFilter.includes(metric.type);\n        }\n        return true;\n      })\n      .map(metric => metric.key);\n  };\n\n  getSelectedMetricsElements = (metrics: T.Metric[], selectedMetrics?: string[]) => {\n    const selected = selectedMetrics || this.props.selectedMetrics;\n    return metrics.filter(metric => selected.includes(metric.key)).map(metric => metric.key);\n  };\n\n  getLocalizedMetricNameFromKey = (key: string) => {\n    const metric = find(this.props.metrics, { key });\n    return metric === undefined ? key : getLocalizedMetricName(metric);\n  };\n\n  onSearch = (query: string) => {\n    this.setState({ query });\n    return Promise.resolve();\n  };\n\n  onSelect = (metric: string) => {\n    this.props.addMetric(metric);\n    this.setState(state => {\n      return {\n        selectedMetrics: sortBy([...state.selectedMetrics, metric]),\n        metrics: this.filterMetricsElements(this.props, state.query)\n      };\n    });\n  };\n\n  onUnselect = (metric: string) => {\n    this.props.removeMetric(metric);\n    this.setState(state => {\n      return {\n        metrics: sortBy([...state.metrics, metric]),\n        selectedMetrics: state.selectedMetrics.filter(selected => selected !== metric)\n      };\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n    const filteredMetrics = this.filterMetricsElements(this.props, query);\n    const selectedMetrics = this.getSelectedMetricsElements(\n      this.props.metrics,\n      this.props.selectedMetrics\n    );\n    return (\n      <Dropdown\n        className=\"display-inline-block\"\n        overlay={\n          <AddGraphMetricPopup\n            elements={filteredMetrics}\n            filterSelected={this.filterSelected}\n            metricsTypeFilter={this.props.metricsTypeFilter}\n            onSearch={this.onSearch}\n            onSelect={this.onSelect}\n            onUnselect={this.onUnselect}\n            renderLabel={element => this.getLocalizedMetricNameFromKey(element)}\n            selectedElements={selectedMetrics}\n          />\n        }>\n        <Button className=\"spacer-left\">\n          <span className=\"text-ellipsis text-middle\">\n            {translate('project_activity.graphs.custom.add')}\n          </span>\n          <DropdownIcon className=\"text-top little-spacer-left\" />\n        </Button>\n      </Dropdown>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GraphType } from '../../types/project-activity';\nimport AddGraphMetric from './AddGraphMetric';\nimport './styles.css';\nimport { getGraphTypes, isCustomGraph } from './utils';\n\ninterface Props {\n  addCustomMetric?: (metric: string) => void;\n  className?: string;\n  removeCustomMetric?: (metric: string) => void;\n  graph: GraphType;\n  metrics: T.Metric[];\n  metricsTypeFilter?: string[];\n  selectedMetrics?: string[];\n  updateGraph: (graphType: string) => void;\n}\n\nexport default class GraphsHeader extends React.PureComponent<Props> {\n  handleGraphChange = (option: { value: string }) => {\n    if (option.value !== this.props.graph) {\n      this.props.updateGraph(option.value);\n    }\n  };\n\n  render() {\n    const {\n      addCustomMetric,\n      className,\n      graph,\n      metrics,\n      metricsTypeFilter,\n      removeCustomMetric,\n      selectedMetrics = []\n    } = this.props;\n\n    const types = getGraphTypes(addCustomMetric === undefined || removeCustomMetric === undefined);\n\n    const selectOptions = types.map(type => ({\n      label: translate('project_activity.graphs', type),\n      value: type\n    }));\n\n    return (\n      <div className={classNames(className, 'position-relative')}>\n        <Select\n          className=\"pull-left input-medium\"\n          clearable={false}\n          onChange={this.handleGraphChange}\n          options={selectOptions}\n          searchable={false}\n          value={graph}\n        />\n        {isCustomGraph(graph) &&\n          addCustomMetric !== undefined &&\n          removeCustomMetric !== undefined && (\n            <AddGraphMetric\n              addMetric={addCustomMetric}\n              className=\"pull-left spacer-left\"\n              metrics={metrics}\n              metricsTypeFilter={metricsTypeFilter}\n              removeMetric={removeCustomMetric}\n              selectedMetrics={selectedMetrics}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./projectActivity.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".project-activity-page{min-height:600px;height:calc(100vh - 250px)}.project-activity-page-side-outer{position:relative;width:400px;margin-bottom:0;display:flex;flex-direction:row;align-items:stretch}.project-activity-layout-page-main{flex-grow:1;min-width:640px;padding-left:20px;display:flex}.project-activity-layout-page-main-inner{min-width:640px;max-width:880px;margin-bottom:0;flex:1;display:flex;flex-direction:column;align-items:stretch}.project-activity-versions-list{max-width:400px;box-sizing:border-box;overflow:auto;flex-grow:1;flex-shrink:0;padding:16px 16px 16px 12px}.project-activity-day{margin-top:8px;margin-bottom:24px}.project-activity-day:last-child{margin-bottom:10px}.project-activity-date{margin-bottom:16px;font-size:16px;font-weight:700}.project-activity-analysis{position:relative;min-height:20px;padding:16px;cursor:pointer}.project-activity-analysis.selected{cursor:default;background-color:#ecf6fe}.project-activity-analysis:focus{outline:none}.project-activity-analysis:hover{background-color:#ecf6fe}.project-activity-analysis+.project-activity-analysis{border-top:none}.project-activity-analysis-actions{height:20px}.project-activity-time{height:20px;line-height:20px}.project-activity-event{line-height:20px;text-indent:-20px;padding-left:20px}.project-activity-event *{text-indent:0}.project-activity-event+.project-activity-event{margin-top:8px}.project-activity-event-inner-more-link{line-height:16px}.project-activity-event-icon.VERSION{color:#4b9fd5}.project-activity-event-icon.QUALITY_GATE{color:#9139d4}.project-activity-event-icon.QUALITY_PROFILE{color:#ccc}.project-activity-event-icon.DEFINITION_CHANGE{color:#33a759}.project-activity-event-icon.OTHER{color:#442d1b}.project-activity-version-badge{margin-left:-12px;padding-top:8px;padding-bottom:8px;background-color:#fff}.project-activity-version-badge.first,.project-activity-version-badge.sticky{position:absolute;top:0;left:12px;right:16px;padding-top:24px;z-index:1}.project-activity-version-badge.sticky+.project-activity-days-list{padding-top:36px}.project-activity-version-badge .analysis-version{max-width:385px;border-radius:0 2px 2px 0;overflow:hidden;text-overflow:ellipsis}.activity-graph-tooltip-line .project-activity-event-icon,.Select .project-activity-event-icon{margin-top:1px}.baseline-marker{position:absolute;top:-10px;left:0;right:0;display:flex;flex-direction:row;align-items:center}.baseline-marker>.wedge{border:10px solid transparent;border-left-color:#f1e8cb}.baseline-marker>hr{border:none;margin:0 0 0 -11px;background-color:#f1e8cb;height:2px;flex:1 0 auto}.baseline-marker>.label{background-color:#fbf3d5;border:1px solid #f1e8cb;padding:2px 8px;font-size:10px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  addEvent: (analysis: string, name: string, category?: string) => Promise<void>;\n  addEventButtonText: string;\n  analysis: T.ParsedAnalysis;\n  onClose: () => void;\n}\n\ninterface State {\n  name: string;\n}\n\nexport default class AddEventForm extends React.PureComponent<Props, State> {\n  state: State = { name: '' };\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = () => {\n    return this.props.addEvent(this.props.analysis.key, this.state.name);\n  };\n\n  render() {\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('save')}\n        confirmDisable={!this.state.name}\n        header={translate(this.props.addEventButtonText)}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}\n        size=\"small\">\n        <div className=\"modal-field\">\n          <label>{translate('name')}</label>\n          <input\n            autoFocus={true}\n            onChange={this.handleNameChange}\n            type=\"text\"\n            value={this.state.name}\n          />\n        </div>\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  analysis: T.ParsedAnalysis;\n  deleteAnalysis: (analysis: string) => Promise<void>;\n  onClose: () => void;\n}\n\nexport default function RemoveAnalysisForm({ analysis, deleteAnalysis, onClose }: Props) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={analysis.key}\n      header={translate('project_activity.delete_analysis')}\n      isDestructive={true}\n      onClose={onClose}\n      onConfirm={deleteAnalysis}>\n      {translate('project_activity.delete_analysis.question')}\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport ClickEventBoundary from 'sonar-ui-common/components/controls/ClickEventBoundary';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport TimeFormatter from 'sonar-ui-common/components/intl/TimeFormatter';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport Events from './Events';\nimport AddEventForm from './forms/AddEventForm';\nimport RemoveAnalysisForm from './forms/RemoveAnalysisForm';\n\nexport interface ProjectActivityAnalysisProps {\n  addCustomEvent: (analysis: string, name: string, category?: string) => Promise<void>;\n  addVersion: (analysis: string, version: string) => Promise<void>;\n  analysis: T.ParsedAnalysis;\n  canAdmin?: boolean;\n  canDeleteAnalyses?: boolean;\n  canCreateVersion: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteAnalysis: (analysis: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  isBaseline: boolean;\n  isFirst: boolean;\n  parentScrollContainer?: HTMLElement | null;\n  selected: boolean;\n  updateSelectedDate: (date: Date) => void;\n}\n\nexport function ProjectActivityAnalysis(props: ProjectActivityAnalysisProps) {\n  let node: HTMLLIElement | null = null;\n\n  const {\n    analysis,\n    isBaseline,\n    isFirst,\n    canAdmin,\n    canCreateVersion,\n    parentScrollContainer,\n    selected\n  } = props;\n\n  React.useEffect(() => {\n    if (node && parentScrollContainer && selected) {\n      const { height } = node.getBoundingClientRect();\n      scrollToElement(node, {\n        bottomOffset: height + 20,\n        topOffset: 60,\n        parent: parentScrollContainer,\n        smooth: false\n      });\n    }\n  });\n\n  const [addEventForm, setAddEventForm] = React.useState(false);\n  const [addVersionForm, setAddVersionForm] = React.useState(false);\n  const [removeAnalysisForm, setRemoveAnalysisForm] = React.useState(false);\n\n  const parsedDate = parseDate(analysis.date);\n  const hasVersion = analysis.events.find(event => event.category === 'VERSION') != null;\n\n  const canAddVersion = canAdmin && !hasVersion && canCreateVersion;\n  const canAddEvent = canAdmin;\n  const canDeleteAnalyses =\n    props.canDeleteAnalyses && !isFirst && !analysis.manualNewCodePeriodBaseline;\n\n  return (\n    <li\n      className={classNames('project-activity-analysis bordered-top bordered-bottom', {\n        selected\n      })}\n      onClick={() => props.updateSelectedDate(analysis.date)}\n      ref={ref => (node = ref)}>\n      <div className=\"display-flex-center display-flex-space-between\">\n        <div className=\"project-activity-time\">\n          <TimeFormatter date={parsedDate} long={false}>\n            {formattedTime => (\n              <time className=\"text-middle\" dateTime={parsedDate.toISOString()}>\n                {formattedTime}\n              </time>\n            )}\n          </TimeFormatter>\n        </div>\n\n        {analysis.buildString && (\n          <div className=\"flex-shrink small text-muted text-ellipsis\">\n            {translateWithParameters(\n              'project_activity.analysis_build_string_X',\n              analysis.buildString\n            )}\n          </div>\n        )}\n\n        {(canAddVersion || canAddEvent || canDeleteAnalyses) && (\n          <ClickEventBoundary>\n            <div className=\"project-activity-analysis-actions big-spacer-left\">\n              <ActionsDropdown\n                overlayPlacement={PopupPlacement.BottomRight}\n                small={true}\n                toggleClassName=\"js-analysis-actions\">\n                {canAddVersion && (\n                  <ActionsDropdownItem\n                    className=\"js-add-version\"\n                    onClick={() => setAddVersionForm(true)}>\n                    {translate('project_activity.add_version')}\n                  </ActionsDropdownItem>\n                )}\n                {canAddEvent && (\n                  <ActionsDropdownItem\n                    className=\"js-add-event\"\n                    onClick={() => setAddEventForm(true)}>\n                    {translate('project_activity.add_custom_event')}\n                  </ActionsDropdownItem>\n                )}\n                {(canAddVersion || canAddEvent) && canDeleteAnalyses && <ActionsDropdownDivider />}\n                {canDeleteAnalyses && (\n                  <ActionsDropdownItem\n                    className=\"js-delete-analysis\"\n                    destructive={true}\n                    onClick={() => setRemoveAnalysisForm(true)}>\n                    {translate('project_activity.delete_analysis')}\n                  </ActionsDropdownItem>\n                )}\n              </ActionsDropdown>\n\n              {addVersionForm && (\n                <AddEventForm\n                  addEvent={props.addVersion}\n                  addEventButtonText=\"project_activity.add_version\"\n                  analysis={analysis}\n                  onClose={() => setAddVersionForm(false)}\n                />\n              )}\n\n              {addEventForm && (\n                <AddEventForm\n                  addEvent={props.addCustomEvent}\n                  addEventButtonText=\"project_activity.add_custom_event\"\n                  analysis={analysis}\n                  onClose={() => setAddEventForm(false)}\n                />\n              )}\n\n              {removeAnalysisForm && (\n                <RemoveAnalysisForm\n                  analysis={analysis}\n                  deleteAnalysis={props.deleteAnalysis}\n                  onClose={() => setRemoveAnalysisForm(false)}\n                />\n              )}\n            </div>\n          </ClickEventBoundary>\n        )}\n      </div>\n\n      {analysis.events.length > 0 && (\n        <Events\n          analysisKey={analysis.key}\n          canAdmin={canAdmin}\n          events={analysis.events}\n          isFirst={isFirst}\n          onChange={props.changeEvent}\n          onDelete={props.deleteEvent}\n        />\n      )}\n\n      {isBaseline && (\n        <div className=\"baseline-marker\">\n          <div className=\"wedge\" />\n          <hr />\n          <div className=\"label display-flex-center\">\n            {translate('project_activity.new_code_period_start')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('project_activity.new_code_period_start.help')}\n              placement=\"top\"\n            />\n          </div>\n        </div>\n      )}\n    </li>\n  );\n}\n\nexport default React.memo(ProjectActivityAnalysis);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { isEqual } from 'date-fns';\nimport { throttle } from 'lodash';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ComponentQualifier } from '../../../types/component';\nimport { activityQueryChanged, getAnalysesByVersionByDay, Query } from '../utils';\nimport ProjectActivityAnalysis from './ProjectActivityAnalysis';\n\ninterface Props {\n  addCustomEvent: (analysis: string, name: string, category?: string) => Promise<void>;\n  addVersion: (analysis: string, version: string) => Promise<void>;\n  analyses: T.ParsedAnalysis[];\n  analysesLoading: boolean;\n  canAdmin?: boolean;\n  canDeleteAnalyses?: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteAnalysis: (analysis: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  initializing: boolean;\n  leakPeriodDate?: Date;\n  project: { qualifier: string };\n  query: Query;\n  updateQuery: (changes: Partial<Query>) => void;\n}\n\nexport default class ProjectActivityAnalysesList extends React.PureComponent<Props> {\n  analyses?: HTMLCollectionOf<HTMLElement>;\n  badges?: HTMLCollectionOf<HTMLElement>;\n  scrollContainer?: HTMLUListElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleScroll = throttle(this.handleScroll, 20);\n  }\n\n  componentDidMount() {\n    this.badges = document.getElementsByClassName(\n      'project-activity-version-badge'\n    ) as HTMLCollectionOf<HTMLElement>;\n    this.analyses = document.getElementsByClassName(\n      'project-activity-analysis'\n    ) as HTMLCollectionOf<HTMLElement>;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.scrollContainer) {\n      return;\n    }\n    if (activityQueryChanged(prevProps.query, this.props.query)) {\n      this.resetScrollTop(0, true);\n    }\n  }\n\n  handleScroll = () => this.updateStickyBadges(true);\n\n  resetScrollTop = (newScrollTop: number, forceBadgeAlignement?: boolean) => {\n    if (this.scrollContainer) {\n      this.scrollContainer.scrollTop = newScrollTop;\n    }\n    if (this.badges) {\n      for (let i = 1; i < this.badges.length; i++) {\n        this.badges[i].removeAttribute('originOffsetTop');\n        this.badges[i].classList.remove('sticky');\n      }\n    }\n    this.updateStickyBadges(forceBadgeAlignement);\n  };\n\n  updateStickyBadges = (forceBadgeAlignement?: boolean) => {\n    if (!this.scrollContainer || !this.badges) {\n      return;\n    }\n\n    const { scrollTop } = this.scrollContainer;\n    if (scrollTop == null) {\n      return;\n    }\n\n    let newScrollTop;\n    for (let i = 1; i < this.badges.length; i++) {\n      const badge = this.badges[i];\n      let originOffsetTop = badge.getAttribute('originOffsetTop');\n      if (originOffsetTop == null) {\n        // Set the originOffsetTop attribute, to avoid using getBoundingClientRect\n        originOffsetTop = String(badge.offsetTop);\n        badge.setAttribute('originOffsetTop', originOffsetTop);\n      }\n      if (Number(originOffsetTop) < scrollTop + 18 + i * 2) {\n        if (forceBadgeAlignement && !badge.classList.contains('sticky')) {\n          newScrollTop = originOffsetTop;\n        }\n        badge.classList.add('sticky');\n      } else {\n        badge.classList.remove('sticky');\n      }\n    }\n\n    if (forceBadgeAlignement && newScrollTop != null) {\n      this.scrollContainer.scrollTop = Number(newScrollTop) - 6;\n    }\n  };\n\n  updateSelectedDate = (date: Date) => {\n    this.props.updateQuery({ selectedDate: date });\n  };\n\n  shouldRenderBaselineMarker(analysis: T.ParsedAnalysis): boolean {\n    return Boolean(this.props.leakPeriodDate && isEqual(this.props.leakPeriodDate, analysis.date));\n  }\n\n  renderAnalysis(analysis: T.ParsedAnalysis) {\n    const firstAnalysisKey = this.props.analyses[0].key;\n\n    const selectedDate = this.props.query.selectedDate\n      ? this.props.query.selectedDate.valueOf()\n      : null;\n\n    return (\n      <ProjectActivityAnalysis\n        addCustomEvent={this.props.addCustomEvent}\n        addVersion={this.props.addVersion}\n        analysis={analysis}\n        canAdmin={this.props.canAdmin}\n        canCreateVersion={this.props.project.qualifier === ComponentQualifier.Project}\n        canDeleteAnalyses={this.props.canDeleteAnalyses}\n        changeEvent={this.props.changeEvent}\n        deleteAnalysis={this.props.deleteAnalysis}\n        deleteEvent={this.props.deleteEvent}\n        isBaseline={this.shouldRenderBaselineMarker(analysis)}\n        isFirst={analysis.key === firstAnalysisKey}\n        key={analysis.key}\n        parentScrollContainer={this.scrollContainer}\n        selected={analysis.date.valueOf() === selectedDate}\n        updateSelectedDate={this.updateSelectedDate}\n      />\n    );\n  }\n\n  render() {\n    const byVersionByDay = getAnalysesByVersionByDay(this.props.analyses, this.props.query);\n    const hasFilteredData =\n      byVersionByDay.length > 1 ||\n      (byVersionByDay.length === 1 && Object.keys(byVersionByDay[0].byDay).length > 0);\n    if (this.props.analyses.length === 0 || !hasFilteredData) {\n      return (\n        <div className=\"boxed-group-inner\">\n          {this.props.initializing ? (\n            <div className=\"text-center\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <span className=\"note\">{translate('no_results')}</span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <ul\n        className=\"project-activity-versions-list\"\n        onScroll={this.handleScroll}\n        ref={element => (this.scrollContainer = element)}\n        style={{\n          paddingTop: this.props.project.qualifier === ComponentQualifier.Project ? 52 : undefined\n        }}>\n        {byVersionByDay.map((version, idx) => {\n          const days = Object.keys(version.byDay);\n          if (days.length <= 0) {\n            return null;\n          }\n          return (\n            <li key={version.key || 'noversion'}>\n              {version.version && (\n                <div className={classNames('project-activity-version-badge', { first: idx === 0 })}>\n                  <Tooltip\n                    mouseEnterDelay={0.5}\n                    overlay={`${translate('version')} ${version.version}`}>\n                    <span className=\"analysis-version\">{version.version}</span>\n                  </Tooltip>\n                </div>\n              )}\n              <ul className=\"project-activity-days-list\">\n                {days.map(day => (\n                  <li\n                    className=\"project-activity-day\"\n                    data-day={toShortNotSoISOString(Number(day))}\n                    key={day}>\n                    <div className=\"project-activity-date\">\n                      <DateFormatter date={Number(day)} long={true} />\n                    </div>\n                    <ul className=\"project-activity-analyses-list\">\n                      {version.byDay[day] != null &&\n                        version.byDay[day].map(analysis => this.renderAnalysis(analysis))}\n                    </ul>\n                  </li>\n                ))}\n              </ul>\n            </li>\n          );\n        })}\n        {this.props.analysesLoading && (\n          <li className=\"text-center\">\n            <i className=\"spinner\" />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized/dist/commonjs/AutoSizer';\nimport ZoomTimeLine from 'sonar-ui-common/components/charts/ZoomTimeLine';\nimport { Serie } from '../../types/project-activity';\nimport { hasHistoryData } from './utils';\n\ninterface Props {\n  graphEndDate?: Date;\n  graphStartDate?: Date;\n  leakPeriodDate?: Date;\n  loading: boolean;\n  metricsType: string;\n  series: Serie[];\n  showAreas?: boolean;\n  updateGraphZoom: (from?: Date, to?: Date) => void;\n}\n\nexport default function GraphsZoom(props: Props) {\n  if (props.loading || !hasHistoryData(props.series)) {\n    return null;\n  }\n\n  return (\n    <div className=\"activity-graph-zoom\">\n      <AutoSizer disableHeight={true}>\n        {({ width }) => (\n          <ZoomTimeLine\n            endDate={props.graphEndDate}\n            height={64}\n            leakPeriodDate={props.leakPeriodDate}\n            metricType={props.metricsType}\n            padding={[0, 10, 18, 60]}\n            series={props.series}\n            showAreas={props.showAreas}\n            startDate={props.graphStartDate}\n            updateZoom={props.updateGraphZoom}\n            width={width}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, findLast, maxBy, minBy, sortBy } from 'lodash';\nimport * as React from 'react';\nimport GraphsHeader from '../../../components/activity-graph/GraphsHeader';\nimport GraphsHistory from '../../../components/activity-graph/GraphsHistory';\nimport GraphsZoom from '../../../components/activity-graph/GraphsZoom';\nimport {\n  generateSeries,\n  getActivityGraph,\n  getDisplayedHistoryMetrics,\n  getSeriesMetricType,\n  isCustomGraph,\n  saveActivityGraph,\n  splitSeriesInGraphs\n} from '../../../components/activity-graph/utils';\nimport { GraphType, MeasureHistory, Point, Serie } from '../../../types/project-activity';\nimport { datesQueryChanged, historyQueryChanged, Query } from '../utils';\nimport { PROJECT_ACTIVITY_GRAPH } from './ProjectActivityAppContainer';\n\ninterface Props {\n  analyses: T.ParsedAnalysis[];\n  leakPeriodDate?: Date;\n  loading: boolean;\n  measuresHistory: MeasureHistory[];\n  metrics: T.Metric[];\n  project: string;\n  query: Query;\n  updateQuery: (changes: Partial<Query>) => void;\n}\n\ninterface State {\n  graphStartDate?: Date;\n  graphEndDate?: Date;\n  series: Serie[];\n  graphs: Serie[][];\n}\n\nconst MAX_GRAPH_NB = 2;\nconst MAX_SERIES_PER_GRAPH = 3;\n\nexport default class ProjectActivityGraphs extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const series = generateSeries(\n      props.measuresHistory,\n      props.query.graph,\n      props.metrics,\n      getDisplayedHistoryMetrics(props.query.graph, props.query.customMetrics)\n    );\n    this.state = {\n      series,\n      graphs: splitSeriesInGraphs(series, MAX_GRAPH_NB, MAX_SERIES_PER_GRAPH),\n      ...this.getStateZoomDates(undefined, props, series)\n    };\n    this.updateQueryDateRange = debounce(this.updateQueryDateRange, 500);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    let newSeries;\n    let newGraphs;\n    if (\n      prevProps.measuresHistory !== this.props.measuresHistory ||\n      historyQueryChanged(prevProps.query, this.props.query)\n    ) {\n      newSeries = generateSeries(\n        this.props.measuresHistory,\n        this.props.query.graph,\n        this.props.metrics,\n        getDisplayedHistoryMetrics(this.props.query.graph, this.props.query.customMetrics)\n      );\n      newGraphs = splitSeriesInGraphs(newSeries, MAX_GRAPH_NB, MAX_SERIES_PER_GRAPH);\n    }\n\n    const newDates = this.getStateZoomDates(prevProps, this.props, newSeries);\n\n    if (newSeries || newDates) {\n      let newState = {} as State;\n      if (newSeries) {\n        newState.series = newSeries;\n      }\n      if (newGraphs) {\n        newState.graphs = newGraphs;\n      }\n      if (newDates) {\n        newState = { ...newState, ...newDates };\n      }\n      this.setState(newState);\n    }\n  }\n\n  getStateZoomDates = (prevProps: Props | undefined, props: Props, newSeries?: Serie[]) => {\n    const newDates = {\n      from: props.query.from || undefined,\n      to: props.query.to || undefined\n    };\n    if (!prevProps || datesQueryChanged(prevProps.query, props.query)) {\n      return { graphEndDate: newDates.to, graphStartDate: newDates.from };\n    }\n\n    if (newDates.to === undefined && newDates.from === undefined && newSeries !== undefined) {\n      const firstValid = minBy(\n        newSeries.map(serie => serie.data.find(p => Boolean(p.y || p.y === 0))),\n        'x'\n      );\n      const lastValid = maxBy<Point>(\n        newSeries.map(serie => findLast(serie.data, p => Boolean(p.y || p.y === 0))!),\n        'x'\n      );\n      return {\n        graphEndDate: lastValid && lastValid.x,\n        graphStartDate: firstValid && firstValid.x\n      };\n    }\n    return null;\n  };\n\n  getMetricsTypeFilter = () => {\n    if (this.state.graphs.length < MAX_GRAPH_NB) {\n      return undefined;\n    }\n    return this.state.graphs\n      .filter(graph => graph.length < MAX_SERIES_PER_GRAPH)\n      .map(graph => graph[0].type);\n  };\n\n  addCustomMetric = (metric: string) => {\n    const customMetrics = [...this.props.query.customMetrics, metric];\n    saveActivityGraph(PROJECT_ACTIVITY_GRAPH, this.props.project, GraphType.custom, customMetrics);\n    this.props.updateQuery({ customMetrics });\n  };\n\n  removeCustomMetric = (removedMetric: string) => {\n    const customMetrics = this.props.query.customMetrics.filter(metric => metric !== removedMetric);\n    saveActivityGraph(PROJECT_ACTIVITY_GRAPH, this.props.project, GraphType.custom, customMetrics);\n    this.props.updateQuery({ customMetrics });\n  };\n\n  updateGraph = (graph: GraphType) => {\n    saveActivityGraph(PROJECT_ACTIVITY_GRAPH, this.props.project, graph);\n    if (isCustomGraph(graph) && this.props.query.customMetrics.length <= 0) {\n      const { customGraphs } = getActivityGraph(PROJECT_ACTIVITY_GRAPH, this.props.project);\n      this.props.updateQuery({ graph, customMetrics: customGraphs });\n    } else {\n      this.props.updateQuery({ graph, customMetrics: [] });\n    }\n  };\n\n  updateGraphZoom = (graphStartDate?: Date, graphEndDate?: Date) => {\n    if (graphEndDate !== undefined && graphStartDate !== undefined) {\n      const msDiff = Math.abs(graphEndDate.valueOf() - graphStartDate.valueOf());\n      // 12 hours minimum between the two dates\n      if (msDiff < 1000 * 60 * 60 * 12) {\n        return;\n      }\n    }\n\n    this.setState({ graphStartDate, graphEndDate });\n    this.updateQueryDateRange([graphStartDate, graphEndDate]);\n  };\n\n  updateSelectedDate = (selectedDate?: Date) => this.props.updateQuery({ selectedDate });\n\n  updateQueryDateRange = (dates: Array<Date | undefined>) => {\n    if (dates[0] === undefined || dates[1] === undefined) {\n      this.props.updateQuery({ from: dates[0], to: dates[1] });\n    } else {\n      const sortedDates = sortBy(dates);\n      this.props.updateQuery({ from: sortedDates[0], to: sortedDates[1] });\n    }\n  };\n\n  render() {\n    const { leakPeriodDate, loading, metrics, query } = this.props;\n    const { graphEndDate, graphStartDate, series } = this.state;\n\n    return (\n      <div className=\"project-activity-layout-page-main-inner boxed-group boxed-group-inner\">\n        <GraphsHeader\n          addCustomMetric={this.addCustomMetric}\n          className=\"big-spacer-bottom\"\n          graph={query.graph}\n          metrics={metrics}\n          metricsTypeFilter={this.getMetricsTypeFilter()}\n          removeCustomMetric={this.removeCustomMetric}\n          selectedMetrics={this.props.query.customMetrics}\n          updateGraph={this.updateGraph}\n        />\n        <GraphsHistory\n          analyses={this.props.analyses}\n          graph={query.graph}\n          graphEndDate={graphEndDate}\n          graphStartDate={graphStartDate}\n          graphs={this.state.graphs}\n          leakPeriodDate={leakPeriodDate}\n          loading={loading}\n          measuresHistory={this.props.measuresHistory}\n          removeCustomMetric={this.removeCustomMetric}\n          selectedDate={this.props.query.selectedDate}\n          series={series}\n          updateGraphZoom={this.updateGraphZoom}\n          updateSelectedDate={this.updateSelectedDate}\n        />\n        <GraphsZoom\n          graphEndDate={graphEndDate}\n          graphStartDate={graphStartDate}\n          leakPeriodDate={leakPeriodDate}\n          loading={loading}\n          metricsType={getSeriesMetricType(series)}\n          series={series}\n          showAreas={[GraphType.coverage, GraphType.duplications].includes(query.graph)}\n          updateGraphZoom={this.updateGraphZoom}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateRangeInput from '../../../components/controls/DateRangeInput';\nimport { Query } from '../utils';\n\ninterface Props {\n  from?: Date;\n  to?: Date;\n  onChange: (changes: Partial<Query>) => void;\n}\n\nexport default class ProjectActivityDateInput extends React.PureComponent<Props> {\n  handleChange = ({ from, to }: { from?: Date; to?: Date }) => {\n    this.props.onChange({ from, to });\n  };\n\n  handleResetClick = () => {\n    this.props.onChange({ from: undefined, to: undefined });\n  };\n\n  render() {\n    return (\n      <div>\n        <DateRangeInput\n          onChange={this.handleChange}\n          value={{ from: this.props.from, to: this.props.to }}\n        />\n        <Button\n          className=\"spacer-left\"\n          disabled={this.props.from === undefined && this.props.to === undefined}\n          onClick={this.handleResetClick}>\n          {translate('project_activity.reset_dates')}\n        </Button>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\n\nexport interface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props {\n  option: Option;\n  children?: Element | Text;\n  className?: string;\n  isFocused?: boolean;\n  onFocus: (option: Option, event: React.MouseEvent<HTMLDivElement>) => void;\n  onSelect: (option: Option, event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport default class ProjectActivityEventSelectOption extends React.PureComponent<Props> {\n  handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onSelect(this.props.option, event);\n  };\n\n  handleMouseEnter = (event: React.MouseEvent<HTMLDivElement>) => {\n    this.props.onFocus(this.props.option, event);\n  };\n\n  handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (this.props.isFocused) {\n      return;\n    }\n    this.props.onFocus(this.props.option, event);\n  };\n\n  render() {\n    const { option } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseMove={this.handleMouseMove}\n        role=\"link\"\n        tabIndex={0}\n        title={option.label}>\n        <ProjectEventIcon className={'project-activity-event-icon ' + option.value} />\n        <span className=\"little-spacer-left\">{this.props.children}</span>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { Option } from './ProjectActivityEventSelectOption';\n\ninterface Props {\n  children?: React.ReactNode;\n  value: Option;\n}\n\nexport default function ProjectActivityEventSelectValue({ children, value }: Props) {\n  return (\n    <div className=\"Select-value\" title={value.label}>\n      <div className=\"Select-value-label\">\n        <ProjectEventIcon className={'project-activity-event-icon ' + value.value} />\n        <span className=\"little-spacer-left\">{children}</span>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { APPLICATION_EVENT_TYPES, EVENT_TYPES, Query } from '../utils';\nimport ProjectActivityDateInput from './ProjectActivityDateInput';\nimport ProjectActivityEventSelectOption from './ProjectActivityEventSelectOption';\nimport ProjectActivityEventSelectValue from './ProjectActivityEventSelectValue';\n\ninterface Props {\n  category?: string;\n  from?: Date;\n  project: Pick<T.Component, 'qualifier'>;\n  to?: Date;\n  updateQuery: (changes: Partial<Query>) => void;\n}\n\nexport default class ProjectActivityPageHeader extends React.PureComponent<Props> {\n  handleCategoryChange = (option: { value: string } | null) =>\n    this.props.updateQuery({ category: option ? option.value : '' });\n\n  render() {\n    const isApp = this.props.project.qualifier === 'APP';\n    const eventTypes = isApp ? APPLICATION_EVENT_TYPES : EVENT_TYPES;\n    const options = eventTypes.map(category => ({\n      label: translate('event.category', category),\n      value: category\n    }));\n\n    return (\n      <header className=\"page-header\">\n        {!['VW', 'SVW'].includes(this.props.project.qualifier) && (\n          <Select\n            className={classNames('pull-left big-spacer-right', {\n              'input-medium': !isApp,\n              'input-large': isApp\n            })}\n            clearable={true}\n            onChange={this.handleCategoryChange}\n            optionComponent={ProjectActivityEventSelectOption}\n            options={options}\n            placeholder={translate('project_activity.filter_events') + '...'}\n            searchable={false}\n            value={this.props.category}\n            // @ts-ignore react-select typings are incorrect, they expect `props` of `valueComponent` to be exactly `Option`\n            valueComponent={ProjectActivityEventSelectValue}\n          />\n        )}\n        <ProjectActivityDateInput\n          from={this.props.from}\n          onChange={this.props.updateQuery}\n          to={this.props.to}\n        />\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { MeasureHistory } from '../../../types/project-activity';\nimport { Query } from '../utils';\nimport './projectActivity.css';\nimport ProjectActivityAnalysesList from './ProjectActivityAnalysesList';\nimport ProjectActivityGraphs from './ProjectActivityGraphs';\nimport ProjectActivityPageHeader from './ProjectActivityPageHeader';\n\ninterface Props {\n  addCustomEvent: (analysis: string, name: string, category?: string) => Promise<void>;\n  addVersion: (analysis: string, version: string) => Promise<void>;\n  analyses: T.ParsedAnalysis[];\n  analysesLoading: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteAnalysis: (analysis: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  graphLoading: boolean;\n  initializing: boolean;\n  project: Pick<T.Component, 'configuration' | 'key' | 'leakPeriodDate' | 'qualifier'>;\n  metrics: T.Metric[];\n  measuresHistory: MeasureHistory[];\n  query: Query;\n  updateQuery: (changes: Partial<Query>) => void;\n}\n\nexport default function ProjectActivityApp(props: Props) {\n  const { analyses, measuresHistory, query } = props;\n  const { configuration } = props.project;\n  const canAdmin =\n    (props.project.qualifier === 'TRK' || props.project.qualifier === 'APP') &&\n    (configuration ? configuration.showHistory : false);\n  const canDeleteAnalyses = configuration ? configuration.showHistory : false;\n  return (\n    <div className=\"page page-limited\" id=\"project-activity\">\n      <Suggestions suggestions=\"project_activity\" />\n      <Helmet defer={false} title={translate('project_activity.page')} />\n\n      <A11ySkipTarget anchor=\"activity_main\" />\n\n      <ProjectActivityPageHeader\n        category={query.category}\n        from={query.from}\n        project={props.project}\n        to={query.to}\n        updateQuery={props.updateQuery}\n      />\n\n      <div className=\"layout-page project-activity-page\">\n        <div className=\"layout-page-side-outer project-activity-page-side-outer boxed-group\">\n          <ProjectActivityAnalysesList\n            addCustomEvent={props.addCustomEvent}\n            addVersion={props.addVersion}\n            analyses={analyses}\n            analysesLoading={props.analysesLoading}\n            canAdmin={canAdmin}\n            canDeleteAnalyses={canDeleteAnalyses}\n            changeEvent={props.changeEvent}\n            deleteAnalysis={props.deleteAnalysis}\n            deleteEvent={props.deleteEvent}\n            initializing={props.initializing}\n            leakPeriodDate={\n              props.project.leakPeriodDate ? parseDate(props.project.leakPeriodDate) : undefined\n            }\n            project={props.project}\n            query={props.query}\n            updateQuery={props.updateQuery}\n          />\n        </div>\n        <div className=\"project-activity-layout-page-main\">\n          <ProjectActivityGraphs\n            analyses={analyses}\n            leakPeriodDate={\n              props.project.leakPeriodDate ? parseDate(props.project.leakPeriodDate) : undefined\n            }\n            loading={props.graphLoading}\n            measuresHistory={measuresHistory}\n            metrics={props.metrics}\n            project={props.project.key}\n            query={query}\n            updateQuery={props.updateQuery}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Location } from 'history';\nimport * as React from 'react';\nimport { InjectedRouter } from 'react-router';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { getAllMetrics } from '../../../api/metrics';\nimport * as api from '../../../api/projectActivity';\nimport { getAllTimeMachineData } from '../../../api/time-machine';\nimport {\n  DEFAULT_GRAPH,\n  getActivityGraph,\n  getHistoryMetrics,\n  isCustomGraph\n} from '../../../components/activity-graph/utils';\nimport { getBranchLikeQuery } from '../../../helpers/branch-like';\nimport { BranchLike } from '../../../types/branch-like';\nimport { GraphType, MeasureHistory } from '../../../types/project-activity';\nimport * as actions from '../actions';\nimport {\n  customMetricsChanged,\n  parseQuery,\n  Query,\n  serializeQuery,\n  serializeUrlQuery\n} from '../utils';\nimport ProjectActivityApp from './ProjectActivityApp';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  location: Location;\n  router: Pick<InjectedRouter, 'push' | 'replace'>;\n}\n\nexport interface State {\n  analyses: T.ParsedAnalysis[];\n  analysesLoading: boolean;\n  graphLoading: boolean;\n  initialized: boolean;\n  metrics: T.Metric[];\n  measuresHistory: MeasureHistory[];\n  query: Query;\n}\n\nexport const PROJECT_ACTIVITY_GRAPH = 'sonar_project_activity.graph';\n\nexport default class ProjectActivityAppContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      analyses: [],\n      analysesLoading: false,\n      graphLoading: true,\n      initialized: false,\n      measuresHistory: [],\n      metrics: [],\n      query: parseQuery(props.location.query)\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.shouldRedirect()) {\n      const { graph, customGraphs } = getActivityGraph(\n        PROJECT_ACTIVITY_GRAPH,\n        this.props.component.key\n      );\n      const newQuery = { ...this.state.query, graph };\n      if (isCustomGraph(newQuery.graph)) {\n        newQuery.customMetrics = customGraphs;\n      }\n      this.props.router.replace({\n        pathname: this.props.location.pathname,\n        query: {\n          ...serializeUrlQuery(newQuery),\n          ...getBranchLikeQuery(this.props.branchLike)\n        }\n      });\n    } else {\n      this.firstLoadData(this.state.query, this.props.component);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.location.query !== this.props.location.query) {\n      const query = parseQuery(this.props.location.query);\n      if (query.graph !== this.state.query.graph || customMetricsChanged(this.state.query, query)) {\n        if (this.state.initialized) {\n          this.updateGraphData(query.graph || DEFAULT_GRAPH, query.customMetrics);\n        } else {\n          this.firstLoadData(query, this.props.component);\n        }\n      }\n      this.setState({ query });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  addCustomEvent = (analysis: string, name: string, category?: string) => {\n    return api.createEvent(analysis, name, category).then(({ analysis, ...event }) => {\n      if (this.mounted) {\n        this.setState(actions.addCustomEvent(analysis, event));\n      }\n    });\n  };\n\n  addVersion = (analysis: string, version: string) => {\n    return this.addCustomEvent(analysis, version, 'VERSION');\n  };\n\n  changeEvent = (event: string, name: string) => {\n    return api.changeEvent(event, name).then(({ analysis, ...event }) => {\n      if (this.mounted) {\n        this.setState(actions.changeEvent(analysis, event));\n      }\n    });\n  };\n\n  deleteAnalysis = (analysis: string) => {\n    return api.deleteAnalysis(analysis).then(() => {\n      if (this.mounted) {\n        this.updateGraphData(\n          this.state.query.graph || DEFAULT_GRAPH,\n          this.state.query.customMetrics\n        );\n        this.setState(actions.deleteAnalysis(analysis));\n      }\n    });\n  };\n\n  deleteEvent = (analysis: string, event: string) => {\n    return api.deleteEvent(event).then(() => {\n      if (this.mounted) {\n        this.setState(actions.deleteEvent(analysis, event));\n      }\n    });\n  };\n\n  fetchActivity = (project: string, p: number, ps: number, additional?: T.RawQuery) => {\n    const parameters = { project, p, ps, ...getBranchLikeQuery(this.props.branchLike) };\n    return api\n      .getProjectActivity({ ...additional, ...parameters })\n      .then(({ analyses, paging }) => ({\n        analyses: analyses.map(analysis => ({\n          ...analysis,\n          date: parseDate(analysis.date)\n        })) as T.ParsedAnalysis[],\n        paging\n      }));\n  };\n\n  fetchMeasuresHistory = (metrics: string[]): Promise<MeasureHistory[]> => {\n    if (metrics.length <= 0) {\n      return Promise.resolve([]);\n    }\n    return getAllTimeMachineData({\n      component: this.props.component.key,\n      metrics: metrics.join(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    }).then(({ measures }) =>\n      measures.map(measure => ({\n        metric: measure.metric,\n        history: measure.history.map(analysis => ({\n          date: parseDate(analysis.date),\n          value: analysis.value!\n        }))\n      }))\n    );\n  };\n\n  fetchAllActivities = (topLevelComponent: string) => {\n    this.setState({ analysesLoading: true });\n    this.loadAllActivities(topLevelComponent).then(\n      ({ analyses }) => {\n        if (this.mounted) {\n          this.setState({\n            analyses,\n            analysesLoading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ analysesLoading: false });\n        }\n      }\n    );\n  };\n\n  loadAllActivities = (\n    project: string,\n    prevResult?: { analyses: T.ParsedAnalysis[]; paging: T.Paging }\n  ): Promise<{ analyses: T.ParsedAnalysis[]; paging: T.Paging }> => {\n    if (\n      prevResult &&\n      prevResult.paging.pageIndex * prevResult.paging.pageSize >= prevResult.paging.total\n    ) {\n      return Promise.resolve(prevResult);\n    }\n    const nextPage = prevResult ? prevResult.paging.pageIndex + 1 : 1;\n    return this.fetchActivity(project, nextPage, 500).then(result => {\n      if (!prevResult) {\n        return this.loadAllActivities(project, result);\n      }\n      return this.loadAllActivities(project, {\n        analyses: prevResult.analyses.concat(result.analyses),\n        paging: result.paging\n      });\n    });\n  };\n\n  getTopLevelComponent = (component: T.Component) => {\n    let current = component.breadcrumbs.length - 1;\n    while (\n      current > 0 &&\n      !['TRK', 'VW', 'APP'].includes(component.breadcrumbs[current].qualifier)\n    ) {\n      current--;\n    }\n    return component.breadcrumbs[current].key;\n  };\n\n  filterMetrics({ qualifier }: T.Component, metrics: T.Metric[]) {\n    return ['VW', 'SVW'].includes(qualifier)\n      ? metrics\n      : metrics.filter(metric => metric.key !== 'security_review_rating');\n  }\n\n  firstLoadData(query: Query, component: T.Component) {\n    const graphMetrics = getHistoryMetrics(query.graph || DEFAULT_GRAPH, query.customMetrics);\n    const topLevelComponent = this.getTopLevelComponent(component);\n    Promise.all([\n      this.fetchActivity(topLevelComponent, 1, 100, serializeQuery(query)),\n      getAllMetrics(),\n      this.fetchMeasuresHistory(graphMetrics)\n    ]).then(\n      ([{ analyses }, metrics, measuresHistory]) => {\n        if (this.mounted) {\n          this.setState({\n            analyses,\n            graphLoading: false,\n            initialized: true,\n            measuresHistory,\n            metrics: this.filterMetrics(component, metrics)\n          });\n\n          this.fetchAllActivities(topLevelComponent);\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ initialized: true, graphLoading: false });\n        }\n      }\n    );\n  }\n\n  updateGraphData = (graph: GraphType, customMetrics: string[]) => {\n    const graphMetrics = getHistoryMetrics(graph, customMetrics);\n    this.setState({ graphLoading: true });\n    this.fetchMeasuresHistory(graphMetrics).then(\n      measuresHistory => {\n        if (this.mounted) {\n          this.setState({ graphLoading: false, measuresHistory });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ graphLoading: false, measuresHistory: [] });\n        }\n      }\n    );\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeUrlQuery({\n      ...this.state.query,\n      ...newQuery\n    });\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: {\n        ...query,\n        ...getBranchLikeQuery(this.props.branchLike),\n        id: this.props.component.key\n      }\n    });\n  };\n\n  shouldRedirect = () => {\n    const locationQuery = this.props.location.query;\n    if (!locationQuery) {\n      return false;\n    }\n    const filtered = Object.keys(locationQuery).some(\n      key => key !== 'id' && locationQuery[key] !== ''\n    );\n\n    const { graph, customGraphs } = getActivityGraph(\n      PROJECT_ACTIVITY_GRAPH,\n      this.props.component.key\n    );\n    const emptyCustomGraph = isCustomGraph(graph) && customGraphs.length <= 0;\n\n    // if there is no filter, but there are saved preferences in the localStorage\n    // also don't redirect to custom if there is no metrics selected for it\n    return !filtered && graph != null && graph !== DEFAULT_GRAPH && !emptyCustomGraph;\n  };\n\n  render() {\n    if (this.shouldRedirect()) {\n      return null;\n    }\n\n    return (\n      <ProjectActivityApp\n        addCustomEvent={this.addCustomEvent}\n        addVersion={this.addVersion}\n        analyses={this.state.analyses}\n        analysesLoading={this.state.analysesLoading}\n        changeEvent={this.changeEvent}\n        deleteAnalysis={this.deleteAnalysis}\n        deleteEvent={this.deleteEvent}\n        graphLoading={!this.state.initialized || this.state.graphLoading}\n        initializing={!this.state.initialized}\n        measuresHistory={this.state.measuresHistory}\n        metrics={this.state.metrics}\n        project={this.props.component}\n        query={this.state.query}\n        updateQuery={this.updateQuery}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { State } from './components/ProjectActivityAppContainer';\n\nexport function addCustomEvent(analysis: string, event: T.AnalysisEvent) {\n  return (state: State) => ({\n    analyses: state.analyses.map(item => {\n      if (item.key !== analysis) {\n        return item;\n      }\n      return { ...item, events: [...item.events, event] };\n    })\n  });\n}\n\nexport function deleteEvent(analysis: string, event: string) {\n  return (state: State) => ({\n    analyses: state.analyses.map(item => {\n      if (item.key !== analysis) {\n        return item;\n      }\n      return { ...item, events: item.events.filter(eventItem => eventItem.key !== event) };\n    })\n  });\n}\n\nexport function changeEvent(analysis: string, event: T.AnalysisEvent) {\n  return (state: State) => ({\n    analyses: state.analyses.map(item => {\n      if (item.key !== analysis) {\n        return item;\n      }\n      return {\n        ...item,\n        events: item.events.map(eventItem =>\n          eventItem.key === event.key ? { ...eventItem, ...event } : eventItem\n        )\n      };\n    })\n  });\n}\n\nexport function deleteAnalysis(analysis: string) {\n  return (state: State) => ({ analyses: state.analyses.filter(item => item.key !== analysis) });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nexport enum ComponentQualifier {\n  Application = 'APP',\n  Directory = 'DIR',\n  Developper = 'DEV',\n  File = 'FIL',\n  Portfolio = 'VW',\n  Project = 'TRK',\n  SubPortfolio = 'SVW',\n  SubProject = 'BRC',\n  TestFile = 'UTS'\n}\n\nexport function isPortfolioLike(componentQualifier?: string | ComponentQualifier) {\n  return (\n    !!componentQualifier &&\n    [ComponentQualifier.Portfolio.toString(), ComponentQualifier.SubPortfolio.toString()].includes(\n      componentQualifier\n    )\n  );\n}\n\nexport enum Visibility {\n  Public = 'public',\n  Private = 'private'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { chunk, flatMap, groupBy, sortBy } from 'lodash';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { get, save } from 'sonar-ui-common/helpers/storage';\nimport { localizeMetric } from '../../helpers/measures';\nimport { MetricKey } from '../../types/metrics';\nimport { GraphType, MeasureHistory, Serie } from '../../types/project-activity';\n\nexport const DEFAULT_GRAPH = GraphType.issues;\n\nconst GRAPHS_METRICS_DISPLAYED: T.Dict<string[]> = {\n  [GraphType.issues]: [MetricKey.bugs, MetricKey.code_smells, MetricKey.vulnerabilities],\n  [GraphType.coverage]: [MetricKey.lines_to_cover, MetricKey.uncovered_lines],\n  [GraphType.duplications]: [MetricKey.ncloc, MetricKey.duplicated_lines]\n};\n\nconst GRAPHS_METRICS: T.Dict<string[]> = {\n  [GraphType.issues]: GRAPHS_METRICS_DISPLAYED[GraphType.issues].concat([\n    MetricKey.reliability_rating,\n    MetricKey.security_rating,\n    MetricKey.sqale_rating\n  ]),\n  [GraphType.coverage]: [...GRAPHS_METRICS_DISPLAYED[GraphType.coverage], MetricKey.coverage],\n  [GraphType.duplications]: [\n    ...GRAPHS_METRICS_DISPLAYED[GraphType.duplications],\n    MetricKey.duplicated_lines_density\n  ]\n};\n\nexport function isCustomGraph(graph: GraphType) {\n  return graph === GraphType.custom;\n}\n\nexport function getGraphTypes(ignoreCustom = false) {\n  const graphs = [GraphType.issues, GraphType.coverage, GraphType.duplications];\n  return ignoreCustom ? graphs : [...graphs, GraphType.custom];\n}\n\nexport function hasDataValues(serie: Serie) {\n  return serie.data.some(point => Boolean(point.y || point.y === 0));\n}\n\nexport function hasHistoryData(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1);\n}\n\nexport function getSeriesMetricType(series: Serie[]) {\n  return series.length > 0 ? series[0].type : 'INT';\n}\n\nexport function getDisplayedHistoryMetrics(graph: GraphType, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS_DISPLAYED[graph];\n}\n\nexport function getHistoryMetrics(graph: GraphType, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS[graph];\n}\n\nexport function hasHistoryDataValue(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1 && hasDataValues(serie));\n}\n\nexport function splitSeriesInGraphs(series: Serie[], maxGraph: number, maxSeries: number) {\n  return flatMap(\n    groupBy(series, serie => serie.type),\n    type => chunk(type, maxSeries)\n  ).slice(0, maxGraph);\n}\n\nexport function generateCoveredLinesMetric(\n  uncoveredLines: MeasureHistory,\n  measuresHistory: MeasureHistory[]\n) {\n  const linesToCover = measuresHistory.find(measure => measure.metric === MetricKey.lines_to_cover);\n  return {\n    data: linesToCover\n      ? uncoveredLines.history.map((analysis, idx) => ({\n          x: analysis.date,\n          y: Number(linesToCover.history[idx].value) - Number(analysis.value)\n        }))\n      : [],\n    name: 'covered_lines',\n    translatedName: translate('project_activity.custom_metric.covered_lines'),\n    type: 'INT'\n  };\n}\n\nexport function generateSeries(\n  measuresHistory: MeasureHistory[],\n  graph: GraphType,\n  metrics: T.Metric[] | T.Dict<T.Metric>,\n  displayedMetrics: string[]\n): Serie[] {\n  if (displayedMetrics.length <= 0 || measuresHistory === undefined) {\n    return [];\n  }\n  return sortBy(\n    measuresHistory\n      .filter(measure => displayedMetrics.indexOf(measure.metric) >= 0)\n      .map(measure => {\n        if (measure.metric === MetricKey.uncovered_lines && !isCustomGraph(graph)) {\n          return generateCoveredLinesMetric(measure, measuresHistory);\n        }\n        const metric = findMetric(measure.metric, metrics);\n        return {\n          data: measure.history.map(analysis => ({\n            x: analysis.date,\n            y: metric && metric.type === 'LEVEL' ? analysis.value : Number(analysis.value)\n          })),\n          name: measure.metric,\n          translatedName: metric ? getLocalizedMetricName(metric) : localizeMetric(measure.metric),\n          type: metric ? metric.type : 'INT'\n        };\n      }),\n    serie =>\n      displayedMetrics.indexOf(serie.name === 'covered_lines' ? 'uncovered_lines' : serie.name)\n  );\n}\n\nexport function saveActivityGraph(\n  namespace: string,\n  project: string,\n  graph: GraphType,\n  metrics: string[] = []\n) {\n  save(namespace, graph, project);\n  if (isCustomGraph(graph)) {\n    save(`${namespace}.custom`, metrics.join(','), project);\n  }\n}\n\nexport function getActivityGraph(\n  namespace: string,\n  project: string\n): { graph: GraphType; customGraphs: string[] } {\n  const customGraphs = get(`${namespace}.custom`, project);\n  return {\n    graph: (get(namespace, project) as GraphType) || DEFAULT_GRAPH,\n    customGraphs: customGraphs ? customGraphs.split(',') : []\n  };\n}\n\nfunction findMetric(key: string, metrics: T.Metric[] | T.Dict<T.Metric>) {\n  if (Array.isArray(metrics)) {\n    return metrics.find(metric => metric.key === key);\n  }\n  return metrics[key];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum GraphType {\n  issues = 'issues',\n  coverage = 'coverage',\n  duplications = 'duplications',\n  custom = 'custom'\n}\n\nexport interface HistoryItem {\n  date: Date;\n  value?: string;\n}\n\nexport interface MeasureHistory {\n  metric: string;\n  history: HistoryItem[];\n}\n\nexport interface Serie {\n  data: Point[];\n  name: string;\n  translatedName: string;\n  type: string;\n}\n\nexport interface Point {\n  x: Date;\n  y: number | string | undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as addMonths from 'date-fns/add_months';\nimport * as setMonth from 'date-fns/set_month';\nimport * as setYear from 'date-fns/set_year';\nimport * as subMonths from 'date-fns/sub_months';\nimport { range } from 'lodash';\nimport * as React from 'react';\nimport { DayModifiers, Modifier, Modifiers } from 'react-day-picker';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { ButtonIcon, ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport CalendarIcon from 'sonar-ui-common/components/icons/CalendarIcon';\nimport ChevronLeftIcon from 'sonar-ui-common/components/icons/ChevronLeftIcon';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport {\n  getShortMonthName,\n  getShortWeekDayName,\n  getWeekDayName\n} from 'sonar-ui-common/helpers/l10n';\nimport './DayPicker.css';\nimport './styles.css';\n\nconst DayPicker = lazyLoadComponent(() => import('react-day-picker'), 'DayPicker');\n\ninterface Props {\n  className?: string;\n  currentMonth?: Date;\n  highlightFrom?: Date;\n  highlightTo?: Date;\n  inputClassName?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  name?: string;\n  onChange: (date: Date | undefined) => void;\n  placeholder: string;\n  value?: Date;\n}\n\ninterface State {\n  currentMonth: Date;\n  open: boolean;\n  lastHovered?: Date;\n}\n\ntype Week = [string, string, string, string, string, string, string];\n\nexport default class DateInput extends React.PureComponent<Props, State> {\n  input?: HTMLInputElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { currentMonth: props.value || props.currentMonth || new Date(), open: false };\n  }\n\n  focus = () => {\n    if (this.input) {\n      this.input.focus();\n    }\n    this.openCalendar();\n  };\n\n  handleResetClick = () => {\n    this.closeCalendar();\n    this.props.onChange(undefined);\n  };\n\n  openCalendar = () => {\n    this.setState({\n      currentMonth: this.props.value || this.props.currentMonth || new Date(),\n      lastHovered: undefined,\n      open: true\n    });\n  };\n\n  closeCalendar = () => {\n    this.setState({ open: false });\n  };\n\n  handleDayClick = (day: Date, modifiers: DayModifiers) => {\n    if (!modifiers.disabled) {\n      this.closeCalendar();\n      this.props.onChange(day);\n    }\n  };\n\n  handleDayMouseEnter = (day: Date, modifiers: DayModifiers) => {\n    this.setState({ lastHovered: modifiers.disabled ? undefined : day });\n  };\n\n  handleCurrentMonthChange = ({ value }: { value: number }) => {\n    this.setState((state: State) => ({ currentMonth: setMonth(state.currentMonth, value) }));\n  };\n\n  handleCurrentYearChange = ({ value }: { value: number }) => {\n    this.setState(state => ({ currentMonth: setYear(state.currentMonth, value) }));\n  };\n\n  handlePreviousMonthClick = () => {\n    this.setState(state => ({ currentMonth: subMonths(state.currentMonth, 1) }));\n  };\n\n  handleNextMonthClick = () => {\n    this.setState(state => ({ currentMonth: addMonths(state.currentMonth, 1) }));\n  };\n\n  render() {\n    const { highlightFrom, highlightTo, minDate, value } = this.props;\n    const { lastHovered } = this.state;\n\n    const after = this.props.maxDate || new Date();\n\n    const months = range(12);\n    const years = range(new Date().getFullYear() - 10, new Date().getFullYear() + 1);\n\n    const selectedDays: Modifier[] = value ? [value] : [];\n    let modifiers: Partial<Modifiers> | undefined;\n    const lastHoveredOrValue = lastHovered || value;\n\n    if (highlightFrom && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: highlightFrom, to: lastHoveredOrValue } };\n      selectedDays.push(highlightFrom);\n    }\n    if (highlightTo && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: lastHoveredOrValue, to: highlightTo } };\n      selectedDays.push(highlightTo);\n    }\n\n    const weekdaysLong = range(7).map(getWeekDayName) as Week;\n    const weekdaysShort = range(7).map(getShortWeekDayName) as Week;\n\n    return (\n      <OutsideClickHandler onClickOutside={this.closeCalendar}>\n        <span className={classNames('date-input-control', this.props.className)}>\n          <InputWrapper\n            className={classNames('date-input-control-input', this.props.inputClassName, {\n              'is-filled': this.props.value !== undefined\n            })}\n            innerRef={node => (this.input = node)}\n            name={this.props.name}\n            onFocus={this.openCalendar}\n            placeholder={this.props.placeholder}\n            readOnly={true}\n            type=\"text\"\n            value={value}\n          />\n          <CalendarIcon className=\"date-input-control-icon\" fill=\"\" />\n          {this.props.value !== undefined && (\n            <ClearButton\n              className=\"button-tiny date-input-control-reset\"\n              iconProps={{ size: 12 }}\n              onClick={this.handleResetClick}\n            />\n          )}\n          {this.state.open && (\n            <div className=\"date-input-calendar\">\n              <nav className=\"date-input-calendar-nav\">\n                <ButtonIcon className=\"button-small\" onClick={this.handlePreviousMonthClick}>\n                  <ChevronLeftIcon />\n                </ButtonIcon>\n                <div className=\"date-input-calender-month\">\n                  <Select\n                    className=\"date-input-calender-month-select\"\n                    onChange={this.handleCurrentMonthChange}\n                    options={months.map(month => ({\n                      label: getShortMonthName(month),\n                      value: month\n                    }))}\n                    value={this.state.currentMonth.getMonth()}\n                  />\n                  <Select\n                    className=\"date-input-calender-month-select spacer-left\"\n                    onChange={this.handleCurrentYearChange}\n                    options={years.map(year => ({ label: String(year), value: year }))}\n                    value={this.state.currentMonth.getFullYear()}\n                  />\n                </div>\n                <ButtonIcon className=\"button-small\" onClick={this.handleNextMonthClick}>\n                  <ChevronRightIcon />\n                </ButtonIcon>\n              </nav>\n              <DayPicker\n                captionElement={<NullComponent />}\n                disabledDays={{ after, before: minDate }}\n                firstDayOfWeek={1}\n                modifiers={modifiers}\n                month={this.state.currentMonth}\n                navbarElement={<NullComponent />}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n                selectedDays={selectedDays}\n                weekdaysLong={weekdaysLong}\n                weekdaysShort={weekdaysShort}\n              />\n            </div>\n          )}\n        </span>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nfunction NullComponent() {\n  return null;\n}\n\ntype InputWrapperProps = T.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value'> &\n  InjectedIntlProps & {\n    innerRef: React.Ref<HTMLInputElement>;\n    value: Date | undefined;\n  };\n\nconst InputWrapper = injectIntl(({ innerRef, intl, value, ...other }: InputWrapperProps) => {\n  const formattedValue =\n    value && intl.formatDate(value, { year: 'numeric', month: 'short', day: 'numeric' });\n  return <input {...other} ref={innerRef} value={formattedValue || ''} />;\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".DayPicker{display:inline-block}.DayPicker-wrapper{position:relative;-webkit-user-select:none;-ms-user-select:none;user-select:none;padding-bottom:8px;flex-direction:row}.DayPicker-Months{display:flex;flex-wrap:wrap;justify-content:center}.DayPicker-Month{display:table;border-collapse:collapse;border-spacing:0;-webkit-user-select:none;-ms-user-select:none;user-select:none;margin:8px 8px 0}.DayPicker-Weekdays{display:table-header-group}.DayPicker-WeekdaysRow{display:table-row}.DayPicker-Weekday{display:table-cell;padding:8px;font-size:12px;text-align:center;color:#999}.DayPicker-Weekday abbr[title]{border-bottom:none;text-decoration:none}.DayPicker-Body{display:table-row-group}.DayPicker-Week{display:table-row}.DayPicker-Day{display:table-cell;line-height:15px;padding:8px;text-align:center;cursor:pointer;vertical-align:top;outline:none}.DayPicker--interactionDisabled .DayPicker-Day{cursor:default}.DayPicker-Footer{padding-top:8px}.DayPicker-Day--today{font-weight:700}.DayPicker-Day--outside{cursor:default;color:#8b9898}.DayPicker-Day--disabled{color:#cdcdcd;cursor:not-allowed}.DayPicker-Day--sunday{background-color:#f7f8f8}.DayPicker-Day--sunday:not(.DayPicker-Day--today){color:#dce0e0}.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:#4b9fd5;color:#fff}.DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--highlighted):not(.DayPicker-Day--outside):hover{background-color:#f3f3f3}.DayPicker-Day--highlighted:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside){background-color:#cae3f2}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".date-input-control{position:relative;display:inline-block;cursor:pointer}.date-input-control-input{width:130px;padding-left:24px!important;cursor:pointer}.date-input-control-input.is-filled{padding-right:16px!important}.date-input-control-icon{position:absolute;top:4px;left:4px}.date-input-control-icon path{fill:#cdcdcd;transition:fill .3s ease}.date-input-control-input:focus+.date-input-control-icon path{fill:#4b9fd5}.date-input-control-reset{position:absolute;top:4px;right:4px;border:none}.date-input-calendar{position:absolute;z-index:7500;top:100%;left:0;border:1px solid #e6e6e6;background-color:#fff;box-shadow:0 6px 12px rgba(0,0,0,.175)}.date-input-calendar-nav{display:flex;justify-content:space-between;align-items:center;padding-top:8px;padding-left:8px;padding-right:8px}.date-input-calender-month-select{width:70px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateInput from './DateInput';\n\ntype DateRange = { from?: Date; to?: Date };\n\ninterface Props {\n  className?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  onChange: (date: DateRange) => void;\n  value?: DateRange;\n}\n\nexport default class DateRangeInput extends React.PureComponent<Props> {\n  toDateInput?: DateInput | null;\n\n  get from() {\n    return this.props.value && this.props.value.from;\n  }\n\n  get to() {\n    return this.props.value && this.props.value.to;\n  }\n\n  handleFromChange = (from: Date | undefined) => {\n    this.props.onChange({ from, to: this.to });\n\n    // use `setTimeout` to work around the immediate closing of the `toDateInput`\n    setTimeout(() => {\n      if (from && !this.to && this.toDateInput) {\n        this.toDateInput.focus();\n      }\n    }, 0);\n  };\n\n  handleToChange = (to: Date | undefined) => {\n    this.props.onChange({ from: this.from, to });\n  };\n\n  render() {\n    return (\n      <div className={classNames('display-inline-flex-center', this.props.className)}>\n        <DateInput\n          currentMonth={this.to}\n          data-test=\"from\"\n          highlightTo={this.to}\n          maxDate={this.to}\n          onChange={this.handleFromChange}\n          placeholder={translate('start_date')}\n          value={this.from}\n        />\n        <span className=\"note little-spacer-left little-spacer-right\">{translate('to_')}</span>\n        <DateInput\n          currentMonth={this.from}\n          data-test=\"to\"\n          highlightFrom={this.from}\n          minDate={this.from}\n          onChange={this.handleToChange}\n          placeholder={translate('end_date')}\n          ref={element => (this.toDateInput = element)}\n          value={this.to}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as startOfDay from 'date-fns/start_of_day';\nimport { isEqual } from 'lodash';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsDate,\n  parseAsString,\n  serializeDate,\n  serializeString,\n  serializeStringArray\n} from 'sonar-ui-common/helpers/query';\nimport { DEFAULT_GRAPH } from '../../components/activity-graph/utils';\nimport { GraphType } from '../../types/project-activity';\n\nexport interface Query {\n  category: string;\n  customMetrics: string[];\n  from?: Date;\n  graph: GraphType;\n  project: string;\n  selectedDate?: Date;\n  to?: Date;\n}\n\nexport const EVENT_TYPES = ['VERSION', 'QUALITY_GATE', 'QUALITY_PROFILE', 'OTHER'];\nexport const APPLICATION_EVENT_TYPES = ['QUALITY_GATE', 'DEFINITION_CHANGE', 'OTHER'];\n\nexport function activityQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.category !== nextQuery.category || datesQueryChanged(prevQuery, nextQuery);\n}\n\nexport function customMetricsChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.customMetrics, nextQuery.customMetrics);\n}\n\nexport function datesQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.from, nextQuery.from) || !isEqual(prevQuery.to, nextQuery.to);\n}\n\nexport function historyQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.graph !== nextQuery.graph;\n}\n\nexport function selectedDateQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.selectedDate, nextQuery.selectedDate);\n}\n\ninterface AnalysesByDay {\n  byDay: T.Dict<T.ParsedAnalysis[]>;\n  version: string | null;\n  key: string | null;\n}\n\nexport function getAnalysesByVersionByDay(\n  analyses: T.ParsedAnalysis[],\n  query: Pick<Query, 'category' | 'from' | 'to'>\n) {\n  return analyses.reduce<AnalysesByDay[]>((acc, analysis) => {\n    let currentVersion = acc[acc.length - 1];\n    const versionEvent = analysis.events.find(event => event.category === 'VERSION');\n    if (versionEvent) {\n      const newVersion = { version: versionEvent.name, key: versionEvent.key, byDay: {} };\n      if (!currentVersion || Object.keys(currentVersion.byDay).length > 0) {\n        acc.push(newVersion);\n      } else {\n        acc[acc.length - 1] = newVersion;\n      }\n      currentVersion = newVersion;\n    } else if (!currentVersion) {\n      // APPs don't have version events, so let's create a fake one\n      currentVersion = { version: null, key: null, byDay: {} };\n      acc.push(currentVersion);\n    }\n\n    const day = startOfDay(parseDate(analysis.date))\n      .getTime()\n      .toString();\n\n    let matchFilters = true;\n    if (query.category || query.from || query.to) {\n      const isAfterFrom = !query.from || analysis.date >= query.from;\n      const isBeforeTo = !query.to || analysis.date <= query.to;\n      const hasSelectedCategoryEvents =\n        !query.category || analysis.events.find(event => event.category === query.category) != null;\n      matchFilters = isAfterFrom && isBeforeTo && hasSelectedCategoryEvents;\n    }\n\n    if (matchFilters) {\n      if (!currentVersion.byDay[day]) {\n        currentVersion.byDay[day] = [];\n      }\n      currentVersion.byDay[day].push(analysis);\n    }\n    return acc;\n  }, []);\n}\n\nexport function parseQuery(urlQuery: T.RawQuery): Query {\n  return {\n    category: parseAsString(urlQuery['category']),\n    customMetrics: parseAsArray(urlQuery['custom_metrics'], parseAsString),\n    from: parseAsDate(urlQuery['from']),\n    graph: parseGraph(urlQuery['graph']),\n    project: parseAsString(urlQuery['id']),\n    to: parseAsDate(urlQuery['to']),\n    selectedDate: parseAsDate(urlQuery['selected_date'])\n  };\n}\n\nexport function serializeQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    from: serializeDate(query.from),\n    project: serializeString(query.project),\n    to: serializeDate(query.to)\n  });\n}\n\nexport function serializeUrlQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    custom_metrics: serializeStringArray(query.customMetrics),\n    from: serializeDate(query.from),\n    graph: serializeGraph(query.graph),\n    id: serializeString(query.project),\n    to: serializeDate(query.to),\n    selected_date: serializeDate(query.selectedDate)\n  });\n}\n\nfunction parseGraph(value?: string) {\n  const graph = parseAsString(value);\n  return Object.keys(GraphType).includes(graph) ? (graph as GraphType) : DEFAULT_GRAPH;\n}\n\nfunction serializeGraph(value?: GraphType) {\n  return value === DEFAULT_GRAPH ? undefined : value;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getProjectActivity(\n  data: {\n    project: string;\n    category?: string;\n    from?: string;\n    p?: number;\n    ps?: number;\n  } & BranchParameters\n): Promise<{ analyses: T.Analysis[]; paging: T.Paging }> {\n  return getJSON('/api/project_analyses/search', data).catch(throwGlobalError);\n}\n\ninterface CreateEventResponse {\n  analysis: string;\n  key: string;\n  name: string;\n  category: string;\n  description?: string;\n}\n\nexport function createEvent(\n  analysis: string,\n  name: string,\n  category?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { analysis, name };\n  if (category) {\n    data.category = category;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/create_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteEvent(event: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete_event', { event }).catch(throwGlobalError);\n}\n\nexport function changeEvent(\n  event: string,\n  name?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { event };\n  if (name) {\n    data.name = name;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/update_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteAnalysis(analysis: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete', { analysis }).catch(throwGlobalError);\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { limitComponentName } from 'sonar-ui-common/helpers/path';\nimport { isMainBranch } from '../../../helpers/branch-like';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BranchLike } from '../../../types/branch-like';\n\nexport type DefinitionChangeEvent = T.AnalysisEvent &\n  Required<Pick<T.AnalysisEvent, 'definitionChange'>>;\n\nexport function isDefinitionChangeEvent(event: T.AnalysisEvent): event is DefinitionChangeEvent {\n  return event.category === 'DEFINITION_CHANGE' && event.definitionChange !== undefined;\n}\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  event: DefinitionChangeEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class DefinitionChangeEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  renderProjectLink = (project: { key: string; name: string }, branch: string | undefined) => (\n    <Link\n      onClick={this.stopPropagation}\n      title={project.name}\n      to={getProjectUrl(project.key, branch)}>\n      {limitComponentName(project.name, 28)}\n    </Link>\n  );\n\n  renderBranch = (branch = translate('branches.main_branch')) => (\n    <span className=\"nowrap\" title={branch}>\n      <BranchIcon className=\"little-spacer-left text-text-top\" />\n      {branch}\n    </span>\n  );\n\n  renderProjectChange(project: {\n    changeType: string;\n    key: string;\n    name: string;\n    branch?: string;\n    newBranch?: string;\n    oldBranch?: string;\n  }) {\n    const mainBranch = !this.props.branchLike || isMainBranch(this.props.branchLike);\n\n    if (project.changeType === 'ADDED') {\n      const message = mainBranch\n        ? 'event.definition_change.added'\n        : 'event.definition_change.branch_added';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'REMOVED') {\n      const message = mainBranch\n        ? 'event.definition_change.removed'\n        : 'event.definition_change.branch_removed';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'BRANCH_CHANGED') {\n      return (\n        <FormattedMessage\n          defaultMessage={translate('event.definition_change.branch_replaced')}\n          id=\"event.definition_change.branch_replaced\"\n          values={{\n            project: this.renderProjectLink(project, project.newBranch),\n            oldBranch: this.renderBranch(project.oldBranch),\n            newBranch: this.renderBranch(project.newBranch)\n          }}\n        />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <>\n        <span className=\"note\">{translate('event.category', event.category)}:</span>\n\n        <div>\n          <ResetButtonLink\n            className=\"project-activity-event-inner-more-link\"\n            onClick={this.toggleProjectsList}\n            stopPropagation={true}>\n            {expanded ? translate('hide') : translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n          </ResetButtonLink>\n        </div>\n\n        {expanded && (\n          <ul className=\"spacer-left spacer-top\">\n            {event.definitionChange.projects.map(project => (\n              <li className=\"display-flex-center spacer-top\" key={project.key}>\n                {this.renderProjectChange(project)}\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\n\nexport type RichQualityGateEvent = T.AnalysisEvent & Required<Pick<T.AnalysisEvent, 'qualityGate'>>;\n\nexport function isRichQualityGateEvent(event: T.AnalysisEvent): event is RichQualityGateEvent {\n  return event.category === 'QUALITY_GATE' && event.qualityGate !== undefined;\n}\n\ninterface Props {\n  event: RichQualityGateEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class RichQualityGateEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <>\n        <span className=\"note spacer-right\">{translate('event.category', event.category)}:</span>\n        {event.qualityGate.stillFailing ? (\n          <FormattedMessage\n            defaultMessage={translate('event.quality_gate.still_x')}\n            id=\"event.quality_gate.still_x\"\n            values={{ status: <Level level={event.qualityGate.status} small={true} /> }}\n          />\n        ) : (\n          <Level level={event.qualityGate.status} small={true} />\n        )}\n\n        <div>\n          {event.qualityGate.failing.length > 0 && (\n            <ResetButtonLink\n              className=\"project-activity-event-inner-more-link\"\n              onClick={this.toggleProjectsList}\n              stopPropagation={true}>\n              {expanded ? translate('hide') : translate('more')}\n              <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n            </ResetButtonLink>\n          )}\n        </div>\n\n        {expanded && (\n          <ul className=\"spacer-left spacer-top\">\n            {event.qualityGate.failing.map(project => (\n              <li className=\"display-flex-center spacer-top\" key={project.key}>\n                <Level\n                  aria-label={translate('quality_gates.status')}\n                  className=\"spacer-right\"\n                  level={event.qualityGate.status}\n                  small={true}\n                />\n                <div className=\"flex-1 text-ellipsis\">\n                  <Link\n                    onClick={this.stopPropagation}\n                    title={project.name}\n                    to={getProjectUrl(project.key, project.branch)}>\n                    <span aria-label={translateWithParameters('project_x', project.name)}>\n                      {project.name}\n                    </span>\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}